{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/lib/auth-client.ts"],"sourcesContent":["import { createAuthClient } from \"better-auth/react\";\nimport { usernameClient } from \"better-auth/client/plugins\";\n\nexport const authClient = createAuthClient({\n  //baseURL: \"http://localhost:3000\" // the base url of your auth server\n  plugins: [usernameClient()],\n});\n\nexport const { signIn, signUp, signOut, useSession } = createAuthClient();\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAAA;;;AAEO,MAAM,aAAa,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD,EAAE;IACzC,sEAAsE;IACtE,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,iBAAc,AAAD;KAAI;AAC7B;AAEO,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/components/auth/SignOut.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { authClient } from \"@/app/lib/auth-client\";\n\nconst SignOut = () => {\n  const router = useRouter();\n  const handleSignOut = async () => {\n    await authClient.signOut({\n      fetchOptions: {\n        onSuccess: () => {\n          router.push(\"/\");\n        },\n      },\n    });\n  };\n\n  return (\n    <button className=\"hover:bg-slate-400\" onClick={handleSignOut}>\n      SIGN OUT\n    </button>\n  );\n};\n\nexport default SignOut;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU;IACd,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,gBAAgB;QACpB,MAAM,4HAAA,CAAA,aAAU,CAAC,OAAO,CAAC;YACvB,cAAc;gBACZ,WAAW;oBACT,OAAO,IAAI,CAAC;gBACd;YACF;QACF;IACF;IAEA,qBACE,8OAAC;QAAO,WAAU;QAAqB,SAAS;kBAAe;;;;;;AAInE;uCAEe"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/components/layout/ModeToggle.tsx"],"sourcesContent":["// components/ToggleComponent.tsx\n\"use client\";\n\nimport { useTheme } from \"next-themes\";\n\nconst ModeToggle = () => {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <button\n      onClick={() => (theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\"))}\n      className=\"p-2 border rounded transition\"\n      style={{\n        backgroundColor: theme === \"dark\" ? \"#333\" : \"#fff\",\n        color: theme === \"dark\" ? \"#fff\" : \"#000\",\n      }}\n    >\n      {theme === \"dark\" ? \"üåô Dark Mode\" : \"‚òÄÔ∏è Light Mode\"}\n    </button>\n  );\n};\n\nexport default ModeToggle;\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AAFA;;;AAIA,MAAM,aAAa;IACjB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEnC,qBACE,8OAAC;QACC,SAAS,IAAO,UAAU,SAAS,SAAS,WAAW,SAAS;QAChE,WAAU;QACV,OAAO;YACL,iBAAiB,UAAU,SAAS,SAAS;YAC7C,OAAO,UAAU,SAAS,SAAS;QACrC;kBAEC,UAAU,SAAS,iBAAiB;;;;;;AAG3C;uCAEe"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/components/layout/ThemeProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\n\n// Define theme context\ninterface ThemeContextType {\n  theme: \"light\" | \"dark\";\n  toggleTheme: () => void;\n}\n\n// Create context\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [theme, setTheme] = useState<\"light\" | \"dark\">(\"light\");\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    // Get stored theme or use system preference\n    const storedTheme = localStorage.getItem(\"theme\") as \"light\" | \"dark\";\n    const systemPrefersDark = window.matchMedia(\n      \"(prefers-color-scheme: dark)\"\n    ).matches;\n    setTheme(storedTheme || (systemPrefersDark ? \"dark\" : \"light\"));\n    setMounted(true);\n  }, []);\n\n  // Toggle function\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem(\"theme\", newTheme);\n  };\n\n  // Prevent hydration mismatch\n  if (!mounted) return <>{children}</>;\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <div data-theme={theme} style={{ colorScheme: theme }}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\n// Custom hook to use theme\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) throw new Error(\"useTheme must be used within a ThemeProvider\");\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAUA,iBAAiB;AACjB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,gBAAyD,CAAC,EACrE,QAAQ,EACT;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,4CAA4C;QAC5C,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,MAAM,oBAAoB,OAAO,UAAU,CACzC,gCACA,OAAO;QACT,SAAS,eAAe,CAAC,oBAAoB,SAAS,OAAO;QAC7D,WAAW;IACb,GAAG,EAAE;IAEL,kBAAkB;IAClB,MAAM,cAAc;QAClB,MAAM,WAAW,UAAU,UAAU,SAAS;QAC9C,SAAS;QACT,aAAa,OAAO,CAAC,SAAS;IAChC;IAEA,6BAA6B;IAC7B,IAAI,CAAC,SAAS,qBAAO;kBAAG;;IAExB,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAY;kBACjD,cAAA,8OAAC;YAAI,cAAY;YAAO,OAAO;gBAAE,aAAa;YAAM;sBACjD;;;;;;;;;;;AAIT;AAGO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/getReportTypes.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function getReportTypes() {\n  // Fetch the report types from the database.\n  const types = await db.reportType.findMany();\n  // Map the result to a simpler array of objects if needed.\n  return types.map((type) => ({\n    id: type.id,\n    name: type.name,\n  }));\n}\n"],"names":[],"mappings":";;;;;IAIsB"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/getReports.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function getReports(timeRange: number = 4) {\n  const cutoffTime = new Date();\n  cutoffTime.setHours(cutoffTime.getHours() - timeRange);\n\n  // Fetch the report types from the database.\n  const reports = await db.report.findMany({\n    where: {\n      createdAt: {\n        gte: cutoffTime,\n      },\n    },\n    orderBy: {\n      createdAt: \"desc\",\n    },\n  });\n  // Map the result to a simpler array of objects if needed.\n  return reports;\n}\n"],"names":[],"mappings":";;;;;IAIsB"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/components/layout/DataProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { getReportTypes } from \"@/actions/getReportTypes\";\nimport { getReports } from \"@/actions/getReports\";\nimport { io } from \"socket.io-client\";\n\n// ‚úÖ Define types for reports, report types, and user settings\ninterface ReportType {\n  id: number;\n  name: string;\n}\n\ninterface Report {\n  id: number;\n  reportTypeId: number;\n  lat: number;\n  long: number;\n  description: string | null;\n  image: string | null;\n  createdAt: string; // Prisma usually returns ISO date strings\n  updatedAt: string;\n  departedAt: string | null;\n  trustScore: number;\n  submittedById: string;\n}\n\ninterface UserSettings {\n  theme: \"light\" | \"dark\";\n}\n\ninterface DataContextType {\n  reportTypes: ReportType[];\n  reports: Report[];\n  setReports: Dispatch<SetStateAction<Report[]>>;\n  userSettings: UserSettings;\n  setUserSettings: Dispatch<SetStateAction<UserSettings>>;\n  timeRange: number;\n  setTimeRange: Dispatch<SetStateAction<number>>;\n}\n\n// ‚úÖ Provide default values for context (empty arrays, defaults for settings)\nconst DataContext = createContext<DataContextType>({\n  reportTypes: [],\n  reports: [],\n  setReports: () => {}, // Temporary placeholder function\n  userSettings: { theme: \"light\" },\n  setUserSettings: () => {}, // Temporary placeholder function\n  timeRange: 4,\n  setTimeRange: () => {}, // Temporary placeholder function\n});\n\n// ‚úÖ Properly type the provider component\nexport const DataProvider = ({ children }: { children: ReactNode }) => {\n  const [reportTypes, setReportTypes] = useState<ReportType[]>([]);\n  const [reports, setReports] = useState<Report[]>([]);\n  const [timeRange, setTimeRange] = useState<number>(4);\n  const [userSettings, setUserSettings] = useState<UserSettings>({\n    theme: \"light\",\n  });\n\n  // ‚úÖ Fetch report types once\n  useEffect(() => {\n    const fetchReportTypes = async () => {\n      const types = await getReportTypes();\n      setReportTypes(types);\n    };\n    fetchReportTypes();\n\n    const socket = io(\"http://localhost:3005\"); // Adjust to match your socket server URL\n\n    socket.on(\"new-report\", (data: Report) => {\n      setReports((prevReports) => {\n        if (prevReports.some((r) => r.id === data.id)) {\n          return prevReports;\n        }\n\n        return [\n          ...prevReports,\n          {\n            ...data,\n            createdAt:\n              data.createdAt instanceof Date\n                ? data.createdAt.toISOString()\n                : data.createdAt,\n            updatedAt:\n              data.updatedAt instanceof Date\n                ? data.updatedAt.toISOString()\n                : data.updatedAt,\n            departedAt:\n              data.departedAt instanceof Date\n                ? data.departedAt.toISOString()\n                : null,\n          },\n        ];\n      });\n    });\n\n    socket.on(\"report-deleted\", ({ reportId }: { reportId: number }) => {\n      setReports((prevReports) => prevReports.filter((r) => r.id !== reportId));\n    });\n\n    return () => {\n      socket.off(\"new-report\");\n      socket.off(\"report-deleted\");\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchReports = async () => {\n      try {\n        const serverReports = await getReports(timeRange);\n\n        // ‚úÖ Convert Date objects to ISO strings\n        const formattedReports = serverReports.map((report) => ({\n          ...report,\n          createdAt:\n            report.createdAt instanceof Date\n              ? report.createdAt.toISOString()\n              : report.createdAt,\n          updatedAt:\n            report.updatedAt instanceof Date\n              ? report.updatedAt.toISOString()\n              : report.updatedAt,\n          departedAt:\n            report.departedAt instanceof Date\n              ? report.departedAt.toISOString()\n              : null,\n        }));\n\n        setReports(formattedReports);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching reports:\", error);\n      }\n    };\n    fetchReports();\n  }, [timeRange]);\n\n  return (\n    <DataContext.Provider\n      value={{\n        reportTypes,\n        reports,\n        setReports,\n        userSettings,\n        setUserSettings,\n        timeRange,\n        setTimeRange,\n      }}\n    >\n      {children}\n    </DataContext.Provider>\n  );\n};\n\n// ‚úÖ Custom hook for easy data access\nexport const useData = () => useContext(DataContext);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/components/socketProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { io, Socket } from \"socket.io-client\";\n\ninterface SocketContextType {\n  socket: Socket | null;\n}\n\ninterface Props {\n  children: React.ReactNode;\n}\nconst SocketContext = createContext<SocketContextType | null>(null);\n\nexport const SocketProvider: React.FC<Props> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  useEffect(() => {\n    // const socketInstance = io(\"http://localhost:3005\");  for different server websocket url\n    const socketInstance = io(\"http://localhost:3005\");\n\n    setSocket(socketInstance);\n\n    return () => {\n      socketInstance.disconnect();\n    };\n  }, []);\n\n  return (\n    <SocketContext.Provider value={{ socket }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocket = (): Socket | null => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error(\"useSocket must be used within a SocketProvider\");\n  }\n  return context.socket;\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAHA;;;;AAYA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA4B;AAEvD,MAAM,iBAAkC,CAAC,EAAE,QAAQ,EAAE;IAC1D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,0FAA0F;QAC1F,MAAM,iBAAiB,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE;QAE1B,UAAU;QAEV,OAAO;YACL,eAAe,UAAU;QAC3B;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;QAAO;kBACrC;;;;;;AAGP;AAEO,MAAM,YAAY;IACvB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,QAAQ,MAAM;AACvB"}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}