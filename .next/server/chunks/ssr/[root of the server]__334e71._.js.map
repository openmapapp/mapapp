{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0BACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient();\n};\n\ndeclare const globalThis: {\n  prismaGlobal: ReturnType<typeof prismaClientSingleton>;\n} & typeof global;\n\nconst db = globalThis.prismaGlobal ?? prismaClientSingleton();\n\nexport default db;\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prismaGlobal = db;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC5B,OAAO,IAAI,6HAAA,CAAA,eAAY;AACzB;AAMA,MAAM,KAAK,WAAW,YAAY,IAAI;uCAEvB;AAEf,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/getReports.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function getReports(timeRange: number = 4) {\n  const cutoffTime = new Date();\n  cutoffTime.setHours(cutoffTime.getHours() - timeRange);\n\n  // Fetch the report types from the database.\n  const reports = await db.report.findMany({\n    where: {\n      createdAt: {\n        gte: cutoffTime,\n      },\n    },\n    orderBy: {\n      createdAt: \"desc\",\n    },\n  });\n  // Map the result to a simpler array of objects if needed.\n  return reports;\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAQ,GAAR,WAAW,YAAoB,CAAC;IACpD,MAAM,aAAa,IAAI;IACvB,WAAW,QAAQ,CAAC,WAAW,QAAQ,KAAK;IAE5C,4CAA4C;IAC5C,MAAM,UAAU,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;QACvC,OAAO;YACL,WAAW;gBACT,KAAK;YACP;QACF;QACA,SAAS;YACP,WAAW;QACb;IACF;IACA,0DAA0D;IAC1D,OAAO;AACT;;;IAjBsB;;AAAA,+OAAA"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/getReportTypes.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function getReportTypes() {\n  // Fetch the report types from the database.\n  const types = await db.reportType.findMany();\n  // Map the result to a simpler array of objects if needed.\n  return types.map((type) => ({\n    id: type.id,\n    name: type.name,\n    fields: type.fields,\n  }));\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAY,GAAZ;IACpB,4CAA4C;IAC5C,MAAM,QAAQ,MAAM,kGAAA,CAAA,UAAE,CAAC,UAAU,CAAC,QAAQ;IAC1C,0DAA0D;IAC1D,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;YAC1B,IAAI,KAAK,EAAE;YACX,MAAM,KAAK,IAAI;YACf,QAAQ,KAAK,MAAM;QACrB,CAAC;AACH;;;IATsB;;AAAA,+OAAA"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/postReport.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\nimport { Prisma } from \"@prisma/client\";\n\ninterface ReportPayload {\n  latitude: number;\n  longitude: number;\n  reportTypeId: number;\n  trustScore: number;\n  userId: string;\n  description?: Record<string, string>;\n}\n\nexport async function postReport(payload: ReportPayload) {\n  try {\n    const {\n      latitude,\n      longitude,\n      reportTypeId,\n      trustScore,\n      userId,\n      description = {},\n    } = payload;\n\n    const image = null;\n\n    const report = await db.report.create({\n      data: {\n        lat: latitude,\n        long: longitude,\n        description: Object.keys(description).length\n          ? (description as Prisma.JsonObject)\n          : Prisma.JsonNull,\n        image: image ?? null,\n        trustScore,\n        submittedById: userId,\n        reportTypeId,\n      },\n    });\n\n    console.log(\"Report posted:\", report);\n\n    // Emit new report event via WebSocket\n    await fetch(\"http://localhost:3005/api/new-report\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(report),\n    });\n\n    return report;\n  } catch (error) {\n    console.error(\"Error posting report\", error);\n    return { error: \"Failed to post report\" };\n  }\n}\n\nexport async function handleDeletedUser(userId: string) {\n  try {\n    await db.report.updateMany({\n      where: { submittedById: userId },\n      data: { deletedUserId: userId },\n    });\n  } catch (error) {\n    console.error(\"Error deleting user\", error);\n    return { error: \"Failed to delete user\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;AAWO,eAAe,uCAAQ,GAAR,WAAW,OAAsB;IACrD,IAAI;QACF,MAAM,EACJ,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,UAAU,EACV,MAAM,EACN,cAAc,CAAC,CAAC,EACjB,GAAG;QAEJ,MAAM,QAAQ;QAEd,MAAM,SAAS,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;YACpC,MAAM;gBACJ,KAAK;gBACL,MAAM;gBACN,aAAa,OAAO,IAAI,CAAC,aAAa,MAAM,GACvC,cACD,6HAAA,CAAA,SAAM,CAAC,QAAQ;gBACnB,OAAO,SAAS;gBAChB;gBACA,eAAe;gBACf;YACF;QACF;QAEA,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,sCAAsC;QACtC,MAAM,MAAM,wCAAwC;YAClD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;YAAE,OAAO;QAAwB;IAC1C;AACF;AAEO,eAAe,uCAAe,GAAf,kBAAkB,MAAc;IACpD,IAAI;QACF,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,UAAU,CAAC;YACzB,OAAO;gBAAE,eAAe;YAAO;YAC/B,MAAM;gBAAE,eAAe;YAAO;QAChC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO;YAAE,OAAO;QAAwB;IAC1C;AACF;;;IAvDsB;IA6CA;;AA7CA,+OAAA;AA6CA,+OAAA"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/lib/requireRole.ts"],"sourcesContent":["import type { Session } from \"@/app/lib/auth-client\";\n\nexport const requireRole = (\n  session: Session,\n  requiredRole: \"user\" | \"moderator\" | \"admin\"\n) => {\n  if (!session || !session.user) {\n    throw new Error(\"User is not authenticated\");\n  }\n\n  const rolesHierarchy = { user: 1, moderator: 2, admin: 3 };\n\n  if (rolesHierarchy[session.user.role] < rolesHierarchy[requiredRole]) {\n    throw new Error(`User does not have the required role: ${requiredRole}`);\n  }\n};\n"],"names":[],"mappings":";;;AAEO,MAAM,cAAc,CACzB,SACA;IAEA,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,EAAE;QAC7B,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,iBAAiB;QAAE,MAAM;QAAG,WAAW;QAAG,OAAO;IAAE;IAEzD,IAAI,cAAc,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,aAAa,EAAE;QACpE,MAAM,IAAI,MAAM,CAAC,sCAAsC,EAAE,cAAc;IACzE;AACF"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/deleteReport.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\nimport { requireRole } from \"@/app/lib/requireRole\";\nimport type { Session } from \"@/app/lib/auth-client\";\n\nexport async function deleteReport(reportId: string, session: Session | null) {\n  try {\n    if (!session) return { error: \"Unauthorized: No user session\" };\n\n    const reportIdNumber = Number(reportId);\n\n    const report = await db.report.findUnique({\n      where: { id: reportIdNumber },\n    });\n\n    if (!report) return { error: \"Report not found\" };\n\n    const isOwner = report.submittedById === session.user.id;\n\n    if (!isOwner) {\n      requireRole(session, \"moderator\");\n    } else {\n      return { error: \"Unauthorized\" };\n    }\n\n    await db.report.delete({\n      where: { id: reportIdNumber },\n    });\n\n    return { success: true };\n  } catch (error) {\n    console.error(error);\n    return { error: \"Error deleting report\" };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAGO,eAAe,uCAAU,GAAV,aAAa,QAAgB,EAAE,OAAuB;IAC1E,IAAI;QACF,IAAI,CAAC,SAAS,OAAO;YAAE,OAAO;QAAgC;QAE9D,MAAM,iBAAiB,OAAO;QAE9B,MAAM,SAAS,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,UAAU,CAAC;YACxC,OAAO;gBAAE,IAAI;YAAe;QAC9B;QAEA,IAAI,CAAC,QAAQ,OAAO;YAAE,OAAO;QAAmB;QAEhD,MAAM,UAAU,OAAO,aAAa,KAAK,QAAQ,IAAI,CAAC,EAAE;QAExD,IAAI,CAAC,SAAS;YACZ,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD,EAAE,SAAS;QACvB,OAAO;YACL,OAAO;gBAAE,OAAO;YAAe;QACjC;QAEA,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;YACrB,OAAO;gBAAE,IAAI;YAAe;QAC9B;QAEA,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,OAAO;QAAwB;IAC1C;AACF;;;IA7BsB;;AAAA,+OAAA"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/getUserVote.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function getUserVotes(userId, reportId) {\n  // Fetch the user's vote for this report.\n  const userVote = await db.vote.findUnique({\n    where: {\n      userId_reportId: { userId, reportId },\n    },\n  });\n\n  if (!userVote) {\n    return null;\n  }\n  // Map the result to a simpler array of objects if needed.\n  return userVote;\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAU,GAAV,aAAa,MAAM,EAAE,QAAQ;IACjD,yCAAyC;IACzC,MAAM,WAAW,MAAM,kGAAA,CAAA,UAAE,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YACL,iBAAiB;gBAAE;gBAAQ;YAAS;QACtC;IACF;IAEA,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IACA,0DAA0D;IAC1D,OAAO;AACT;;;IAbsB;;AAAA,+OAAA"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/postVotes.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\ninterface VotePayload {\n  reportId: number;\n  userId: string;\n  voteType: number;\n}\n\nexport async function voteOnReport(payload: VotePayload) {\n  try {\n    if (!payload.reportId || !payload.userId || !payload.voteType) {\n      console.error(\"Invalid payload:\", payload);\n      return { error: \"Invalid payload\" };\n    }\n\n    const { reportId, userId, voteType } = payload;\n\n    console.log(\"Payload:\", payload);\n\n    const existingVote = await db.vote.findUnique({\n      where: {\n        userId_reportId: { userId, reportId },\n      },\n    });\n\n    if (!existingVote) {\n      await db.vote.create({\n        data: {\n          userId,\n          reportId,\n          value: voteType,\n        },\n      });\n\n      if (voteType === 1) {\n        await db.report.update({\n          where: { id: reportId },\n          data: { confirmationCount: { increment: 1 } },\n        });\n      } else {\n        await db.report.update({\n          where: { id: reportId },\n          data: { disconfirmationCount: { increment: 1 } },\n        });\n      }\n    } else if (existingVote.value !== voteType) {\n      // User switching votes\n      await db.vote.update({\n        where: { userId_reportId: { userId, reportId } },\n        data: { value: voteType },\n      });\n\n      if (voteType === 1) {\n        await db.report.update({\n          where: { id: reportId },\n          data: {\n            confirmationCount: { increment: 1 },\n            disconfirmationCount: { decrement: 1 },\n          },\n        });\n      } else {\n        await db.report.update({\n          where: { id: reportId },\n          data: {\n            confirmationCount: { decrement: 1 },\n            disconfirmationCount: { increment: 1 },\n          },\n        });\n      }\n    } else {\n      // User clicked the same vote again to delete it\n      await db.vote.delete({\n        where: { userId_reportId: { userId, reportId } },\n      });\n\n      if (voteType === 1) {\n        await db.report.update({\n          where: { id: reportId },\n          data: { confirmationCount: { decrement: 1 } },\n        });\n      } else {\n        await db.report.update({\n          where: { id: reportId },\n          data: { disconfirmationCount: { decrement: 1 } },\n        });\n      }\n    }\n\n    const updatedReport = await db.report.findUnique({\n      where: { id: reportId },\n    });\n\n    if (updatedReport && updatedReport.disconfirmationCount >= 5) {\n      await db.report.update({\n        where: { id: reportId },\n        data: { isVisible: false },\n      });\n    }\n\n    return { success: true };\n  } catch (error) {\n    console.error(\"Error voting on report:\", error);\n    return { error: \"Failed to vote on report\" };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAQO,eAAe,uCAAU,GAAV,aAAa,OAAoB;IACrD,IAAI;QACF,IAAI,CAAC,QAAQ,QAAQ,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,QAAQ,QAAQ,EAAE;YAC7D,QAAQ,KAAK,CAAC,oBAAoB;YAClC,OAAO;gBAAE,OAAO;YAAkB;QACpC;QAEA,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG;QAEvC,QAAQ,GAAG,CAAC,YAAY;QAExB,MAAM,eAAe,MAAM,kGAAA,CAAA,UAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5C,OAAO;gBACL,iBAAiB;oBAAE;oBAAQ;gBAAS;YACtC;QACF;QAEA,IAAI,CAAC,cAAc;YACjB,MAAM,kGAAA,CAAA,UAAE,CAAC,IAAI,CAAC,MAAM,CAAC;gBACnB,MAAM;oBACJ;oBACA;oBACA,OAAO;gBACT;YACF;YAEA,IAAI,aAAa,GAAG;gBAClB,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACrB,OAAO;wBAAE,IAAI;oBAAS;oBACtB,MAAM;wBAAE,mBAAmB;4BAAE,WAAW;wBAAE;oBAAE;gBAC9C;YACF,OAAO;gBACL,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACrB,OAAO;wBAAE,IAAI;oBAAS;oBACtB,MAAM;wBAAE,sBAAsB;4BAAE,WAAW;wBAAE;oBAAE;gBACjD;YACF;QACF,OAAO,IAAI,aAAa,KAAK,KAAK,UAAU;YAC1C,uBAAuB;YACvB,MAAM,kGAAA,CAAA,UAAE,CAAC,IAAI,CAAC,MAAM,CAAC;gBACnB,OAAO;oBAAE,iBAAiB;wBAAE;wBAAQ;oBAAS;gBAAE;gBAC/C,MAAM;oBAAE,OAAO;gBAAS;YAC1B;YAEA,IAAI,aAAa,GAAG;gBAClB,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACrB,OAAO;wBAAE,IAAI;oBAAS;oBACtB,MAAM;wBACJ,mBAAmB;4BAAE,WAAW;wBAAE;wBAClC,sBAAsB;4BAAE,WAAW;wBAAE;oBACvC;gBACF;YACF,OAAO;gBACL,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACrB,OAAO;wBAAE,IAAI;oBAAS;oBACtB,MAAM;wBACJ,mBAAmB;4BAAE,WAAW;wBAAE;wBAClC,sBAAsB;4BAAE,WAAW;wBAAE;oBACvC;gBACF;YACF;QACF,OAAO;YACL,gDAAgD;YAChD,MAAM,kGAAA,CAAA,UAAE,CAAC,IAAI,CAAC,MAAM,CAAC;gBACnB,OAAO;oBAAE,iBAAiB;wBAAE;wBAAQ;oBAAS;gBAAE;YACjD;YAEA,IAAI,aAAa,GAAG;gBAClB,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACrB,OAAO;wBAAE,IAAI;oBAAS;oBACtB,MAAM;wBAAE,mBAAmB;4BAAE,WAAW;wBAAE;oBAAE;gBAC9C;YACF,OAAO;gBACL,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACrB,OAAO;wBAAE,IAAI;oBAAS;oBACtB,MAAM;wBAAE,sBAAsB;4BAAE,WAAW;wBAAE;oBAAE;gBACjD;YACF;QACF;QAEA,MAAM,gBAAgB,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,UAAU,CAAC;YAC/C,OAAO;gBAAE,IAAI;YAAS;QACxB;QAEA,IAAI,iBAAiB,cAAc,oBAAoB,IAAI,GAAG;YAC5D,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;gBACrB,OAAO;oBAAE,IAAI;gBAAS;gBACtB,MAAM;oBAAE,WAAW;gBAAM;YAC3B;QACF;QAEA,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YAAE,OAAO;QAA2B;IAC7C;AACF;;;IAhGsB;;AAAA,+OAAA"}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}