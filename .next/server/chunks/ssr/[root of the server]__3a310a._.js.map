{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0BACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient();\n};\n\ndeclare const globalThis: {\n  prismaGlobal: ReturnType<typeof prismaClientSingleton>;\n} & typeof global;\n\nconst db = globalThis.prismaGlobal ?? prismaClientSingleton();\n\nexport default db;\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prismaGlobal = db;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC5B,OAAO,IAAI,6HAAA,CAAA,eAAY;AACzB;AAMA,MAAM,KAAK,WAAW,YAAY,IAAI;uCAEvB;AAEf,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/getReportTypes.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function getReportTypes() {\n  // Fetch the report types from the database.\n  const types = await db.reportType.findMany();\n  // Map the result to a simpler array of objects if needed.\n  return types.map((type) => ({\n    id: type.id,\n    name: type.name,\n  }));\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAY,GAAZ;IACpB,4CAA4C;IAC5C,MAAM,QAAQ,MAAM,kGAAA,CAAA,UAAE,CAAC,UAAU,CAAC,QAAQ;IAC1C,0DAA0D;IAC1D,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;YAC1B,IAAI,KAAK,EAAE;YACX,MAAM,KAAK,IAAI;QACjB,CAAC;AACH;;;IARsB;;AAAA,+OAAA"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/postReport.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function postReport(\n  latitude: number,\n  longitude: number,\n  reportTypeId: number,\n  trustScore: number,\n  userId: string,\n  description: string | null\n  // image: string | null\n) {\n  try {\n    const report = await db.report.create({\n      data: {\n        lat: latitude,\n        long: longitude,\n        description: description ?? null,\n        //  image: image ?? null,\n        reportTypeId,\n        trustScore,\n        submittedById: userId,\n      },\n    });\n\n    await fetch(\"http://localhost:3005/api/new-report\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(report),\n    });\n\n    return report;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAQ,GAAR,WACpB,QAAgB,EAChB,SAAiB,EACjB,YAAoB,EACpB,UAAkB,EAClB,MAAc,EACd,WAA0B;IAG1B,IAAI;QACF,MAAM,SAAS,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;YACpC,MAAM;gBACJ,KAAK;gBACL,MAAM;gBACN,aAAa,eAAe;gBAC5B,yBAAyB;gBACzB;gBACA;gBACA,eAAe;YACjB;QACF;QAEA,MAAM,MAAM,wCAAwC;YAClD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;IAChB;AACF;;;IAlCsB;;AAAA,+OAAA"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/getReports.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\n\nexport async function getReports() {\n  // Fetch the report types from the database.\n  const reports = await db.report.findMany();\n  // Map the result to a simpler array of objects if needed.\n  return reports;\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAQ,GAAR;IACpB,4CAA4C;IAC5C,MAAM,UAAU,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,QAAQ;IACxC,0DAA0D;IAC1D,OAAO;AACT;;;IALsB;;AAAA,+OAAA"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/app/lib/auth-client.ts"],"sourcesContent":["import { createAuthClient } from \"better-auth/react\";\nimport { usernameClient } from \"better-auth/client/plugins\";\n\nexport const authClient = createAuthClient({\n  //baseURL: \"http://localhost:3000\" // the base url of your auth server\n  plugins: [usernameClient()],\n});\n\nexport const { signIn, signUp, signOut, useSession } = createAuthClient();\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAAA;;;AAEO,MAAM,aAAa,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD,EAAE;IACzC,sEAAsE;IACtE,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,iBAAc,AAAD;KAAI;AAC7B;AAEO,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/actions/deleteReport.ts"],"sourcesContent":["\"use server\";\n\nimport db from \"../db\";\nimport { authClient } from \"@/app/lib/auth-client\";\n\nexport async function deleteReport(reportId: string) {\n  const session = await authClient.getSession();\n  if (!session) return { error: \"Unauthorized\" };\n\n  // ✅ Find the report and ensure the user owns it\n  const report = await db.report.findUnique({\n    where: { id: reportId },\n  });\n\n  if (!report) return { error: \"Report not found\" };\n  if (report.submittedById !== session.data.user.id)\n    return { error: \"Unauthorized\" };\n\n  // ✅ Delete the report\n  await db.report.delete({\n    where: { id: reportId },\n  });\n\n  return { success: true };\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEO,eAAe,uCAAU,GAAV,aAAa,QAAgB;IACjD,MAAM,UAAU,MAAM,4HAAA,CAAA,aAAU,CAAC,UAAU;IAC3C,IAAI,CAAC,SAAS,OAAO;QAAE,OAAO;IAAe;IAE7C,gDAAgD;IAChD,MAAM,SAAS,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE,IAAI;QAAS;IACxB;IAEA,IAAI,CAAC,QAAQ,OAAO;QAAE,OAAO;IAAmB;IAChD,IAAI,OAAO,aAAa,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,EAAE,EAC/C,OAAO;QAAE,OAAO;IAAe;IAEjC,sBAAsB;IACtB,MAAM,kGAAA,CAAA,UAAE,CAAC,MAAM,CAAC,MAAM,CAAC;QACrB,OAAO;YAAE,IAAI;QAAS;IACxB;IAEA,OAAO;QAAE,SAAS;IAAK;AACzB;;;IAnBsB;;AAAA,+OAAA"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}