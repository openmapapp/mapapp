{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.DdzSJf-n.mjs"],"sourcesContent":["class BetterAuthError extends Error {\n  constructor(message, cause) {\n    super(message);\n    this.name = \"BetterAuthError\";\n    this.message = message;\n    this.cause = cause;\n    this.stack = \"\";\n  }\n}\nclass MissingDependencyError extends BetterAuthError {\n  constructor(pkgName) {\n    super(\n      `The package \"${pkgName}\" is required. Make sure it is installed.`,\n      pkgName\n    );\n  }\n}\n\nexport { BetterAuthError as B, MissingDependencyError as M };\n"],"names":[],"mappings":";;;;AAAA,MAAM,wBAAwB;IAC5B,YAAY,OAAO,EAAE,KAAK,CAAE;QAC1B,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;IACf;AACF;AACA,MAAM,+BAA+B;IACnC,YAAY,OAAO,CAAE;QACnB,KAAK,CACH,CAAC,aAAa,EAAE,QAAQ,yCAAyC,CAAC,EAClE;IAEJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.CW6D9eSx.mjs"],"sourcesContent":["const getDate = (span, unit = \"ms\") => {\n  return new Date(Date.now() + (unit === \"sec\" ? span * 1e3 : span));\n};\n\nexport { getDate as g };\n"],"names":[],"mappings":";;;AAAA,MAAM,UAAU,CAAC,MAAM,OAAO,IAAI;IAChC,OAAO,IAAI,KAAK,KAAK,GAAG,KAAK,CAAC,SAAS,QAAQ,OAAO,MAAM,IAAI;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.8zoxzg-F.mjs"],"sourcesContent":["const _envShim = /* @__PURE__ */ Object.create(null);\nconst _getEnv = (useShim) => globalThis.process?.env || //@ts-expect-error\nglobalThis.Deno?.env.toObject() || //@ts-expect-error\nglobalThis.__env__ || (useShim ? _envShim : globalThis);\nconst env = new Proxy(_envShim, {\n  get(_, prop) {\n    const env2 = _getEnv();\n    return env2[prop] ?? _envShim[prop];\n  },\n  has(_, prop) {\n    const env2 = _getEnv();\n    return prop in env2 || prop in _envShim;\n  },\n  set(_, prop, value) {\n    const env2 = _getEnv(true);\n    env2[prop] = value;\n    return true;\n  },\n  deleteProperty(_, prop) {\n    if (!prop) {\n      return false;\n    }\n    const env2 = _getEnv(true);\n    delete env2[prop];\n    return true;\n  },\n  ownKeys() {\n    const env2 = _getEnv(true);\n    return Object.keys(env2);\n  }\n});\nfunction toBoolean(val) {\n  return val ? val !== \"false\" : false;\n}\nconst nodeENV = typeof process !== \"undefined\" && process.env && process.env.NODE_ENV || \"\";\nconst isProduction = nodeENV === \"production\";\nconst isDevelopment = nodeENV === \"dev\" || nodeENV === \"development\";\nconst isTest = nodeENV === \"test\" || toBoolean(env.TEST);\n\nexport { isProduction as a, isDevelopment as b, env as e, isTest as i };\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,WAAW,aAAa,GAAG,OAAO,MAAM,CAAC;AAC/C,MAAM,UAAU,CAAC,UAAY,WAAW,OAAO,EAAE,OAAO,kBAAkB;IAC1E,WAAW,IAAI,EAAE,IAAI,cAAc,kBAAkB;IACrD,WAAW,OAAO,IAAI,CAAC,UAAU,WAAW,UAAU;AACtD,MAAM,MAAM,IAAI,MAAM,UAAU;IAC9B,KAAI,CAAC,EAAE,IAAI;QACT,MAAM,OAAO;QACb,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK;IACrC;IACA,KAAI,CAAC,EAAE,IAAI;QACT,MAAM,OAAO;QACb,OAAO,QAAQ,QAAQ,QAAQ;IACjC;IACA,KAAI,CAAC,EAAE,IAAI,EAAE,KAAK;QAChB,MAAM,OAAO,QAAQ;QACrB,IAAI,CAAC,KAAK,GAAG;QACb,OAAO;IACT;IACA,gBAAe,CAAC,EAAE,IAAI;QACpB,IAAI,CAAC,MAAM;YACT,OAAO;QACT;QACA,MAAM,OAAO,QAAQ;QACrB,OAAO,IAAI,CAAC,KAAK;QACjB,OAAO;IACT;IACA;QACE,MAAM,OAAO,QAAQ;QACrB,OAAO,OAAO,IAAI,CAAC;IACrB;AACF;AACA,SAAS,UAAU,GAAG;IACpB,OAAO,MAAM,QAAQ,UAAU;AACjC;AACA,MAAM,UAAU,OAAO,YAAY,eAAe,QAAQ,GAAG,uDAA4B;AACzF,MAAM,eAAe,YAAY;AACjC,MAAM,gBAAgB,YAAY,SAAS,YAAY;AACvD,MAAM,SAAS,YAAY,UAAU,UAAU,IAAI,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.tB5eU6EY.mjs"],"sourcesContent":["function safeJSONParse(data) {\n  function reviver(_, value) {\n    if (typeof value === \"string\") {\n      const iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$/;\n      if (iso8601Regex.test(value)) {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n          return date;\n        }\n      }\n    }\n    return value;\n  }\n  try {\n    return JSON.parse(data, reviver);\n  } catch {\n    return null;\n  }\n}\n\nexport { safeJSONParse as s };\n"],"names":[],"mappings":";;;AAAA,SAAS,cAAc,IAAI;IACzB,SAAS,QAAQ,CAAC,EAAE,KAAK;QACvB,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,eAAe;YACrB,IAAI,aAAa,IAAI,CAAC,QAAQ;gBAC5B,MAAM,OAAO,IAAI,KAAK;gBACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;oBAC1B,OAAO;gBACT;YACF;QACF;QACA,OAAO;IACT;IACA,IAAI;QACF,OAAO,KAAK,KAAK,CAAC,MAAM;IAC1B,EAAE,OAAM;QACN,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.D7syfoJW.mjs"],"sourcesContent":["import { betterFetch } from '@better-fetch/fetch';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { createHash } from '@better-auth/utils/hash';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { jwtVerify } from 'jose';\n\nasync function generateCodeChallenge(codeVerifier) {\n  const codeChallengeBytes = await createHash(\"SHA-256\").digest(codeVerifier);\n  return base64Url.encode(new Uint8Array(codeChallengeBytes), {\n    padding: false\n  });\n}\nfunction getOAuth2Tokens(data) {\n  return {\n    tokenType: data.token_type,\n    accessToken: data.access_token,\n    refreshToken: data.refresh_token,\n    accessTokenExpiresAt: data.expires_in ? getDate(data.expires_in, \"sec\") : void 0,\n    scopes: data?.scope ? typeof data.scope === \"string\" ? data.scope.split(\" \") : data.scope : [],\n    idToken: data.id_token\n  };\n}\n\nasync function createAuthorizationURL({\n  id,\n  options,\n  authorizationEndpoint,\n  state,\n  codeVerifier,\n  scopes,\n  claims,\n  redirectURI,\n  duration,\n  prompt\n}) {\n  const url = new URL(authorizationEndpoint);\n  url.searchParams.set(\"response_type\", \"code\");\n  url.searchParams.set(\"client_id\", options.clientId);\n  url.searchParams.set(\"state\", state);\n  url.searchParams.set(\"scope\", scopes.join(\" \"));\n  url.searchParams.set(\"redirect_uri\", options.redirectURI || redirectURI);\n  if (codeVerifier) {\n    const codeChallenge = await generateCodeChallenge(codeVerifier);\n    url.searchParams.set(\"code_challenge_method\", \"S256\");\n    url.searchParams.set(\"code_challenge\", codeChallenge);\n  }\n  if (claims) {\n    const claimsObj = claims.reduce(\n      (acc, claim) => {\n        acc[claim] = null;\n        return acc;\n      },\n      {}\n    );\n    url.searchParams.set(\n      \"claims\",\n      JSON.stringify({\n        id_token: { email: null, email_verified: null, ...claimsObj }\n      })\n    );\n  }\n  if (duration) {\n    url.searchParams.set(\"duration\", duration);\n  }\n  if (prompt) {\n    url.searchParams.set(\"prompt\", \"select_account\");\n  }\n  return url;\n}\n\nasync function validateAuthorizationCode({\n  code,\n  codeVerifier,\n  redirectURI,\n  options,\n  tokenEndpoint,\n  authentication,\n  deviceId\n}) {\n  const body = new URLSearchParams();\n  const headers = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n    accept: \"application/json\",\n    \"user-agent\": \"better-auth\"\n  };\n  body.set(\"grant_type\", \"authorization_code\");\n  body.set(\"code\", code);\n  codeVerifier && body.set(\"code_verifier\", codeVerifier);\n  options.clientKey && body.set(\"client_key\", options.clientKey);\n  deviceId && body.set(\"device_id\", deviceId);\n  body.set(\"redirect_uri\", options.redirectURI || redirectURI);\n  if (authentication === \"basic\") {\n    const encodedCredentials = btoa(\n      `${options.clientId}:${options.clientSecret}`\n    );\n    headers[\"authorization\"] = `Basic ${encodedCredentials}`;\n  } else {\n    body.set(\"client_id\", options.clientId);\n    body.set(\"client_secret\", options.clientSecret);\n  }\n  const { data, error } = await betterFetch(tokenEndpoint, {\n    method: \"POST\",\n    body,\n    headers\n  });\n  if (error) {\n    throw error;\n  }\n  const tokens = getOAuth2Tokens(data);\n  return tokens;\n}\nasync function validateToken(token, jwksEndpoint) {\n  const { data, error } = await betterFetch(jwksEndpoint, {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      \"user-agent\": \"better-auth\"\n    }\n  });\n  if (error) {\n    throw error;\n  }\n  const keys = data[\"keys\"];\n  const header = JSON.parse(atob(token.split(\".\")[0]));\n  const key = keys.find((key2) => key2.kid === header.kid);\n  if (!key) {\n    throw new Error(\"Key not found\");\n  }\n  const verified = await jwtVerify(token, key);\n  return verified;\n}\n\nexport { validateToken as a, getOAuth2Tokens as b, createAuthorizationURL as c, generateCodeChallenge as g, validateAuthorizationCode as v };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.B4Qoxdgc.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateRandomString = createRandomStringGenerator(\n  \"a-z\",\n  \"0-9\",\n  \"A-Z\",\n  \"-_\"\n);\n\nexport { generateRandomString as g };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,uBAAuB,CAAA,GAAA,8JAAA,CAAA,8BAA2B,AAAD,EACrD,OACA,OACA,OACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.DH3YjMQH.mjs"],"sourcesContent":["const levels = [\"info\", \"success\", \"warn\", \"error\", \"debug\"];\nfunction shouldPublishLog(currentLogLevel, logLevel) {\n  return levels.indexOf(logLevel) <= levels.indexOf(currentLogLevel);\n}\nconst colors = {\n  reset: \"\\x1B[0m\",\n  bright: \"\\x1B[1m\",\n  dim: \"\\x1B[2m\",\n  fg: {\n    red: \"\\x1B[31m\",\n    green: \"\\x1B[32m\",\n    yellow: \"\\x1B[33m\",\n    blue: \"\\x1B[34m\",\n    magenta: \"\\x1B[35m\"}};\nconst levelColors = {\n  info: colors.fg.blue,\n  success: colors.fg.green,\n  warn: colors.fg.yellow,\n  error: colors.fg.red,\n  debug: colors.fg.magenta\n};\nconst formatMessage = (level, message) => {\n  const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n  return `${colors.dim}${timestamp}${colors.reset} ${levelColors[level]}${level.toUpperCase()}${colors.reset} ${colors.bright}[Better Auth]:${colors.reset} ${message}`;\n};\nconst createLogger = (options) => {\n  const enabled = options?.disabled !== true;\n  const logLevel = options?.level ?? \"error\";\n  const LogFunc = (level, message, args = []) => {\n    if (!enabled || !shouldPublishLog(logLevel, level)) {\n      return;\n    }\n    const formattedMessage = formatMessage(level, message);\n    if (!options || typeof options.log !== \"function\") {\n      if (level === \"error\") {\n        console.error(formattedMessage, ...args);\n      } else if (level === \"warn\") {\n        console.warn(formattedMessage, ...args);\n      } else {\n        console.log(formattedMessage, ...args);\n      }\n      return;\n    }\n    options.log(level === \"success\" ? \"info\" : level, message, ...args);\n  };\n  return Object.fromEntries(\n    levels.map((level) => [\n      level,\n      (...[message, ...args]) => LogFunc(level, message, args)\n    ])\n  );\n};\nconst logger = createLogger();\n\nexport { logger as a, createLogger as c, levels as l, shouldPublishLog as s };\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,SAAS;IAAC;IAAQ;IAAW;IAAQ;IAAS;CAAQ;AAC5D,SAAS,iBAAiB,eAAe,EAAE,QAAQ;IACjD,OAAO,OAAO,OAAO,CAAC,aAAa,OAAO,OAAO,CAAC;AACpD;AACA,MAAM,SAAS;IACb,OAAO;IACP,QAAQ;IACR,KAAK;IACL,IAAI;QACF,KAAK;QACL,OAAO;QACP,QAAQ;QACR,MAAM;QACN,SAAS;IAAU;AAAC;AACxB,MAAM,cAAc;IAClB,MAAM,OAAO,EAAE,CAAC,IAAI;IACpB,SAAS,OAAO,EAAE,CAAC,KAAK;IACxB,MAAM,OAAO,EAAE,CAAC,MAAM;IACtB,OAAO,OAAO,EAAE,CAAC,GAAG;IACpB,OAAO,OAAO,EAAE,CAAC,OAAO;AAC1B;AACA,MAAM,gBAAgB,CAAC,OAAO;IAC5B,MAAM,YAAY,AAAC,aAAa,GAAG,IAAI,OAAQ,WAAW;IAC1D,OAAO,GAAG,OAAO,GAAG,GAAG,YAAY,OAAO,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,MAAM,WAAW,KAAK,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO,MAAM,CAAC,cAAc,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,SAAS;AACvK;AACA,MAAM,eAAe,CAAC;IACpB,MAAM,UAAU,SAAS,aAAa;IACtC,MAAM,WAAW,SAAS,SAAS;IACnC,MAAM,UAAU,CAAC,OAAO,SAAS,OAAO,EAAE;QACxC,IAAI,CAAC,WAAW,CAAC,iBAAiB,UAAU,QAAQ;YAClD;QACF;QACA,MAAM,mBAAmB,cAAc,OAAO;QAC9C,IAAI,CAAC,WAAW,OAAO,QAAQ,GAAG,KAAK,YAAY;YACjD,IAAI,UAAU,SAAS;gBACrB,QAAQ,KAAK,CAAC,qBAAqB;YACrC,OAAO,IAAI,UAAU,QAAQ;gBAC3B,QAAQ,IAAI,CAAC,qBAAqB;YACpC,OAAO;gBACL,QAAQ,GAAG,CAAC,qBAAqB;YACnC;YACA;QACF;QACA,QAAQ,GAAG,CAAC,UAAU,YAAY,SAAS,OAAO,YAAY;IAChE;IACA,OAAO,OAAO,WAAW,CACvB,OAAO,GAAG,CAAC,CAAC,QAAU;YACpB;YACA,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,GAAK,QAAQ,OAAO,SAAS;SACpD;AAEL;AACA,MAAM,SAAS","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.CbXAPXob.mjs"],"sourcesContent":["import { z } from 'zod';\nimport { APIError } from 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\n\nasync function generateState(c, link) {\n  const callbackURL = c.body?.callbackURL || c.context.options.baseURL;\n  if (!callbackURL) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"callbackURL is required\"\n    });\n  }\n  const codeVerifier = generateRandomString(128);\n  const state = generateRandomString(32);\n  const data = JSON.stringify({\n    callbackURL,\n    codeVerifier,\n    errorURL: c.body?.errorCallbackURL,\n    newUserURL: c.body?.newUserCallbackURL,\n    link,\n    /**\n     * This is the actual expiry time of the state\n     */\n    expiresAt: Date.now() + 10 * 60 * 1e3,\n    requestSignUp: c.body?.requestSignUp\n  });\n  const expiresAt = /* @__PURE__ */ new Date();\n  expiresAt.setMinutes(expiresAt.getMinutes() + 10);\n  const verification = await c.context.internalAdapter.createVerificationValue({\n    value: data,\n    identifier: state,\n    expiresAt\n  });\n  if (!verification) {\n    c.context.logger.error(\n      \"Unable to create verification. Make sure the database adapter is properly working and there is a verification table in the database\"\n    );\n    throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n      message: \"Unable to create verification\"\n    });\n  }\n  return {\n    state: verification.identifier,\n    codeVerifier\n  };\n}\nasync function parseState(c) {\n  const state = c.query.state || c.body.state;\n  const data = await c.context.internalAdapter.findVerificationValue(state);\n  if (!data) {\n    c.context.logger.error(\"State Mismatch. Verification not found\", {\n      state\n    });\n    throw c.redirect(\n      `${c.context.baseURL}/error?error=please_restart_the_process`\n    );\n  }\n  const parsedData = z.object({\n    callbackURL: z.string(),\n    codeVerifier: z.string(),\n    errorURL: z.string().optional(),\n    newUserURL: z.string().optional(),\n    expiresAt: z.number(),\n    link: z.object({\n      email: z.string(),\n      userId: z.string()\n    }).optional(),\n    requestSignUp: z.boolean().optional()\n  }).parse(JSON.parse(data.value));\n  if (!parsedData.errorURL) {\n    parsedData.errorURL = `${c.context.baseURL}/error`;\n  }\n  if (parsedData.expiresAt < Date.now()) {\n    await c.context.internalAdapter.deleteVerificationValue(data.id);\n    throw c.redirect(\n      `${c.context.baseURL}/error?error=please_restart_the_process`\n    );\n  }\n  await c.context.internalAdapter.deleteVerificationValue(data.id);\n  return parsedData;\n}\n\nexport { generateState as g, parseState as p };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAIA;AAGA;AACA;AAEA;;;;;;;;;;;;;;AAEA,eAAe,cAAc,CAAC,EAAE,IAAI;IAClC,MAAM,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO;IACpE,IAAI,CAAC,aAAa;QAChB,MAAM,IAAI,iJAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,eAAe,CAAA,GAAA,iLAAA,CAAA,IAAoB,AAAD,EAAE;IAC1C,MAAM,QAAQ,CAAA,GAAA,iLAAA,CAAA,IAAoB,AAAD,EAAE;IACnC,MAAM,OAAO,KAAK,SAAS,CAAC;QAC1B;QACA;QACA,UAAU,EAAE,IAAI,EAAE;QAClB,YAAY,EAAE,IAAI,EAAE;QACpB;QACA;;KAEC,GACD,WAAW,KAAK,GAAG,KAAK,KAAK,KAAK;QAClC,eAAe,EAAE,IAAI,EAAE;IACzB;IACA,MAAM,YAAY,aAAa,GAAG,IAAI;IACtC,UAAU,UAAU,CAAC,UAAU,UAAU,KAAK;IAC9C,MAAM,eAAe,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAAC;QAC3E,OAAO;QACP,YAAY;QACZ;IACF;IACA,IAAI,CAAC,cAAc;QACjB,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB;QAEF,MAAM,IAAI,iJAAA,CAAA,WAAQ,CAAC,yBAAyB;YAC1C,SAAS;QACX;IACF;IACA,OAAO;QACL,OAAO,aAAa,UAAU;QAC9B;IACF;AACF;AACA,eAAe,WAAW,CAAC;IACzB,MAAM,QAAQ,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,CAAC,KAAK;IAC3C,MAAM,OAAO,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAAC;IACnE,IAAI,CAAC,MAAM;QACT,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,0CAA0C;YAC/D;QACF;QACA,MAAM,EAAE,QAAQ,CACd,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,uCAAuC,CAAC;IAEjE;IACA,MAAM,aAAa,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAC1B,aAAa,sIAAA,CAAA,IAAC,CAAC,MAAM;QACrB,cAAc,sIAAA,CAAA,IAAC,CAAC,MAAM;QACtB,UAAU,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAC7B,YAAY,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAC/B,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;QACnB,MAAM,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACb,OAAO,sIAAA,CAAA,IAAC,CAAC,MAAM;YACf,QAAQ,sIAAA,CAAA,IAAC,CAAC,MAAM;QAClB,GAAG,QAAQ;QACX,eAAe,sIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ;IACrC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B,IAAI,CAAC,WAAW,QAAQ,EAAE;QACxB,WAAW,QAAQ,GAAG,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;IACpD;IACA,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAI;QACrC,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAAC,KAAK,EAAE;QAC/D,MAAM,EAAE,QAAQ,CACd,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,uCAAuC,CAAC;IAEjE;IACA,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAAC,KAAK,EAAE;IAC/D,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.BUPPRXfK.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateId = (size) => {\n  return createRandomStringGenerator(\"a-z\", \"A-Z\", \"0-9\")(size || 32);\n};\n\nexport { generateId as g };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,CAAC;IAClB,OAAO,CAAA,GAAA,8JAAA,CAAA,8BAA2B,AAAD,EAAE,OAAO,OAAO,OAAO,QAAQ;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.C24Bzw4w.mjs"],"sourcesContent":["import { z } from 'zod';\nimport { APIError } from 'better-call';\n\nconst accountSchema = z.object({\n  id: z.string(),\n  providerId: z.string(),\n  accountId: z.string(),\n  userId: z.string(),\n  accessToken: z.string().nullish(),\n  refreshToken: z.string().nullish(),\n  idToken: z.string().nullish(),\n  /**\n   * Access token expires at\n   */\n  accessTokenExpiresAt: z.date().nullish(),\n  /**\n   * Refresh token expires at\n   */\n  refreshTokenExpiresAt: z.date().nullish(),\n  /**\n   * The scopes that the user has authorized\n   */\n  scope: z.string().nullish(),\n  /**\n   * Password is only stored in the credential provider\n   */\n  password: z.string().nullish(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nconst userSchema = z.object({\n  id: z.string(),\n  email: z.string().transform((val) => val.toLowerCase()),\n  emailVerified: z.boolean().default(false),\n  name: z.string(),\n  image: z.string().nullish(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nconst sessionSchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  expiresAt: z.date(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  token: z.string(),\n  ipAddress: z.string().nullish(),\n  userAgent: z.string().nullish()\n});\nconst verificationSchema = z.object({\n  id: z.string(),\n  value: z.string(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  expiresAt: z.date(),\n  identifier: z.string(),\n  nonce: z.string().nullish()\n});\nfunction parseOutputData(data, schema) {\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in data) {\n    const field = fields[key];\n    if (!field) {\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (field.returned === false) {\n      continue;\n    }\n    parsedData[key] = data[key];\n  }\n  return parsedData;\n}\nfunction getAllFields(options, table) {\n  let schema = {\n    ...table === \"user\" ? options.user?.additionalFields : {},\n    ...table === \"session\" ? options.session?.additionalFields : {}\n  };\n  for (const plugin of options.plugins || []) {\n    if (plugin.schema && plugin.schema[table]) {\n      schema = {\n        ...schema,\n        ...plugin.schema[table].fields\n      };\n    }\n  }\n  return schema;\n}\nfunction parseUserOutput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseOutputData(user, { fields: schema });\n}\nfunction parseAccountOutput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseOutputData(account, { fields: schema });\n}\nfunction parseSessionOutput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseOutputData(session, { fields: schema });\n}\nfunction parseInputData(data, schema) {\n  const action = schema.action || \"create\";\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in fields) {\n    if (key in data) {\n      if (fields[key].input === false) {\n        if (fields[key].defaultValue) {\n          parsedData[key] = fields[key].defaultValue;\n          continue;\n        }\n        continue;\n      }\n      if (fields[key].validator?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].validator.input.parse(data[key]);\n        continue;\n      }\n      if (fields[key].transform?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].transform?.input(data[key]);\n        continue;\n      }\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (fields[key].defaultValue && action === \"create\") {\n      parsedData[key] = fields[key].defaultValue;\n      continue;\n    }\n    if (fields[key].required && action === \"create\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `${key} is required`\n      });\n    }\n  }\n  return parsedData;\n}\nfunction parseUserInput(options, user, action) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema, action });\n}\nfunction parseAdditionalUserInput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema });\n}\nfunction parseAccountInput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseInputData(account, { fields: schema });\n}\nfunction parseSessionInput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseInputData(session, { fields: schema });\n}\nfunction mergeSchema(schema, newSchema) {\n  if (!newSchema) {\n    return schema;\n  }\n  for (const table in newSchema) {\n    const newModelName = newSchema[table]?.modelName;\n    if (newModelName) {\n      schema[table].modelName = newModelName;\n    }\n    for (const field in schema[table].fields) {\n      const newField = newSchema[table]?.fields?.[field];\n      if (!newField) {\n        continue;\n      }\n      schema[table].fields[field].fieldName = newField;\n    }\n  }\n  return schema;\n}\n\nexport { accountSchema as a, parseUserOutput as b, parseAccountOutput as c, parseSessionOutput as d, parseInputData as e, parseUserInput as f, getAllFields as g, parseAdditionalUserInput as h, parseAccountInput as i, parseSessionInput as j, mergeSchema as m, parseOutputData as p, sessionSchema as s, userSchema as u, verificationSchema as v };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.DDEbWX-S.mjs"],"sourcesContent":["import { SignJWT } from 'jose';\n\nasync function signJWT(payload, secret, expiresIn = 3600) {\n  const jwt = await new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setIssuedAt().setExpirationTime(Math.floor(Date.now() / 1e3) + expiresIn).sign(new TextEncoder().encode(secret));\n  return jwt;\n}\n\nexport { signJWT as s };\n"],"names":[],"mappings":";;;AAAA;;AAEA,eAAe,QAAQ,OAAO,EAAE,MAAM,EAAE,YAAY,IAAI;IACtD,MAAM,MAAM,MAAM,IAAI,4JAAA,CAAA,UAAO,CAAC,SAAS,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAAG,WAAW,GAAG,iBAAiB,CAAC,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,OAAO,WAAW,IAAI,CAAC,IAAI,cAAc,MAAM,CAAC;IACpL,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.VTXNLFMT.mjs"],"sourcesContent":["import { e as env } from './better-auth.8zoxzg-F.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\n\nfunction checkHasPath(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.pathname !== \"/\";\n  } catch (error) {\n    throw new BetterAuthError(\n      `Invalid base URL: ${url}. Please provide a valid base URL.`\n    );\n  }\n}\nfunction withPath(url, path = \"/api/auth\") {\n  const hasPath = checkHasPath(url);\n  if (hasPath) {\n    return url;\n  }\n  path = path.startsWith(\"/\") ? path : `/${path}`;\n  return `${url.replace(/\\/+$/, \"\")}${path}`;\n}\nfunction getBaseURL(url, path, request) {\n  if (url) {\n    return withPath(url, path);\n  }\n  const fromEnv = env.BETTER_AUTH_URL || env.NEXT_PUBLIC_BETTER_AUTH_URL || env.PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_AUTH_URL || (env.BASE_URL !== \"/\" ? env.BASE_URL : void 0);\n  if (fromEnv) {\n    return withPath(fromEnv, path);\n  }\n  const fromRequest = request?.headers.get(\"x-forwarded-host\");\n  const fromRequestProto = request?.headers.get(\"x-forwarded-proto\");\n  if (fromRequest && fromRequestProto) {\n    return withPath(`${fromRequestProto}://${fromRequest}`, path);\n  }\n  if (request) {\n    const url2 = getOrigin(request.url);\n    if (!url2) {\n      throw new BetterAuthError(\n        \"Could not get origin from request. Please provide a valid base URL.\"\n      );\n    }\n    return withPath(url2, path);\n  }\n  if (typeof window !== \"undefined\" && window.location) {\n    return withPath(window.location.origin, path);\n  }\n  return void 0;\n}\nfunction getOrigin(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.origin;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getProtocol(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getHost(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.host;\n  } catch (error) {\n    return url;\n  }\n}\n\nexport { getBaseURL as a, getHost as b, getProtocol as c, getOrigin as g };\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,SAAS,aAAa,GAAG;IACvB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,QAAQ,KAAK;IAChC,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,oLAAA,CAAA,IAAe,CACvB,CAAC,kBAAkB,EAAE,IAAI,kCAAkC,CAAC;IAEhE;AACF;AACA,SAAS,SAAS,GAAG,EAAE,OAAO,WAAW;IACvC,MAAM,UAAU,aAAa;IAC7B,IAAI,SAAS;QACX,OAAO;IACT;IACA,OAAO,KAAK,UAAU,CAAC,OAAO,OAAO,CAAC,CAAC,EAAE,MAAM;IAC/C,OAAO,GAAG,IAAI,OAAO,CAAC,QAAQ,MAAM,MAAM;AAC5C;AACA,SAAS,WAAW,GAAG,EAAE,IAAI,EAAE,OAAO;IACpC,IAAI,KAAK;QACP,OAAO,SAAS,KAAK;IACvB;IACA,MAAM,UAAU,oLAAA,CAAA,IAAG,CAAC,eAAe,IAAI,oLAAA,CAAA,IAAG,CAAC,2BAA2B,IAAI,oLAAA,CAAA,IAAG,CAAC,sBAAsB,IAAI,oLAAA,CAAA,IAAG,CAAC,2BAA2B,IAAI,oLAAA,CAAA,IAAG,CAAC,oBAAoB,IAAI,CAAC,oLAAA,CAAA,IAAG,CAAC,QAAQ,KAAK,MAAM,oLAAA,CAAA,IAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;IACpN,IAAI,SAAS;QACX,OAAO,SAAS,SAAS;IAC3B;IACA,MAAM,cAAc,SAAS,QAAQ,IAAI;IACzC,MAAM,mBAAmB,SAAS,QAAQ,IAAI;IAC9C,IAAI,eAAe,kBAAkB;QACnC,OAAO,SAAS,GAAG,iBAAiB,GAAG,EAAE,aAAa,EAAE;IAC1D;IACA,IAAI,SAAS;QACX,MAAM,OAAO,UAAU,QAAQ,GAAG;QAClC,IAAI,CAAC,MAAM;YACT,MAAM,IAAI,oLAAA,CAAA,IAAe,CACvB;QAEJ;QACA,OAAO,SAAS,MAAM;IACxB;IACA,uCAAsD;;IAEtD;IACA,OAAO,KAAK;AACd;AACA,SAAS,UAAU,GAAG;IACpB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,MAAM;IACzB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,YAAY,GAAG;IACtB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,QAAQ;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,QAAQ,GAAG;IAClB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.C92a320y.mjs"],"sourcesContent":["import { z } from 'zod';\nimport { deleteSessionCookie, setSessionCookie, setCookieCache } from '../cookies/index.mjs';\nimport { createMiddleware, createEndpoint, APIError } from 'better-call';\nimport { SocialProviderListEnum, socialProviderList } from '../social-providers/index.mjs';\nimport '@better-auth/utils/random';\nimport { g as generateState, p as parseState } from './better-auth.CbXAPXob.mjs';\nimport { a as logger } from './better-auth.DH3YjMQH.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport { base64 } from '@better-auth/utils/base64';\nimport { jwtVerify } from 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\nimport { f as parseUserInput } from './better-auth.C24Bzw4w.mjs';\nimport { b as isDevelopment } from './better-auth.8zoxzg-F.mjs';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport '@better-fetch/fetch';\nimport 'defu';\nimport { s as signJWT } from './better-auth.DDEbWX-S.mjs';\nimport { b as getHost, c as getProtocol, g as getOrigin } from './better-auth.VTXNLFMT.mjs';\nimport { JWTExpired } from 'jose/errors';\nimport { s as safeJSONParse } from './better-auth.tB5eU6EY.mjs';\nimport { binary } from '@better-auth/utils/binary';\n\nconst optionsMiddleware = createMiddleware(async () => {\n  return {};\n});\nconst createAuthMiddleware = createMiddleware.create({\n  use: [\n    optionsMiddleware,\n    /**\n     * Only use for post hooks\n     */\n    createMiddleware(async () => {\n      return {};\n    })\n  ]\n});\nconst createAuthEndpoint = createEndpoint.create({\n  use: [optionsMiddleware]\n});\n\nfunction escapeRegExpChar(char) {\n  if (char === \"-\" || char === \"^\" || char === \"$\" || char === \"+\" || char === \".\" || char === \"(\" || char === \")\" || char === \"|\" || char === \"[\" || char === \"]\" || char === \"{\" || char === \"}\" || char === \"*\" || char === \"?\" || char === \"\\\\\") {\n    return `\\\\${char}`;\n  } else {\n    return char;\n  }\n}\nfunction escapeRegExpString(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    result += escapeRegExpChar(str[i]);\n  }\n  return result;\n}\nfunction transform(pattern, separator = true) {\n  if (Array.isArray(pattern)) {\n    let regExpPatterns = pattern.map((p) => `^${transform(p, separator)}$`);\n    return `(?:${regExpPatterns.join(\"|\")})`;\n  }\n  let separatorSplitter = \"\";\n  let separatorMatcher = \"\";\n  let wildcard = \".\";\n  if (separator === true) {\n    separatorSplitter = \"/\";\n    separatorMatcher = \"[/\\\\\\\\]\";\n    wildcard = \"[^/\\\\\\\\]\";\n  } else if (separator) {\n    separatorSplitter = separator;\n    separatorMatcher = escapeRegExpString(separatorSplitter);\n    if (separatorMatcher.length > 1) {\n      separatorMatcher = `(?:${separatorMatcher})`;\n      wildcard = `((?!${separatorMatcher}).)`;\n    } else {\n      wildcard = `[^${separatorMatcher}]`;\n    }\n  }\n  let requiredSeparator = separator ? `${separatorMatcher}+?` : \"\";\n  let optionalSeparator = separator ? `${separatorMatcher}*?` : \"\";\n  let segments = separator ? pattern.split(separatorSplitter) : [pattern];\n  let result = \"\";\n  for (let s = 0; s < segments.length; s++) {\n    let segment = segments[s];\n    let nextSegment = segments[s + 1];\n    let currentSeparator = \"\";\n    if (!segment && s > 0) {\n      continue;\n    }\n    if (separator) {\n      if (s === segments.length - 1) {\n        currentSeparator = optionalSeparator;\n      } else if (nextSegment !== \"**\") {\n        currentSeparator = requiredSeparator;\n      } else {\n        currentSeparator = \"\";\n      }\n    }\n    if (separator && segment === \"**\") {\n      if (currentSeparator) {\n        result += s === 0 ? \"\" : currentSeparator;\n        result += `(?:${wildcard}*?${currentSeparator})*?`;\n      }\n      continue;\n    }\n    for (let c = 0; c < segment.length; c++) {\n      let char = segment[c];\n      if (char === \"\\\\\") {\n        if (c < segment.length - 1) {\n          result += escapeRegExpChar(segment[c + 1]);\n          c++;\n        }\n      } else if (char === \"?\") {\n        result += wildcard;\n      } else if (char === \"*\") {\n        result += `${wildcard}*?`;\n      } else {\n        result += escapeRegExpChar(char);\n      }\n    }\n    result += currentSeparator;\n  }\n  return result;\n}\nfunction isMatch(regexp, sample) {\n  if (typeof sample !== \"string\") {\n    throw new TypeError(`Sample must be a string, but ${typeof sample} given`);\n  }\n  return regexp.test(sample);\n}\nfunction wildcardMatch(pattern, options) {\n  if (typeof pattern !== \"string\" && !Array.isArray(pattern)) {\n    throw new TypeError(\n      `The first argument must be a single pattern string or an array of patterns, but ${typeof pattern} given`\n    );\n  }\n  if (typeof options === \"string\" || typeof options === \"boolean\") {\n    options = { separator: options };\n  }\n  if (arguments.length === 2 && !(typeof options === \"undefined\" || typeof options === \"object\" && options !== null && !Array.isArray(options))) {\n    throw new TypeError(\n      `The second argument must be an options object or a string/boolean separator, but ${typeof options} given`\n    );\n  }\n  options = options || {};\n  if (options.separator === \"\\\\\") {\n    throw new Error(\n      \"\\\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead\"\n    );\n  }\n  let regexpPattern = transform(pattern, options.separator);\n  let regexp = new RegExp(`^${regexpPattern}$`, options.flags);\n  let fn = isMatch.bind(null, regexp);\n  fn.options = options;\n  fn.pattern = pattern;\n  fn.regexp = regexp;\n  return fn;\n}\n\nconst originCheckMiddleware = createAuthMiddleware(async (ctx) => {\n  if (ctx.request?.method !== \"POST\" || !ctx.request) {\n    return;\n  }\n  const { body, query, context } = ctx;\n  const originHeader = ctx.headers?.get(\"origin\") || ctx.headers?.get(\"referer\") || \"\";\n  const callbackURL = body?.callbackURL || query?.callbackURL;\n  const redirectURL = body?.redirectTo;\n  const errorCallbackURL = body?.errorCallbackURL;\n  const newUserCallbackURL = body?.newUserCallbackURL;\n  const trustedOrigins = Array.isArray(context.options.trustedOrigins) ? context.trustedOrigins : [\n    ...context.trustedOrigins,\n    ...await context.options.trustedOrigins?.(ctx.request) || []\n  ];\n  const usesCookies = ctx.headers?.has(\"cookie\");\n  const matchesPattern = (url, pattern) => {\n    if (url.startsWith(\"/\")) {\n      return false;\n    }\n    if (pattern.includes(\"*\")) {\n      return wildcardMatch(pattern)(getHost(url));\n    }\n    const protocol = getProtocol(url);\n    return protocol === \"http:\" || protocol === \"https:\" || !protocol ? pattern === getOrigin(url) : url.startsWith(pattern);\n  };\n  const validateURL = (url, label) => {\n    if (!url) {\n      return;\n    }\n    const isTrustedOrigin = trustedOrigins.some(\n      (origin) => matchesPattern(url, origin) || url?.startsWith(\"/\") && label !== \"origin\" && /^\\/(?!\\/|\\\\|%2f|%5c)[\\w\\-./]*(?:\\?[\\w\\-./=&%]*)?$/.test(url)\n    );\n    if (!isTrustedOrigin) {\n      ctx.context.logger.error(`Invalid ${label}: ${url}`);\n      ctx.context.logger.info(\n        `If it's a valid URL, please add ${url} to trustedOrigins in your auth config\n`,\n        `Current list of trustedOrigins: ${trustedOrigins}`\n      );\n      throw new APIError(\"FORBIDDEN\", { message: `Invalid ${label}` });\n    }\n  };\n  if (usesCookies && !ctx.context.options.advanced?.disableCSRFCheck) {\n    validateURL(originHeader, \"origin\");\n  }\n  callbackURL && validateURL(callbackURL, \"callbackURL\");\n  redirectURL && validateURL(redirectURL, \"redirectURL\");\n  errorCallbackURL && validateURL(errorCallbackURL, \"errorCallbackURL\");\n  newUserCallbackURL && validateURL(newUserCallbackURL, \"newUserCallbackURL\");\n});\nconst originCheck = (getValue) => createAuthMiddleware(async (ctx) => {\n  if (!ctx.request) {\n    return;\n  }\n  const { context } = ctx;\n  const callbackURL = getValue(ctx);\n  const trustedOrigins = Array.isArray(\n    context.options.trustedOrigins\n  ) ? context.trustedOrigins : [\n    ...context.trustedOrigins,\n    ...await context.options.trustedOrigins?.(ctx.request) || []\n  ];\n  const matchesPattern = (url, pattern) => {\n    if (url.startsWith(\"/\")) {\n      return false;\n    }\n    if (pattern.includes(\"*\")) {\n      return wildcardMatch(pattern)(getHost(url));\n    }\n    return url.startsWith(pattern);\n  };\n  const validateURL = (url, label) => {\n    if (!url) {\n      return;\n    }\n    const isTrustedOrigin = trustedOrigins.some(\n      (origin) => matchesPattern(url, origin) || url?.startsWith(\"/\") && label !== \"origin\" && /^\\/(?!\\/|\\\\|%2f|%5c)[\\w\\-./]*(?:\\?[\\w\\-./=&%]*)?$/.test(url)\n    );\n    if (!isTrustedOrigin) {\n      ctx.context.logger.error(`Invalid ${label}: ${url}`);\n      ctx.context.logger.info(\n        `If it's a valid URL, please add ${url} to trustedOrigins in your auth config\n`,\n        `Current list of trustedOrigins: ${trustedOrigins}`\n      );\n      throw new APIError(\"FORBIDDEN\", { message: `Invalid ${label}` });\n    }\n  };\n  const callbacks = Array.isArray(callbackURL) ? callbackURL : [callbackURL];\n  for (const url of callbacks) {\n    validateURL(url, \"callbackURL\");\n  }\n});\n\nconst HIDE_METADATA = {\n  isAction: false\n};\n\nconst BASE_ERROR_CODES = {\n  USER_NOT_FOUND: \"User not found\",\n  FAILED_TO_CREATE_USER: \"Failed to create user\",\n  FAILED_TO_CREATE_SESSION: \"Failed to create session\",\n  FAILED_TO_UPDATE_USER: \"Failed to update user\",\n  FAILED_TO_GET_SESSION: \"Failed to get session\",\n  INVALID_PASSWORD: \"Invalid password\",\n  INVALID_EMAIL: \"Invalid email\",\n  INVALID_EMAIL_OR_PASSWORD: \"Invalid email or password\",\n  SOCIAL_ACCOUNT_ALREADY_LINKED: \"Social account already linked\",\n  PROVIDER_NOT_FOUND: \"Provider not found\",\n  INVALID_TOKEN: \"invalid token\",\n  ID_TOKEN_NOT_SUPPORTED: \"id_token not supported\",\n  FAILED_TO_GET_USER_INFO: \"Failed to get user info\",\n  USER_EMAIL_NOT_FOUND: \"User email not found\",\n  EMAIL_NOT_VERIFIED: \"Email not verified\",\n  PASSWORD_TOO_SHORT: \"Password too short\",\n  PASSWORD_TOO_LONG: \"Password too long\",\n  USER_ALREADY_EXISTS: \"User already exists\",\n  EMAIL_CAN_NOT_BE_UPDATED: \"Email can not be updated\",\n  CREDENTIAL_ACCOUNT_NOT_FOUND: \"Credential account not found\",\n  SESSION_EXPIRED: \"Session expired. Re-authenticate to perform this action.\",\n  FAILED_TO_UNLINK_LAST_ACCOUNT: \"You can't unlink your last account\",\n  ACCOUNT_NOT_FOUND: \"Account not found\"\n};\n\nconst getSession = () => createAuthEndpoint(\n  \"/get-session\",\n  {\n    method: \"GET\",\n    query: z.optional(\n      z.object({\n        /**\n         * If cookie cache is enabled, it will disable the cache\n         * and fetch the session from the database\n         */\n        disableCookieCache: z.optional(\n          z.boolean({\n            description: \"Disable cookie cache and fetch session from database\"\n          }).or(z.string().transform((v) => v === \"true\"))\n        ).optional(),\n        disableRefresh: z.boolean({\n          description: \"Disable session refresh. Useful for checking session status, without updating the session\"\n        }).or(z.string().transform((v) => v === \"true\")).optional()\n      })\n    ),\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Get the current session\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    session: {\n                      type: \"object\",\n                      properties: {\n                        token: {\n                          type: \"string\"\n                        },\n                        userId: {\n                          type: \"string\"\n                        },\n                        expiresAt: {\n                          type: \"string\"\n                        }\n                      }\n                    },\n                    user: {\n                      type: \"object\",\n                      $ref: \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessionCookieToken = await ctx.getSignedCookie(\n        ctx.context.authCookies.sessionToken.name,\n        ctx.context.secret\n      );\n      if (!sessionCookieToken) {\n        return null;\n      }\n      const sessionDataCookie = ctx.getCookie(\n        ctx.context.authCookies.sessionData.name\n      );\n      const sessionDataPayload = sessionDataCookie ? safeJSONParse(binary.decode(base64.decode(sessionDataCookie))) : null;\n      if (sessionDataPayload) {\n        const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionDataPayload.session,\n            expiresAt: sessionDataPayload.expiresAt\n          }),\n          sessionDataPayload.signature\n        );\n        if (!isValid) {\n          deleteSessionCookie(ctx);\n          return ctx.json(null);\n        }\n      }\n      const dontRememberMe = await ctx.getSignedCookie(\n        ctx.context.authCookies.dontRememberToken.name,\n        ctx.context.secret\n      );\n      if (sessionDataPayload?.session && ctx.context.options.session?.cookieCache?.enabled && !ctx.query?.disableCookieCache) {\n        const session2 = sessionDataPayload.session;\n        const hasExpired = sessionDataPayload.expiresAt < Date.now() || session2.session.expiresAt < /* @__PURE__ */ new Date();\n        if (!hasExpired) {\n          return ctx.json(\n            session2\n          );\n        } else {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n        }\n      }\n      const session = await ctx.context.internalAdapter.findSession(sessionCookieToken);\n      ctx.context.session = session;\n      if (!session || session.session.expiresAt < /* @__PURE__ */ new Date()) {\n        deleteSessionCookie(ctx);\n        if (session) {\n          await ctx.context.internalAdapter.deleteSession(\n            session.session.token\n          );\n        }\n        return ctx.json(null);\n      }\n      if (dontRememberMe || ctx.query?.disableRefresh) {\n        return ctx.json(\n          session\n        );\n      }\n      const expiresIn = ctx.context.sessionConfig.expiresIn;\n      const updateAge = ctx.context.sessionConfig.updateAge;\n      const sessionIsDueToBeUpdatedDate = session.session.expiresAt.valueOf() - expiresIn * 1e3 + updateAge * 1e3;\n      const shouldBeUpdated = sessionIsDueToBeUpdatedDate <= Date.now();\n      if (shouldBeUpdated) {\n        const updatedSession = await ctx.context.internalAdapter.updateSession(\n          session.session.token,\n          {\n            expiresAt: getDate(ctx.context.sessionConfig.expiresIn, \"sec\")\n          }\n        );\n        if (!updatedSession) {\n          deleteSessionCookie(ctx);\n          return ctx.json(null, { status: 401 });\n        }\n        const maxAge = (updatedSession.expiresAt.valueOf() - Date.now()) / 1e3;\n        await setSessionCookie(\n          ctx,\n          {\n            session: updatedSession,\n            user: session.user\n          },\n          false,\n          {\n            maxAge\n          }\n        );\n        return ctx.json({\n          session: updatedSession,\n          user: session.user\n        });\n      }\n      await setCookieCache(ctx, session);\n      return ctx.json(\n        session\n      );\n    } catch (error) {\n      ctx.context.logger.error(\"INTERNAL_SERVER_ERROR\", error);\n      throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n  }\n);\nconst getSessionFromCtx = async (ctx, config) => {\n  if (ctx.context.session) {\n    return ctx.context.session;\n  }\n  const session = await getSession()({\n    ...ctx,\n    asResponse: false,\n    headers: ctx.headers,\n    returnHeaders: false,\n    query: {\n      ...config,\n      ...ctx.query\n    }\n  }).catch((e) => {\n    return null;\n  });\n  ctx.context.session = session;\n  return session;\n};\nconst sessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  return {\n    session\n  };\n});\nconst requestOnlySessionMiddleware = createAuthMiddleware(\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session?.session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return { session };\n  }\n);\nconst freshSessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  if (ctx.context.sessionConfig.freshAge === 0) {\n    return {\n      session\n    };\n  }\n  const freshAge = ctx.context.sessionConfig.freshAge;\n  const lastUpdated = session.session.updatedAt?.valueOf() || session.session.createdAt.valueOf();\n  const now = Date.now();\n  const isFresh = now - lastUpdated < freshAge * 1e3;\n  if (!isFresh) {\n    throw new APIError(\"FORBIDDEN\", {\n      message: \"Session is not fresh\"\n    });\n  }\n  return {\n    session\n  };\n});\nconst listSessions = () => createAuthEndpoint(\n  \"/list-sessions\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"List all active sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    type: \"object\",\n                    properties: {\n                      token: {\n                        type: \"string\"\n                      },\n                      userId: {\n                        type: \"string\"\n                      },\n                      expiresAt: {\n                        type: \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessions = await ctx.context.internalAdapter.listSessions(\n        ctx.context.session.user.id\n      );\n      const activeSessions = sessions.filter((session) => {\n        return session.expiresAt > /* @__PURE__ */ new Date();\n      });\n      return ctx.json(\n        activeSessions\n      );\n    } catch (e) {\n      ctx.context.logger.error(e);\n      throw ctx.error(\"INTERNAL_SERVER_ERROR\");\n    }\n  }\n);\nconst revokeSession = createAuthEndpoint(\n  \"/revoke-session\",\n  {\n    method: \"POST\",\n    body: z.object({\n      token: z.string({\n        description: \"The token to revoke\"\n      })\n    }),\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke a single session\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  token: {\n                    type: \"string\"\n                  }\n                },\n                required: [\"token\"]\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token;\n    const findSession = await ctx.context.internalAdapter.findSession(token);\n    if (!findSession) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Session not found\"\n      });\n    }\n    if (findSession.session.userId !== ctx.context.session.user.id) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    try {\n      await ctx.context.internalAdapter.deleteSession(token);\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeSessions = createAuthEndpoint(\n  \"/revoke-sessions\",\n  {\n    method: \"POST\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke all sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      await ctx.context.internalAdapter.deleteSessions(\n        ctx.context.session.user.id\n      );\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeOtherSessions = createAuthEndpoint(\n  \"/revoke-other-sessions\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Revoke all other sessions for the user except the current one\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    if (!session.user) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    const sessions = await ctx.context.internalAdapter.listSessions(\n      session.user.id\n    );\n    const activeSessions = sessions.filter((session2) => {\n      return session2.expiresAt > /* @__PURE__ */ new Date();\n    });\n    const otherSessions = activeSessions.filter(\n      (session2) => session2.token !== ctx.context.session.session.token\n    );\n    await Promise.all(\n      otherSessions.map(\n        (session2) => ctx.context.internalAdapter.deleteSession(session2.token)\n      )\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nasync function createEmailVerificationToken(secret, email, updateTo, expiresIn = 3600) {\n  const token = await signJWT(\n    {\n      email: email.toLowerCase(),\n      updateTo\n    },\n    secret,\n    expiresIn\n  );\n  return token;\n}\nasync function sendVerificationEmailFn(ctx, user) {\n  if (!ctx.context.options.emailVerification?.sendVerificationEmail) {\n    ctx.context.logger.error(\"Verification email isn't enabled.\");\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Verification email isn't enabled\"\n    });\n  }\n  const token = await createEmailVerificationToken(\n    ctx.context.secret,\n    user.email,\n    void 0,\n    ctx.context.options.emailVerification?.expiresIn\n  );\n  const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n  await ctx.context.options.emailVerification.sendVerificationEmail(\n    {\n      user,\n      url,\n      token\n    },\n    ctx.request\n  );\n}\nconst sendVerificationEmail = createAuthEndpoint(\n  \"/send-verification-email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      email: z.string({\n        description: \"The email to send the verification email to\"\n      }).email(),\n      callbackURL: z.string({\n        description: \"The URL to use for email verification callback\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Send a verification email to the user\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  email: {\n                    type: \"string\",\n                    description: \"The email to send the verification email to\"\n                  },\n                  callbackURL: {\n                    type: \"string\",\n                    description: \"The URL to use for email verification callback\"\n                  }\n                },\n                required: [\"email\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailVerification?.sendVerificationEmail) {\n      ctx.context.logger.error(\"Verification email isn't enabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Verification email isn't enabled\"\n      });\n    }\n    const { email } = ctx.body;\n    const user = await ctx.context.internalAdapter.findUserByEmail(email);\n    if (!user) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.USER_NOT_FOUND\n      });\n    }\n    await sendVerificationEmailFn(ctx, user.user);\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst verifyEmail = createAuthEndpoint(\n  \"/verify-email\",\n  {\n    method: \"GET\",\n    query: z.object({\n      token: z.string({\n        description: \"The token to verify the email\"\n      }),\n      callbackURL: z.string({\n        description: \"The URL to redirect to after email verification\"\n      }).optional()\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Verify the email of the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      type: \"object\"\n                    },\n                    status: {\n                      type: \"boolean\"\n                    }\n                  },\n                  required: [\"user\", \"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    function redirectOnError(error) {\n      if (ctx.query.callbackURL) {\n        if (ctx.query.callbackURL.includes(\"?\")) {\n          throw ctx.redirect(`${ctx.query.callbackURL}&error=${error}`);\n        }\n        throw ctx.redirect(`${ctx.query.callbackURL}?error=${error}`);\n      }\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: error\n      });\n    }\n    const { token } = ctx.query;\n    let jwt;\n    try {\n      jwt = await jwtVerify(\n        token,\n        new TextEncoder().encode(ctx.context.secret),\n        {\n          algorithms: [\"HS256\"]\n        }\n      );\n    } catch (e) {\n      if (e instanceof JWTExpired) {\n        return redirectOnError(\"token_expired\");\n      }\n      return redirectOnError(\"invalid_token\");\n    }\n    const schema = z.object({\n      email: z.string().email(),\n      updateTo: z.string().optional()\n    });\n    const parsed = schema.parse(jwt.payload);\n    const user = await ctx.context.internalAdapter.findUserByEmail(\n      parsed.email\n    );\n    if (!user) {\n      return redirectOnError(\"user_not_found\");\n    }\n    if (parsed.updateTo) {\n      const session = await getSessionFromCtx(ctx);\n      if (!session) {\n        if (ctx.query.callbackURL) {\n          throw ctx.redirect(`${ctx.query.callbackURL}?error=unauthorized`);\n        }\n        return redirectOnError(\"unauthorized\");\n      }\n      if (session.user.email !== parsed.email) {\n        if (ctx.query.callbackURL) {\n          throw ctx.redirect(`${ctx.query.callbackURL}?error=unauthorized`);\n        }\n        return redirectOnError(\"unauthorized\");\n      }\n      const updatedUser = await ctx.context.internalAdapter.updateUserByEmail(\n        parsed.email,\n        {\n          email: parsed.updateTo,\n          emailVerified: false\n        },\n        ctx\n      );\n      const newToken = await createEmailVerificationToken(\n        ctx.context.secret,\n        parsed.updateTo\n      );\n      await ctx.context.options.emailVerification?.sendVerificationEmail?.(\n        {\n          user: updatedUser,\n          url: `${ctx.context.baseURL}/verify-email?token=${newToken}&callbackURL=${ctx.query.callbackURL || \"/\"}`,\n          token: newToken\n        },\n        ctx.request\n      );\n      await setSessionCookie(ctx, {\n        session: session.session,\n        user: {\n          ...session.user,\n          email: parsed.updateTo,\n          emailVerified: false\n        }\n      });\n      if (ctx.query.callbackURL) {\n        throw ctx.redirect(ctx.query.callbackURL);\n      }\n      return ctx.json({\n        status: true,\n        user: {\n          id: updatedUser.id,\n          email: updatedUser.email,\n          name: updatedUser.name,\n          image: updatedUser.image,\n          emailVerified: updatedUser.emailVerified,\n          createdAt: updatedUser.createdAt,\n          updatedAt: updatedUser.updatedAt\n        }\n      });\n    }\n    await ctx.context.internalAdapter.updateUserByEmail(\n      parsed.email,\n      {\n        emailVerified: true\n      },\n      ctx\n    );\n    if (ctx.context.options.emailVerification?.autoSignInAfterVerification) {\n      const currentSession = await getSessionFromCtx(ctx);\n      if (!currentSession || currentSession.user.email !== parsed.email) {\n        const session = await ctx.context.internalAdapter.createSession(\n          user.user.id,\n          ctx.request\n        );\n        if (!session) {\n          throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n            message: \"Failed to create session\"\n          });\n        }\n        await setSessionCookie(ctx, {\n          session,\n          user: {\n            ...user.user,\n            emailVerified: true\n          }\n        });\n      } else {\n        await setSessionCookie(ctx, {\n          session: currentSession.session,\n          user: {\n            ...currentSession.user,\n            emailVerified: true\n          }\n        });\n      }\n    }\n    if (ctx.query.callbackURL) {\n      throw ctx.redirect(ctx.query.callbackURL);\n    }\n    return ctx.json({\n      status: true,\n      user: null\n    });\n  }\n);\n\nasync function handleOAuthUserInfo(c, {\n  userInfo,\n  account,\n  callbackURL,\n  disableSignUp\n}) {\n  const dbUser = await c.context.internalAdapter.findOAuthUser(\n    userInfo.email.toLowerCase(),\n    account.accountId,\n    account.providerId\n  ).catch((e) => {\n    logger.error(\n      \"Better auth was unable to query your database.\\nError: \",\n      e\n    );\n    throw c.redirect(\n      `${c.context.baseURL}/error?error=internal_server_error`\n    );\n  });\n  let user = dbUser?.user;\n  let isRegister = !user;\n  if (dbUser) {\n    const hasBeenLinked = dbUser.accounts.find(\n      (a) => a.providerId === account.providerId\n    );\n    if (!hasBeenLinked) {\n      const trustedProviders = c.context.options.account?.accountLinking?.trustedProviders;\n      const isTrustedProvider = trustedProviders?.includes(\n        account.providerId\n      );\n      if (!isTrustedProvider && !userInfo.emailVerified || c.context.options.account?.accountLinking?.enabled === false) {\n        if (isDevelopment) {\n          logger.warn(\n            `User already exist but account isn't linked to ${account.providerId}. To read more about how account linking works in Better Auth see https://www.better-auth.com/docs/concepts/users-accounts#account-linking.`\n          );\n        }\n        return {\n          error: \"account not linked\",\n          data: null\n        };\n      }\n      try {\n        await c.context.internalAdapter.linkAccount(\n          {\n            providerId: account.providerId,\n            accountId: userInfo.id.toString(),\n            userId: dbUser.user.id,\n            accessToken: account.accessToken,\n            idToken: account.idToken,\n            refreshToken: account.refreshToken,\n            accessTokenExpiresAt: account.accessTokenExpiresAt,\n            refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n            scope: account.scope\n          },\n          c\n        );\n      } catch (e) {\n        logger.error(\"Unable to link account\", e);\n        return {\n          error: \"unable to link account\",\n          data: null\n        };\n      }\n    } else {\n      const updateData = Object.fromEntries(\n        Object.entries({\n          accessToken: account.accessToken,\n          idToken: account.idToken,\n          refreshToken: account.refreshToken,\n          accessTokenExpiresAt: account.accessTokenExpiresAt,\n          refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n          scope: account.scope\n        }).filter(([_, value]) => value !== void 0)\n      );\n      if (Object.keys(updateData).length > 0) {\n        await c.context.internalAdapter.updateAccount(\n          hasBeenLinked.id,\n          updateData,\n          c\n        );\n      }\n    }\n  } else {\n    if (disableSignUp) {\n      return {\n        error: \"signup disabled\",\n        data: null,\n        isRegister: false\n      };\n    }\n    try {\n      user = await c.context.internalAdapter.createOAuthUser(\n        {\n          ...userInfo,\n          email: userInfo.email.toLowerCase(),\n          id: void 0\n        },\n        {\n          accessToken: account.accessToken,\n          idToken: account.idToken,\n          refreshToken: account.refreshToken,\n          accessTokenExpiresAt: account.accessTokenExpiresAt,\n          refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n          scope: account.scope,\n          providerId: account.providerId,\n          accountId: userInfo.id.toString()\n        },\n        c\n      ).then((res) => res?.user);\n      if (!userInfo.emailVerified && user && c.context.options.emailVerification?.sendOnSignUp) {\n        const token = await createEmailVerificationToken(\n          c.context.secret,\n          user.email,\n          void 0,\n          c.context.options.emailVerification?.expiresIn\n        );\n        const url = `${c.context.baseURL}/verify-email?token=${token}&callbackURL=${callbackURL}`;\n        await c.context.options.emailVerification?.sendVerificationEmail?.(\n          {\n            user,\n            url,\n            token\n          },\n          c.request\n        );\n      }\n    } catch (e) {\n      logger.error(e);\n      if (e instanceof APIError) {\n        return {\n          error: e.message,\n          data: null,\n          isRegister: false\n        };\n      }\n      return {\n        error: \"unable to create user\",\n        data: null,\n        isRegister: false\n      };\n    }\n  }\n  if (!user) {\n    return {\n      error: \"unable to create user\",\n      data: null,\n      isRegister: false\n    };\n  }\n  const session = await c.context.internalAdapter.createSession(\n    user.id,\n    c.request\n  );\n  if (!session) {\n    return {\n      error: \"unable to create session\",\n      data: null,\n      isRegister: false\n    };\n  }\n  return {\n    data: {\n      session,\n      user\n    },\n    error: null,\n    isRegister\n  };\n}\n\nconst signInSocial = createAuthEndpoint(\n  \"/sign-in/social\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * Callback URL to redirect to after the user\n       * has signed in.\n       */\n      callbackURL: z.string({\n        description: \"Callback URL to redirect to after the user has signed in\"\n      }).optional(),\n      /**\n       * callback url to redirect if the user is newly registered.\n       *\n       * useful if you have different routes for existing users and new users\n       */\n      newUserCallbackURL: z.string().optional(),\n      /**\n       * Callback url to redirect to if an error happens\n       *\n       * If it's initiated from the client sdk this defaults to\n       * the current url.\n       */\n      errorCallbackURL: z.string({\n        description: \"Callback URL to redirect to if an error happens\"\n      }).optional(),\n      /**\n       * OAuth2 provider to use`\n       */\n      provider: SocialProviderListEnum,\n      /**\n       * Disable automatic redirection to the provider\n       *\n       * This is useful if you want to handle the redirection\n       * yourself like in a popup or a different tab.\n       */\n      disableRedirect: z.boolean({\n        description: \"Disable automatic redirection to the provider. Useful for handling the redirection yourself\"\n      }).optional(),\n      /**\n       * ID token from the provider\n       *\n       * This is used to sign in the user\n       * if the user is already signed in with the\n       * provider in the frontend.\n       *\n       * Only applicable if the provider supports\n       * it. Currently only `apple` and `google` is\n       * supported out of the box.\n       */\n      idToken: z.optional(\n        z.object({\n          /**\n           * ID token from the provider\n           */\n          token: z.string({\n            description: \"ID token from the provider\"\n          }),\n          /**\n           * The nonce used to generate the token\n           */\n          nonce: z.string({\n            description: \"Nonce used to generate the token\"\n          }).optional(),\n          /**\n           * Access token from the provider\n           */\n          accessToken: z.string({\n            description: \"Access token from the provider\"\n          }).optional(),\n          /**\n           * Refresh token from the provider\n           */\n          refreshToken: z.string({\n            description: \"Refresh token from the provider\"\n          }).optional(),\n          /**\n           * Expiry date of the token\n           */\n          expiresAt: z.number({\n            description: \"Expiry date of the token\"\n          }).optional()\n        }),\n        {\n          description: \"ID token from the provider to sign in the user with id token\"\n        }\n      ),\n      scopes: z.array(z.string(), {\n        description: \"Array of scopes to request from the provider. This will override the default scopes passed.\"\n      }).optional(),\n      /**\n       * Explicitly request sign-up\n       *\n       * Should be used to allow sign up when\n       * disableImplicitSignUp for this provider is\n       * true\n       */\n      requestSignUp: z.boolean({\n        description: \"Explicitly request sign-up. Useful when disableImplicitSignUp is true for this provider\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Sign in with a social provider\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    session: {\n                      type: \"string\"\n                    },\n                    user: {\n                      type: \"object\"\n                    },\n                    url: {\n                      type: \"string\"\n                    },\n                    redirect: {\n                      type: \"boolean\"\n                    }\n                  },\n                  required: [\"session\", \"user\", \"url\", \"redirect\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.body.provider\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Provider not found. Make sure to add the provider in your auth config\",\n        {\n          provider: c.body.provider\n        }\n      );\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.PROVIDER_NOT_FOUND\n      });\n    }\n    if (c.body.idToken) {\n      if (!provider.verifyIdToken) {\n        c.context.logger.error(\n          \"Provider does not support id token verification\",\n          {\n            provider: c.body.provider\n          }\n        );\n        throw new APIError(\"NOT_FOUND\", {\n          message: BASE_ERROR_CODES.ID_TOKEN_NOT_SUPPORTED\n        });\n      }\n      const { token, nonce } = c.body.idToken;\n      const valid = await provider.verifyIdToken(token, nonce);\n      if (!valid) {\n        c.context.logger.error(\"Invalid id token\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.INVALID_TOKEN\n        });\n      }\n      const userInfo = await provider.getUserInfo({\n        idToken: token,\n        accessToken: c.body.idToken.accessToken,\n        refreshToken: c.body.idToken.refreshToken\n      });\n      if (!userInfo || !userInfo?.user) {\n        c.context.logger.error(\"Failed to get user info\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.FAILED_TO_GET_USER_INFO\n        });\n      }\n      if (!userInfo.user.email) {\n        c.context.logger.error(\"User email not found\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.USER_EMAIL_NOT_FOUND\n        });\n      }\n      const data = await handleOAuthUserInfo(c, {\n        userInfo: {\n          email: userInfo.user.email,\n          id: userInfo.user.id,\n          name: userInfo.user.name || \"\",\n          image: userInfo.user.image,\n          emailVerified: userInfo.user.emailVerified || false\n        },\n        account: {\n          providerId: provider.id,\n          accountId: userInfo.user.id,\n          accessToken: c.body.idToken.accessToken\n        },\n        disableSignUp: provider.disableImplicitSignUp && !c.body.requestSignUp || provider.disableSignUp\n      });\n      if (data.error) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: data.error\n        });\n      }\n      await setSessionCookie(c, data.data);\n      return c.json({\n        redirect: false,\n        token: data.data.session.token,\n        url: void 0,\n        user: {\n          id: data.data.user.id,\n          email: data.data.user.email,\n          name: data.data.user.name,\n          image: data.data.user.image,\n          emailVerified: data.data.user.emailVerified,\n          createdAt: data.data.user.createdAt,\n          updatedAt: data.data.user.updatedAt\n        }\n      });\n    }\n    const { codeVerifier, state } = await generateState(c);\n    const url = await provider.createAuthorizationURL({\n      state,\n      codeVerifier,\n      redirectURI: `${c.context.baseURL}/callback/${provider.id}`,\n      scopes: c.body.scopes\n    });\n    return c.json({\n      url: url.toString(),\n      redirect: !c.body.disableRedirect\n    });\n  }\n);\nconst signInEmail = createAuthEndpoint(\n  \"/sign-in/email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * Email of the user\n       */\n      email: z.string({\n        description: \"Email of the user\"\n      }),\n      /**\n       * Password of the user\n       */\n      password: z.string({\n        description: \"Password of the user\"\n      }),\n      /**\n       * Callback URL to use as a redirect for email\n       * verification and for possible redirects\n       */\n      callbackURL: z.string({\n        description: \"Callback URL to use as a redirect for email verification\"\n      }).optional(),\n      /**\n       * If this is false, the session will not be remembered\n       * @default true\n       */\n      rememberMe: z.boolean({\n        description: \"If this is false, the session will not be remembered. Default is `true`.\"\n      }).default(true).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Sign in with email and password\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      type: \"object\"\n                    },\n                    url: {\n                      type: \"string\"\n                    },\n                    redirect: {\n                      type: \"boolean\"\n                    }\n                  },\n                  required: [\"session\", \"user\", \"url\", \"redirect\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options?.emailAndPassword?.enabled) {\n      ctx.context.logger.error(\n        \"Email and password is not enabled. Make sure to enable it in the options on you `auth.ts` file. Check `https://better-auth.com/docs/authentication/email-password` for more!\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email and password is not enabled\"\n      });\n    }\n    const { email, password } = ctx.body;\n    const isValidEmail = z.string().email().safeParse(email);\n    if (!isValidEmail.success) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL\n      });\n    }\n    const user = await ctx.context.internalAdapter.findUserByEmail(email, {\n      includeAccounts: true\n    });\n    if (!user) {\n      await ctx.context.password.hash(password);\n      ctx.context.logger.error(\"User not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const credentialAccount = user.accounts.find(\n      (a) => a.providerId === \"credential\"\n    );\n    if (!credentialAccount) {\n      ctx.context.logger.error(\"Credential account not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const currentPassword = credentialAccount?.password;\n    if (!currentPassword) {\n      ctx.context.logger.error(\"Password not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const validPassword = await ctx.context.password.verify({\n      hash: currentPassword,\n      password\n    });\n    if (!validPassword) {\n      ctx.context.logger.error(\"Invalid password\");\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    if (ctx.context.options?.emailAndPassword?.requireEmailVerification && !user.user.emailVerified) {\n      if (!ctx.context.options?.emailVerification?.sendVerificationEmail) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: BASE_ERROR_CODES.EMAIL_NOT_VERIFIED\n        });\n      }\n      const token = await createEmailVerificationToken(\n        ctx.context.secret,\n        user.user.email,\n        void 0,\n        ctx.context.options.emailVerification?.expiresIn\n      );\n      const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n      await ctx.context.options.emailVerification.sendVerificationEmail(\n        {\n          user: user.user,\n          url,\n          token\n        },\n        ctx.request\n      );\n      throw new APIError(\"FORBIDDEN\", {\n        message: BASE_ERROR_CODES.EMAIL_NOT_VERIFIED\n      });\n    }\n    const session = await ctx.context.internalAdapter.createSession(\n      user.user.id,\n      ctx.headers,\n      ctx.body.rememberMe === false\n    );\n    if (!session) {\n      ctx.context.logger.error(\"Failed to create session\");\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_SESSION\n      });\n    }\n    await setSessionCookie(\n      ctx,\n      {\n        session,\n        user: user.user\n      },\n      ctx.body.rememberMe === false\n    );\n    return ctx.json({\n      redirect: !!ctx.body.callbackURL,\n      token: session.token,\n      url: ctx.body.callbackURL,\n      user: {\n        id: user.user.id,\n        email: user.user.email,\n        name: user.user.name,\n        image: user.user.image,\n        emailVerified: user.user.emailVerified,\n        createdAt: user.user.createdAt,\n        updatedAt: user.user.updatedAt\n      }\n    });\n  }\n);\n\nconst schema = z.object({\n  code: z.string().optional(),\n  error: z.string().optional(),\n  device_id: z.string().optional(),\n  error_description: z.string().optional(),\n  state: z.string().optional()\n});\nconst callbackOAuth = createAuthEndpoint(\n  \"/callback/:id\",\n  {\n    method: [\"GET\", \"POST\"],\n    body: schema.optional(),\n    query: schema.optional(),\n    metadata: HIDE_METADATA\n  },\n  async (c) => {\n    let queryOrBody;\n    const defaultErrorURL = c.context.options.onAPIError?.errorURL || `${c.context.baseURL}/error`;\n    try {\n      if (c.method === \"GET\") {\n        queryOrBody = schema.parse(c.query);\n      } else if (c.method === \"POST\") {\n        queryOrBody = schema.parse(c.body);\n      } else {\n        throw new Error(\"Unsupported method\");\n      }\n    } catch (e) {\n      c.context.logger.error(\"INVALID_CALLBACK_REQUEST\", e);\n      throw c.redirect(`${defaultErrorURL}?error=invalid_callback_request`);\n    }\n    const { code, error, state, error_description, device_id } = queryOrBody;\n    if (error) {\n      throw c.redirect(\n        `${defaultErrorURL}?error=${error}&error_description=${error_description}`\n      );\n    }\n    if (!state) {\n      c.context.logger.error(\"State not found\", error);\n      throw c.redirect(`${defaultErrorURL}?error=state_not_found`);\n    }\n    const {\n      codeVerifier,\n      callbackURL,\n      link,\n      errorURL,\n      newUserURL,\n      requestSignUp\n    } = await parseState(c);\n    function redirectOnError(error2) {\n      let url = errorURL || callbackURL || defaultErrorURL;\n      if (url.includes(\"?\")) {\n        url = `${url}&error=${error2}`;\n      } else {\n        url = `${url}?error=${error2}`;\n      }\n      throw c.redirect(url);\n    }\n    if (!code) {\n      c.context.logger.error(\"Code not found\");\n      throw redirectOnError(\"no_code\");\n    }\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.params.id\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Oauth provider with id\",\n        c.params.id,\n        \"not found\"\n      );\n      throw redirectOnError(\"oauth_provider_not_found\");\n    }\n    let tokens;\n    try {\n      tokens = await provider.validateAuthorizationCode({\n        code,\n        codeVerifier,\n        deviceId: device_id,\n        redirectURI: `${c.context.baseURL}/callback/${provider.id}`\n      });\n    } catch (e) {\n      c.context.logger.error(\"\", e);\n      throw redirectOnError(\"invalid_code\");\n    }\n    const userInfo = await provider.getUserInfo(tokens).then((res) => res?.user);\n    if (!userInfo) {\n      c.context.logger.error(\"Unable to get user info\");\n      return redirectOnError(\"unable_to_get_user_info\");\n    }\n    if (!userInfo.email) {\n      c.context.logger.error(\n        \"Provider did not return email. This could be due to misconfiguration in the provider settings.\"\n      );\n      return redirectOnError(\"email_not_found\");\n    }\n    if (!callbackURL) {\n      c.context.logger.error(\"No callback URL found\");\n      throw redirectOnError(\"no_callback_url\");\n    }\n    if (link) {\n      const existingAccount = await c.context.internalAdapter.findAccount(\n        userInfo.id\n      );\n      if (existingAccount) {\n        if (existingAccount.userId !== link.userId) {\n          return redirectOnError(\"account_already_linked_to_different_user\");\n        }\n      }\n      const newAccount = await c.context.internalAdapter.createAccount(\n        {\n          userId: link.userId,\n          providerId: provider.id,\n          accountId: userInfo.id,\n          ...tokens,\n          scope: tokens.scopes?.join(\",\")\n        },\n        c\n      );\n      if (!newAccount) {\n        return redirectOnError(\"unable_to_link_account\");\n      }\n      let toRedirectTo2;\n      try {\n        const url = callbackURL;\n        toRedirectTo2 = url.toString();\n      } catch {\n        toRedirectTo2 = callbackURL;\n      }\n      throw c.redirect(toRedirectTo2);\n    }\n    const result = await handleOAuthUserInfo(c, {\n      userInfo: {\n        ...userInfo,\n        email: userInfo.email,\n        name: userInfo.name || userInfo.email\n      },\n      account: {\n        providerId: provider.id,\n        accountId: userInfo.id,\n        ...tokens,\n        scope: tokens.scopes?.join(\",\")\n      },\n      callbackURL,\n      disableSignUp: provider.disableImplicitSignUp && !requestSignUp || provider.disableSignUp\n    });\n    if (result.error) {\n      c.context.logger.error(result.error.split(\" \").join(\"_\"));\n      return redirectOnError(result.error.split(\" \").join(\"_\"));\n    }\n    const { session, user } = result.data;\n    await setSessionCookie(c, {\n      session,\n      user\n    });\n    let toRedirectTo;\n    try {\n      const url = result.isRegister ? newUserURL || callbackURL : callbackURL;\n      toRedirectTo = url.toString();\n    } catch {\n      toRedirectTo = result.isRegister ? newUserURL || callbackURL : callbackURL;\n    }\n    throw c.redirect(toRedirectTo);\n  }\n);\n\nconst signOut = createAuthEndpoint(\n  \"/sign-out\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Sign out the current user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    success: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const sessionCookieToken = await ctx.getSignedCookie(\n      ctx.context.authCookies.sessionToken.name,\n      ctx.context.secret\n    );\n    if (!sessionCookieToken) {\n      deleteSessionCookie(ctx);\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n    await ctx.context.internalAdapter.deleteSession(sessionCookieToken);\n    deleteSessionCookie(ctx);\n    return ctx.json({\n      success: true\n    });\n  }\n);\n\nfunction redirectError(ctx, callbackURL, query) {\n  const url = callbackURL ? new URL(callbackURL, ctx.baseURL) : new URL(`${ctx.baseURL}/error`);\n  if (query)\n    Object.entries(query).forEach(([k, v]) => url.searchParams.set(k, v));\n  return url.href;\n}\nfunction redirectCallback(ctx, callbackURL, query) {\n  const url = new URL(callbackURL, ctx.baseURL);\n  if (query)\n    Object.entries(query).forEach(([k, v]) => url.searchParams.set(k, v));\n  return url.href;\n}\nconst forgetPassword = createAuthEndpoint(\n  \"/forget-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The email address of the user to send a password reset email to.\n       */\n      email: z.string({\n        description: \"The email address of the user to send a password reset email to\"\n      }).email(),\n      /**\n       * The URL to redirect the user to reset their password.\n       * If the token isn't valid or expired, it'll be redirected with a query parameter `?\n       * error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?\n       * token=VALID_TOKEN\n       */\n      redirectTo: z.string({\n        description: \"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Send a password reset email to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.sendResetPassword) {\n      ctx.context.logger.error(\n        \"Reset password isn't enabled.Please pass an emailAndPassword.sendResetPassword function in your auth config!\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Reset password isn't enabled\"\n      });\n    }\n    const { email, redirectTo } = ctx.body;\n    const user = await ctx.context.internalAdapter.findUserByEmail(email, {\n      includeAccounts: true\n    });\n    if (!user) {\n      ctx.context.logger.error(\"Reset Password: User not found\", { email });\n      return ctx.json({\n        status: true\n      });\n    }\n    const defaultExpiresIn = 60 * 60 * 1;\n    const expiresAt = getDate(\n      ctx.context.options.emailAndPassword.resetPasswordTokenExpiresIn || defaultExpiresIn,\n      \"sec\"\n    );\n    const verificationToken = generateId(24);\n    await ctx.context.internalAdapter.createVerificationValue({\n      value: user.user.id.toString(),\n      identifier: `reset-password:${verificationToken}`,\n      expiresAt\n    });\n    const url = `${ctx.context.baseURL}/reset-password/${verificationToken}?callbackURL=${redirectTo}`;\n    await ctx.context.options.emailAndPassword.sendResetPassword(\n      {\n        user: user.user,\n        url,\n        token: verificationToken\n      },\n      ctx.request\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst forgetPasswordCallback = createAuthEndpoint(\n  \"/reset-password/:token\",\n  {\n    method: \"GET\",\n    query: z.object({\n      callbackURL: z.string({\n        description: \"The URL to redirect the user to reset their password\"\n      })\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Redirects the user to the callback URL with the token\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { token } = ctx.params;\n    const { callbackURL } = ctx.query;\n    if (!token || !callbackURL) {\n      throw ctx.redirect(\n        redirectError(ctx.context, callbackURL, { error: \"INVALID_TOKEN\" })\n      );\n    }\n    const verification = await ctx.context.internalAdapter.findVerificationValue(\n      `reset-password:${token}`\n    );\n    if (!verification || verification.expiresAt < /* @__PURE__ */ new Date()) {\n      throw ctx.redirect(\n        redirectError(ctx.context, callbackURL, { error: \"INVALID_TOKEN\" })\n      );\n    }\n    throw ctx.redirect(redirectCallback(ctx.context, callbackURL, { token }));\n  }\n);\nconst resetPassword = createAuthEndpoint(\n  \"/reset-password\",\n  {\n    method: \"POST\",\n    query: z.object({\n      token: z.string().optional()\n    }).optional(),\n    body: z.object({\n      newPassword: z.string({\n        description: \"The new password to set\"\n      }),\n      token: z.string({\n        description: \"The token to reset the password\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Reset the password for a user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token || ctx.query?.token;\n    if (!token) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const { newPassword } = ctx.body;\n    const minLength = ctx.context.password?.config.minPasswordLength;\n    const maxLength = ctx.context.password?.config.maxPasswordLength;\n    if (newPassword.length < minLength) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    if (newPassword.length > maxLength) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const id = `reset-password:${token}`;\n    const verification = await ctx.context.internalAdapter.findVerificationValue(id);\n    if (!verification || verification.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    await ctx.context.internalAdapter.deleteVerificationValue(verification.id);\n    const userId = verification.value;\n    const hashedPassword = await ctx.context.password.hash(newPassword);\n    const accounts = await ctx.context.internalAdapter.findAccounts(userId);\n    const account = accounts.find((ac) => ac.providerId === \"credential\");\n    if (!account) {\n      await ctx.context.internalAdapter.createAccount(\n        {\n          userId,\n          providerId: \"credential\",\n          password: hashedPassword,\n          accountId: userId\n        },\n        ctx\n      );\n      return ctx.json({\n        status: true\n      });\n    }\n    await ctx.context.internalAdapter.updatePassword(\n      userId,\n      hashedPassword,\n      ctx\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nconst updateUser = () => createAuthEndpoint(\n  \"/update-user\",\n  {\n    method: \"POST\",\n    body: z.record(z.string(), z.any()),\n    use: [sessionMiddleware],\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Update the current user\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  name: {\n                    type: \"string\",\n                    description: \"The name of the user\"\n                  },\n                  image: {\n                    type: \"string\",\n                    description: \"The image of the user\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      type: \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const body = ctx.body;\n    if (body.email) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.EMAIL_CAN_NOT_BE_UPDATED\n      });\n    }\n    const { name, image, ...rest } = body;\n    const session = ctx.context.session;\n    if (image === void 0 && name === void 0 && Object.keys(rest).length === 0) {\n      return ctx.json({\n        status: true\n      });\n    }\n    const additionalFields = parseUserInput(\n      ctx.context.options,\n      rest,\n      \"update\"\n    );\n    const user = await ctx.context.internalAdapter.updateUser(\n      session.user.id,\n      {\n        name,\n        image,\n        ...additionalFields\n      },\n      ctx\n    );\n    await setSessionCookie(ctx, {\n      session: session.session,\n      user\n    });\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst changePassword = createAuthEndpoint(\n  \"/change-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The new password to set\n       */\n      newPassword: z.string({\n        description: \"The new password to set\"\n      }),\n      /**\n       * The current password of the user\n       */\n      currentPassword: z.string({\n        description: \"The current password\"\n      }),\n      /**\n       * revoke all sessions that are not the\n       * current one logged in by the user\n       */\n      revokeOtherSessions: z.boolean({\n        description: \"Revoke all other sessions\"\n      }).optional()\n    }),\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Change the password of the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      description: \"The user object\",\n                      $ref: \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { newPassword, currentPassword, revokeOtherSessions } = ctx.body;\n    const session = ctx.context.session;\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (newPassword.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (newPassword.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    const account = accounts.find(\n      (account2) => account2.providerId === \"credential\" && account2.password\n    );\n    if (!account || !account.password) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.CREDENTIAL_ACCOUNT_NOT_FOUND\n      });\n    }\n    const passwordHash = await ctx.context.password.hash(newPassword);\n    const verify = await ctx.context.password.verify({\n      hash: account.password,\n      password: currentPassword\n    });\n    if (!verify) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_PASSWORD\n      });\n    }\n    await ctx.context.internalAdapter.updateAccount(account.id, {\n      password: passwordHash\n    });\n    let token = null;\n    if (revokeOtherSessions) {\n      await ctx.context.internalAdapter.deleteSessions(session.user.id);\n      const newSession = await ctx.context.internalAdapter.createSession(\n        session.user.id,\n        ctx.headers\n      );\n      if (!newSession) {\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n        });\n      }\n      await setSessionCookie(ctx, {\n        session: newSession,\n        user: session.user\n      });\n      token = newSession.token;\n    }\n    return ctx.json({\n      token,\n      user: {\n        id: session.user.id,\n        email: session.user.email,\n        name: session.user.name,\n        image: session.user.image,\n        emailVerified: session.user.emailVerified,\n        createdAt: session.user.createdAt,\n        updatedAt: session.user.updatedAt\n      }\n    });\n  }\n);\nconst setPassword = createAuthEndpoint(\n  \"/set-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The new password to set\n       */\n      newPassword: z.string()\n    }),\n    metadata: {\n      SERVER_ONLY: true\n    },\n    use: [sessionMiddleware]\n  },\n  async (ctx) => {\n    const { newPassword } = ctx.body;\n    const session = ctx.context.session;\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (newPassword.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (newPassword.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    const account = accounts.find(\n      (account2) => account2.providerId === \"credential\" && account2.password\n    );\n    const passwordHash = await ctx.context.password.hash(newPassword);\n    if (!account) {\n      await ctx.context.internalAdapter.linkAccount(\n        {\n          userId: session.user.id,\n          providerId: \"credential\",\n          accountId: session.user.id,\n          password: passwordHash\n        },\n        ctx\n      );\n      return ctx.json({\n        status: true\n      });\n    }\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"user already has a password\"\n    });\n  }\n);\nconst deleteUser = createAuthEndpoint(\n  \"/delete-user\",\n  {\n    method: \"POST\",\n    use: [sessionMiddleware],\n    body: z.object({\n      /**\n       * The callback URL to redirect to after the user is deleted\n       * this is only used on delete user callback\n       */\n      callbackURL: z.string().optional(),\n      /**\n       * The password of the user. If the password isn't provided, session freshness\n       * will be checked.\n       */\n      password: z.string().optional(),\n      /**\n       * The token to delete the user. If the token is provided, the user will be deleted\n       */\n      token: z.string().optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Delete the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.deleteUser?.enabled) {\n      ctx.context.logger.error(\n        \"Delete user is disabled. Enable it in the options\",\n        {\n          session: ctx.context.session\n        }\n      );\n      throw new APIError(\"NOT_FOUND\");\n    }\n    const session = ctx.context.session;\n    if (ctx.body.password) {\n      const accounts = await ctx.context.internalAdapter.findAccounts(\n        session.user.id\n      );\n      const account = accounts.find(\n        (account2) => account2.providerId === \"credential\" && account2.password\n      );\n      if (!account || !account.password) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.CREDENTIAL_ACCOUNT_NOT_FOUND\n        });\n      }\n      const verify = await ctx.context.password.verify({\n        hash: account.password,\n        password: ctx.body.password\n      });\n      if (!verify) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.INVALID_PASSWORD\n        });\n      }\n    } else {\n      if (ctx.context.options.session?.freshAge) {\n        const currentAge = session.session.createdAt.getTime();\n        const freshAge = ctx.context.options.session.freshAge;\n        const now = Date.now();\n        if (now - currentAge > freshAge) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: BASE_ERROR_CODES.SESSION_EXPIRED\n          });\n        }\n      }\n    }\n    if (ctx.body.token) {\n      await deleteUserCallback({\n        ...ctx,\n        query: {\n          token: ctx.body.token\n        }\n      });\n      return ctx.json({\n        success: true,\n        message: \"User deleted\"\n      });\n    }\n    if (ctx.context.options.user.deleteUser?.sendDeleteAccountVerification) {\n      const token = generateRandomString(32, \"0-9\", \"a-z\");\n      await ctx.context.internalAdapter.createVerificationValue({\n        value: session.user.id,\n        identifier: `delete-account-${token}`,\n        expiresAt: new Date(Date.now() + 1e3 * 60 * 60 * 24)\n      });\n      const url = `${ctx.context.baseURL}/delete-user/callback?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n      await ctx.context.options.user.deleteUser.sendDeleteAccountVerification(\n        {\n          user: session.user,\n          url,\n          token\n        },\n        ctx.request\n      );\n      return ctx.json({\n        success: true,\n        message: \"Verification email sent\"\n      });\n    }\n    const beforeDelete = ctx.context.options.user.deleteUser?.beforeDelete;\n    if (beforeDelete) {\n      await beforeDelete(session.user, ctx.request);\n    }\n    await ctx.context.internalAdapter.deleteUser(session.user.id);\n    await ctx.context.internalAdapter.deleteSessions(session.user.id);\n    await ctx.context.internalAdapter.deleteAccounts(session.user.id);\n    deleteSessionCookie(ctx);\n    const afterDelete = ctx.context.options.user.deleteUser?.afterDelete;\n    if (afterDelete) {\n      await afterDelete(session.user, ctx.request);\n    }\n    return ctx.json({\n      success: true,\n      message: \"User deleted\"\n    });\n  }\n);\nconst deleteUserCallback = createAuthEndpoint(\n  \"/delete-user/callback\",\n  {\n    method: \"GET\",\n    query: z.object({\n      token: z.string(),\n      callbackURL: z.string().optional()\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)]\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.deleteUser?.enabled) {\n      ctx.context.logger.error(\n        \"Delete user is disabled. Enable it in the options\"\n      );\n      throw new APIError(\"NOT_FOUND\");\n    }\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_USER_INFO\n      });\n    }\n    const token = await ctx.context.internalAdapter.findVerificationValue(\n      `delete-account-${ctx.query.token}`\n    );\n    if (!token || token.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    if (token.value !== session.user.id) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const beforeDelete = ctx.context.options.user.deleteUser?.beforeDelete;\n    if (beforeDelete) {\n      await beforeDelete(session.user, ctx.request);\n    }\n    await ctx.context.internalAdapter.deleteUser(session.user.id);\n    await ctx.context.internalAdapter.deleteSessions(session.user.id);\n    await ctx.context.internalAdapter.deleteAccounts(session.user.id);\n    await ctx.context.internalAdapter.deleteVerificationValue(token.id);\n    deleteSessionCookie(ctx);\n    const afterDelete = ctx.context.options.user.deleteUser?.afterDelete;\n    if (afterDelete) {\n      await afterDelete(session.user, ctx.request);\n    }\n    if (ctx.query.callbackURL) {\n      throw ctx.redirect(ctx.query.callbackURL || \"/\");\n    }\n    return ctx.json({\n      success: true,\n      message: \"User deleted\"\n    });\n  }\n);\nconst changeEmail = createAuthEndpoint(\n  \"/change-email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      newEmail: z.string({\n        description: \"The new email to set\"\n      }).email(),\n      callbackURL: z.string({\n        description: \"The URL to redirect to after email verification\"\n      }).optional()\n    }),\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      type: \"object\"\n                    },\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.changeEmail?.enabled) {\n      ctx.context.logger.error(\"Change email is disabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Change email is disabled\"\n      });\n    }\n    const newEmail = ctx.body.newEmail.toLowerCase();\n    if (newEmail === ctx.context.session.user.email) {\n      ctx.context.logger.error(\"Email is the same\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email is the same\"\n      });\n    }\n    const existingUser = await ctx.context.internalAdapter.findUserByEmail(newEmail);\n    if (existingUser) {\n      ctx.context.logger.error(\"Email already exists\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Couldn't update your email\"\n      });\n    }\n    if (ctx.context.session.user.emailVerified !== true) {\n      const existing = await ctx.context.internalAdapter.findUserByEmail(newEmail);\n      if (existing) {\n        throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n          message: BASE_ERROR_CODES.USER_ALREADY_EXISTS\n        });\n      }\n      await ctx.context.internalAdapter.updateUserByEmail(\n        ctx.context.session.user.email,\n        {\n          email: newEmail\n        },\n        ctx\n      );\n      await setSessionCookie(ctx, {\n        session: ctx.context.session.session,\n        user: {\n          ...ctx.context.session.user,\n          email: newEmail\n        }\n      });\n      if (ctx.context.options.emailVerification?.sendVerificationEmail) {\n        const token2 = await createEmailVerificationToken(\n          ctx.context.secret,\n          newEmail,\n          void 0,\n          ctx.context.options.emailVerification?.expiresIn\n        );\n        const url2 = `${ctx.context.baseURL}/verify-email?token=${token2}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n        await ctx.context.options.emailVerification.sendVerificationEmail(\n          {\n            user: {\n              ...ctx.context.session.user,\n              email: newEmail\n            },\n            url: url2,\n            token: token2\n          },\n          ctx.request\n        );\n      }\n      return ctx.json({\n        status: true\n      });\n    }\n    if (!ctx.context.options.user.changeEmail.sendChangeEmailVerification) {\n      ctx.context.logger.error(\"Verification email isn't enabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Verification email isn't enabled\"\n      });\n    }\n    const token = await createEmailVerificationToken(\n      ctx.context.secret,\n      ctx.context.session.user.email,\n      newEmail,\n      ctx.context.options.emailVerification?.expiresIn\n    );\n    const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n    await ctx.context.options.user.changeEmail.sendChangeEmailVerification(\n      {\n        user: ctx.context.session.user,\n        newEmail,\n        url,\n        token\n      },\n      ctx.request\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nfunction sanitize(input) {\n  return input.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n}\nconst html = (errorCode = \"Unknown\") => `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Authentication Error</title>\n    <style>\n        :root {\n            --bg-color: #f8f9fa;\n            --text-color: #212529;\n            --accent-color: #000000;\n            --error-color: #dc3545;\n            --border-color: #e9ecef;\n        }\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n            background-color: var(--bg-color);\n            color: var(--text-color);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            line-height: 1.5;\n        }\n        .error-container {\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n            padding: 2.5rem;\n            text-align: center;\n            max-width: 90%;\n            width: 400px;\n        }\n        h1 {\n            color: var(--error-color);\n            font-size: 1.75rem;\n            margin-bottom: 1rem;\n            font-weight: 600;\n        }\n        p {\n            margin-bottom: 1.5rem;\n            color: #495057;\n        }\n        .btn {\n            background-color: var(--accent-color);\n            color: #ffffff;\n            text-decoration: none;\n            padding: 0.75rem 1.5rem;\n            border-radius: 6px;\n            transition: all 0.3s ease;\n            display: inline-block;\n            font-weight: 500;\n            border: 2px solid var(--accent-color);\n        }\n        .btn:hover {\n            background-color: #131721;\n        }\n        .error-code {\n            font-size: 0.875rem;\n            color: #6c757d;\n            margin-top: 1.5rem;\n            padding-top: 1.5rem;\n            border-top: 1px solid var(--border-color);\n        }\n        .icon {\n            font-size: 3rem;\n            margin-bottom: 1rem;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"error-container\">\n        <div class=\"icon\">\\u26A0\\uFE0F</div>\n        <h1>Better Auth Error</h1>\n        <p>We encountered an issue while processing your request. Please try again or contact the application owner if the problem persists.</p>\n        <a href=\"/\" id=\"returnLink\" class=\"btn\">Return to Application</a>\n        <div class=\"error-code\">Error Code: <span id=\"errorCode\">${sanitize(\n  errorCode\n)}</span></div>\n    </div>\n</body>\n</html>`;\nconst error = createAuthEndpoint(\n  \"/error\",\n  {\n    method: \"GET\",\n    metadata: {\n      ...HIDE_METADATA,\n      openapi: {\n        description: \"Displays an error page\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"text/html\": {\n                schema: {\n                  type: \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const query = new URL(c.request?.url || \"\").searchParams.get(\"error\") || \"Unknown\";\n    return new Response(html(query), {\n      headers: {\n        \"Content-Type\": \"text/html\"\n      }\n    });\n  }\n);\n\nconst ok = createAuthEndpoint(\n  \"/ok\",\n  {\n    method: \"GET\",\n    metadata: {\n      ...HIDE_METADATA,\n      openapi: {\n        description: \"Check if the API is working\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    ok: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    return ctx.json({\n      ok: true\n    });\n  }\n);\n\nconst listUserAccounts = createAuthEndpoint(\n  \"/list-accounts\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"List all accounts linked to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\"\n                      },\n                      provider: {\n                        type: \"string\"\n                      },\n                      createdAt: {\n                        type: \"string\"\n                      },\n                      updatedAt: {\n                        type: \"string\"\n                      },\n                      accountId: {\n                        type: \"string\"\n                      },\n                      scopes: {\n                        type: \"array\",\n                        items: { type: \"string\" }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const session = c.context.session;\n    const accounts = await c.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    return c.json(\n      accounts.map((a) => ({\n        id: a.id,\n        provider: a.providerId,\n        createdAt: a.createdAt,\n        updatedAt: a.updatedAt,\n        accountId: a.accountId,\n        scopes: a.scope?.split(\",\") || []\n      }))\n    );\n  }\n);\nconst linkSocialAccount = createAuthEndpoint(\n  \"/link-social\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    body: z.object({\n      /**\n       * Callback URL to redirect to after the user has signed in.\n       */\n      callbackURL: z.string({\n        description: \"The URL to redirect to after the user has signed in\"\n      }).optional(),\n      /**\n       * OAuth2 provider to use\n       */\n      provider: z.enum(socialProviderList, {\n        description: \"The OAuth2 provider to use\"\n      })\n    }),\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Link a social account to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    url: {\n                      type: \"string\"\n                    },\n                    redirect: {\n                      type: \"boolean\"\n                    }\n                  },\n                  required: [\"url\", \"redirect\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const session = c.context.session;\n    await c.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.body.provider\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Provider not found. Make sure to add the provider in your auth config\",\n        {\n          provider: c.body.provider\n        }\n      );\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.PROVIDER_NOT_FOUND\n      });\n    }\n    const state = await generateState(c, {\n      userId: session.user.id,\n      email: session.user.email\n    });\n    const url = await provider.createAuthorizationURL({\n      state: state.state,\n      codeVerifier: state.codeVerifier,\n      redirectURI: `${c.context.baseURL}/callback/${provider.id}`\n    });\n    return c.json({\n      url: url.toString(),\n      redirect: true\n    });\n  }\n);\nconst unlinkAccount = createAuthEndpoint(\n  \"/unlink-account\",\n  {\n    method: \"POST\",\n    body: z.object({\n      providerId: z.string(),\n      accountId: z.string()\n      // Add account ID to identify which account to unlink\n    }),\n    use: [freshSessionMiddleware]\n  },\n  async (ctx) => {\n    const { providerId, accountId } = ctx.body;\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      ctx.context.session.user.id\n    );\n    const accountExist = accounts.find(\n      (account) => account.providerId === providerId && account.accountId === accountId\n    );\n    if (!accountExist) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.ACCOUNT_NOT_FOUND\n      });\n    }\n    const remainingAccounts = accounts.filter(\n      (account) => account.providerId === ctx.body.providerId\n    );\n    if (remainingAccounts.length === 1) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_UNLINK_LAST_ACCOUNT\n      });\n    }\n    await ctx.context.internalAdapter.deleteAccount(accountExist.id);\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nexport { changePassword as A, BASE_ERROR_CODES as B, changeEmail as C, sendVerificationEmail as D, verifyEmail as E, resetPassword as F, forgetPassword as G, HIDE_METADATA as H, signInEmail as I, signOut as J, callbackOAuth as K, signInSocial as L, requestOnlySessionMiddleware as M, optionsMiddleware as N, createAuthEndpoint as a, sendVerificationEmailFn as b, createAuthMiddleware as c, createEmailVerificationToken as d, getSession as e, freshSessionMiddleware as f, getSessionFromCtx as g, handleOAuthUserInfo as h, originCheckMiddleware as i, error as j, ok as k, listSessions as l, unlinkAccount as m, deleteUserCallback as n, originCheck as o, listUserAccounts as p, linkSocialAccount as q, revokeOtherSessions as r, sessionMiddleware as s, revokeSessions as t, updateUser as u, revokeSession as v, wildcardMatch as w, forgetPasswordCallback as x, deleteUser as y, setPassword as z };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3464, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.Duk7IG0N.mjs"],"sourcesContent":["import { i as isTest } from './better-auth.8zoxzg-F.mjs';\n\nfunction getIp(req, options) {\n  if (options.advanced?.ipAddress?.disableIpTracking) {\n    return null;\n  }\n  const testIP = \"127.0.0.1\";\n  if (isTest) {\n    return testIP;\n  }\n  const ipHeaders = options.advanced?.ipAddress?.ipAddressHeaders;\n  const keys = ipHeaders || [\n    \"x-client-ip\",\n    \"x-forwarded-for\",\n    \"cf-connecting-ip\",\n    \"fastly-client-ip\",\n    \"x-real-ip\",\n    \"x-cluster-client-ip\",\n    \"x-forwarded\",\n    \"forwarded-for\",\n    \"forwarded\"\n  ];\n  const headers = req instanceof Request ? req.headers : req;\n  for (const key of keys) {\n    const value = headers.get(key);\n    if (typeof value === \"string\") {\n      const ip = value.split(\",\")[0].trim();\n      if (ip) return ip;\n    }\n  }\n  return null;\n}\n\nexport { getIp as g };\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,MAAM,GAAG,EAAE,OAAO;IACzB,IAAI,QAAQ,QAAQ,EAAE,WAAW,mBAAmB;QAClD,OAAO;IACT;IACA,MAAM,SAAS;IACf,IAAI,oLAAA,CAAA,IAAM,EAAE;QACV,OAAO;IACT;IACA,MAAM,YAAY,QAAQ,QAAQ,EAAE,WAAW;IAC/C,MAAM,OAAO,aAAa;QACxB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,MAAM,UAAU,eAAe,UAAU,IAAI,OAAO,GAAG;IACvD,KAAK,MAAM,OAAO,KAAM;QACtB,MAAM,QAAQ,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;YACnC,IAAI,IAAI,OAAO;QACjB;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3506, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.OT3XFeFk.mjs"],"sourcesContent":["import { scryptAsync } from '@noble/hashes/scrypt';\nimport { getRandomValues } from '@better-auth/utils';\nimport { hex } from '@better-auth/utils/hex';\nimport { hexToBytes } from '@noble/hashes/utils';\n\nfunction constantTimeEqual(a, b) {\n  const aBuffer = new Uint8Array(a);\n  const bBuffer = new Uint8Array(b);\n  if (aBuffer.length !== bBuffer.length) {\n    return false;\n  }\n  let c = 0;\n  for (let i = 0; i < aBuffer.length; i++) {\n    c |= aBuffer[i] ^ bBuffer[i];\n  }\n  return c === 0;\n}\n\nconst config = {\n  N: 16384,\n  r: 16,\n  p: 1,\n  dkLen: 64\n};\nasync function generateKey(password, salt) {\n  return await scryptAsync(password.normalize(\"NFKC\"), salt, {\n    N: config.N,\n    p: config.p,\n    r: config.r,\n    dkLen: config.dkLen,\n    maxmem: 128 * config.N * config.r * 2\n  });\n}\nconst hashPassword = async (password) => {\n  const salt = hex.encode(getRandomValues(new Uint8Array(16)));\n  const key = await generateKey(password, salt);\n  return `${salt}:${hex.encode(key)}`;\n};\nconst verifyPassword = async ({\n  hash,\n  password\n}) => {\n  const [salt, key] = hash.split(\":\");\n  const targetKey = await generateKey(password, salt);\n  return constantTimeEqual(targetKey, hexToBytes(key));\n};\n\nexport { constantTimeEqual as c, hashPassword as h, verifyPassword as v };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;AACA;;;;;AAEA,SAAS,kBAAkB,CAAC,EAAE,CAAC;IAC7B,MAAM,UAAU,IAAI,WAAW;IAC/B,MAAM,UAAU,IAAI,WAAW;IAC/B,IAAI,QAAQ,MAAM,KAAK,QAAQ,MAAM,EAAE;QACrC,OAAO;IACT;IACA,IAAI,IAAI;IACR,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAAK;QACvC,KAAK,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE;IAC9B;IACA,OAAO,MAAM;AACf;AAEA,MAAM,SAAS;IACb,GAAG;IACH,GAAG;IACH,GAAG;IACH,OAAO;AACT;AACA,eAAe,YAAY,QAAQ,EAAE,IAAI;IACvC,OAAO,MAAM,CAAA,GAAA,oJAAA,CAAA,cAAW,AAAD,EAAE,SAAS,SAAS,CAAC,SAAS,MAAM;QACzD,GAAG,OAAO,CAAC;QACX,GAAG,OAAO,CAAC;QACX,GAAG,OAAO,CAAC;QACX,OAAO,OAAO,KAAK;QACnB,QAAQ,MAAM,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG;IACtC;AACF;AACA,MAAM,eAAe,OAAO;IAC1B,MAAM,OAAO,2JAAA,CAAA,MAAG,CAAC,MAAM,CAAC,CAAA,GAAA,qJAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,WAAW;IACvD,MAAM,MAAM,MAAM,YAAY,UAAU;IACxC,OAAO,GAAG,KAAK,CAAC,EAAE,2JAAA,CAAA,MAAG,CAAC,MAAM,CAAC,MAAM;AACrC;AACA,MAAM,iBAAiB,OAAO,EAC5B,IAAI,EACJ,QAAQ,EACT;IACC,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,KAAK,CAAC;IAC/B,MAAM,YAAY,MAAM,YAAY,UAAU;IAC9C,OAAO,kBAAkB,WAAW,CAAA,GAAA,mJAAA,CAAA,aAAU,AAAD,EAAE;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3564, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.DORkW_Ge.mjs"],"sourcesContent":["const getAuthTables = (options) => {\n  const pluginSchema = options.plugins?.reduce(\n    (acc, plugin) => {\n      const schema = plugin.schema;\n      if (!schema) return acc;\n      for (const [key, value] of Object.entries(schema)) {\n        acc[key] = {\n          fields: {\n            ...acc[key]?.fields,\n            ...value.fields\n          },\n          modelName: value.modelName || key\n        };\n      }\n      return acc;\n    },\n    {}\n  );\n  const shouldAddRateLimitTable = options.rateLimit?.storage === \"database\";\n  const rateLimitTable = {\n    rateLimit: {\n      modelName: options.rateLimit?.modelName || \"rateLimit\",\n      fields: {\n        key: {\n          type: \"string\",\n          fieldName: options.rateLimit?.fields?.key || \"key\"\n        },\n        count: {\n          type: \"number\",\n          fieldName: options.rateLimit?.fields?.count || \"count\"\n        },\n        lastRequest: {\n          type: \"number\",\n          bigint: true,\n          fieldName: options.rateLimit?.fields?.lastRequest || \"lastRequest\"\n        }\n      }\n    }\n  };\n  const { user, session, account, ...pluginTables } = pluginSchema || {};\n  const sessionTable = {\n    session: {\n      modelName: options.session?.modelName || \"session\",\n      fields: {\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.expiresAt || \"expiresAt\"\n        },\n        token: {\n          type: \"string\",\n          required: true,\n          fieldName: options.session?.fields?.token || \"token\",\n          unique: true\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.updatedAt || \"updatedAt\"\n        },\n        ipAddress: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.ipAddress || \"ipAddress\"\n        },\n        userAgent: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.userAgent || \"userAgent\"\n        },\n        userId: {\n          type: \"string\",\n          fieldName: options.session?.fields?.userId || \"userId\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true\n        },\n        ...session?.fields,\n        ...options.session?.additionalFields\n      },\n      order: 2\n    }\n  };\n  return {\n    user: {\n      modelName: options.user?.modelName || \"user\",\n      fields: {\n        name: {\n          type: \"string\",\n          required: true,\n          fieldName: options.user?.fields?.name || \"name\",\n          sortable: true\n        },\n        email: {\n          type: \"string\",\n          unique: true,\n          required: true,\n          fieldName: options.user?.fields?.email || \"email\",\n          sortable: true\n        },\n        emailVerified: {\n          type: \"boolean\",\n          defaultValue: () => false,\n          required: true,\n          fieldName: options.user?.fields?.emailVerified || \"emailVerified\"\n        },\n        image: {\n          type: \"string\",\n          required: false,\n          fieldName: options.user?.fields?.image || \"image\"\n        },\n        createdAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.updatedAt || \"updatedAt\"\n        },\n        ...user?.fields,\n        ...options.user?.additionalFields\n      },\n      order: 1\n    },\n    //only add session table if it's not stored in secondary storage\n    ...!options.secondaryStorage || options.session?.storeSessionInDatabase ? sessionTable : {},\n    account: {\n      modelName: options.account?.modelName || \"account\",\n      fields: {\n        accountId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.accountId || \"accountId\"\n        },\n        providerId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.providerId || \"providerId\"\n        },\n        userId: {\n          type: \"string\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true,\n          fieldName: options.account?.fields?.userId || \"userId\"\n        },\n        accessToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.accessToken || \"accessToken\"\n        },\n        refreshToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.refreshToken || \"refreshToken\"\n        },\n        idToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.idToken || \"idToken\"\n        },\n        accessTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"accessTokenExpiresAt\"\n        },\n        refreshTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"refreshTokenExpiresAt\"\n        },\n        scope: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.scope || \"scope\"\n        },\n        password: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.password || \"password\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.updatedAt || \"updatedAt\"\n        },\n        ...account?.fields\n      },\n      order: 3\n    },\n    verification: {\n      modelName: options.verification?.modelName || \"verification\",\n      fields: {\n        identifier: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.identifier || \"identifier\"\n        },\n        value: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.value || \"value\"\n        },\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.verification?.fields?.expiresAt || \"expiresAt\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: false,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: false,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.updatedAt || \"updatedAt\"\n        }\n      },\n      order: 4\n    },\n    ...pluginTables,\n    ...shouldAddRateLimitTable ? rateLimitTable : {}\n  };\n};\n\nexport { getAuthTables as g };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3818, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.0TC26uRi.mjs"],"sourcesContent":["function withApplyDefault(value, field, action) {\n  if (action === \"update\") {\n    return value;\n  }\n  if (value === void 0 || value === null) {\n    if (field.defaultValue) {\n      if (typeof field.defaultValue === \"function\") {\n        return field.defaultValue();\n      }\n      return field.defaultValue;\n    }\n  }\n  return value;\n}\n\nexport { withApplyDefault as w };\n"],"names":[],"mappings":";;;AAAA,SAAS,iBAAiB,KAAK,EAAE,KAAK,EAAE,MAAM;IAC5C,IAAI,WAAW,UAAU;QACvB,OAAO;IACT;IACA,IAAI,UAAU,KAAK,KAAK,UAAU,MAAM;QACtC,IAAI,MAAM,YAAY,EAAE;YACtB,IAAI,OAAO,MAAM,YAAY,KAAK,YAAY;gBAC5C,OAAO,MAAM,YAAY;YAC3B;YACA,OAAO,MAAM,YAAY;QAC3B;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3842, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.HHZU10im.mjs"],"sourcesContent":["import { Kysely, SqliteDialect, MysqlDialect, PostgresDialect, MssqlDialect } from 'kysely';\nimport './better-auth.C24Bzw4w.mjs';\nimport './better-auth.8zoxzg-F.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport './better-auth.DH3YjMQH.mjs';\nimport { g as getAuthTables } from './better-auth.DORkW_Ge.mjs';\nimport { w as withApplyDefault } from './better-auth.0TC26uRi.mjs';\n\nfunction getDatabaseType(db) {\n  if (!db) {\n    return null;\n  }\n  if (\"dialect\" in db) {\n    return getDatabaseType(db.dialect);\n  }\n  if (\"createDriver\" in db) {\n    if (db instanceof SqliteDialect) {\n      return \"sqlite\";\n    }\n    if (db instanceof MysqlDialect) {\n      return \"mysql\";\n    }\n    if (db instanceof PostgresDialect) {\n      return \"postgres\";\n    }\n    if (db instanceof MssqlDialect) {\n      return \"mssql\";\n    }\n  }\n  if (\"aggregate\" in db) {\n    return \"sqlite\";\n  }\n  if (\"getConnection\" in db) {\n    return \"mysql\";\n  }\n  if (\"connect\" in db) {\n    return \"postgres\";\n  }\n  return null;\n}\nconst createKyselyAdapter = async (config) => {\n  const db = config.database;\n  if (!db) {\n    return {\n      kysely: null,\n      databaseType: null\n    };\n  }\n  if (\"db\" in db) {\n    return {\n      kysely: db.db,\n      databaseType: db.type\n    };\n  }\n  if (\"dialect\" in db) {\n    return {\n      kysely: new Kysely({ dialect: db.dialect }),\n      databaseType: db.type\n    };\n  }\n  let dialect = void 0;\n  const databaseType = getDatabaseType(db);\n  if (\"createDriver\" in db) {\n    dialect = db;\n  }\n  if (\"aggregate\" in db) {\n    dialect = new SqliteDialect({\n      database: db\n    });\n  }\n  if (\"getConnection\" in db) {\n    dialect = new MysqlDialect(db);\n  }\n  if (\"connect\" in db) {\n    dialect = new PostgresDialect({\n      pool: db\n    });\n  }\n  return {\n    kysely: dialect ? new Kysely({ dialect }) : null,\n    databaseType\n  };\n};\n\nconst createTransform = (db, options, config) => {\n  const schema = getAuthTables(options);\n  function getField(model, field) {\n    if (field === \"id\") {\n      return field;\n    }\n    const f = schema[model].fields[field];\n    if (!f) {\n      console.log(\"Field not found\", model, field);\n    }\n    return f.fieldName || field;\n  }\n  function transformValueToDB(value, model, field) {\n    if (field === \"id\") {\n      return value;\n    }\n    const { type = \"sqlite\" } = config || {};\n    const f = schema[model].fields[field];\n    if (f.type === \"boolean\" && (type === \"sqlite\" || type === \"mssql\") && value !== null && value !== void 0) {\n      return value ? 1 : 0;\n    }\n    if (f.type === \"date\" && value && value instanceof Date) {\n      return type === \"sqlite\" ? value.toISOString() : value;\n    }\n    return value;\n  }\n  function transformValueFromDB(value, model, field) {\n    const { type = \"sqlite\" } = config || {};\n    const f = schema[model].fields[field];\n    if (f.type === \"boolean\" && (type === \"sqlite\" || type === \"mssql\") && value !== null) {\n      return value === 1;\n    }\n    if (f.type === \"date\" && value) {\n      return new Date(value);\n    }\n    return value;\n  }\n  function getModelName(model) {\n    return schema[model].modelName;\n  }\n  const useDatabaseGeneratedId = options?.advanced?.generateId === false;\n  return {\n    transformInput(data, model, action) {\n      const transformedData = useDatabaseGeneratedId || action === \"update\" ? {} : {\n        id: options.advanced?.generateId ? options.advanced.generateId({\n          model\n        }) : data.id || generateId()\n      };\n      const fields = schema[model].fields;\n      for (const field in fields) {\n        const value = data[field];\n        transformedData[fields[field].fieldName || field] = withApplyDefault(\n          transformValueToDB(value, model, field),\n          fields[field],\n          action\n        );\n      }\n      return transformedData;\n    },\n    transformOutput(data, model, select = []) {\n      if (!data) return null;\n      const transformedData = data.id ? select.length === 0 || select.includes(\"id\") ? {\n        id: data.id\n      } : {} : {};\n      const tableSchema = schema[model].fields;\n      for (const key in tableSchema) {\n        if (select.length && !select.includes(key)) {\n          continue;\n        }\n        const field = tableSchema[key];\n        if (field) {\n          transformedData[key] = transformValueFromDB(\n            data[field.fieldName || key],\n            model,\n            key\n          );\n        }\n      }\n      return transformedData;\n    },\n    convertWhereClause(model, w) {\n      if (!w)\n        return {\n          and: null,\n          or: null\n        };\n      const conditions = {\n        and: [],\n        or: []\n      };\n      w.forEach((condition) => {\n        let {\n          field: _field,\n          value,\n          operator = \"=\",\n          connector = \"AND\"\n        } = condition;\n        const field = getField(model, _field);\n        value = transformValueToDB(value, model, _field);\n        const expr = (eb) => {\n          if (operator.toLowerCase() === \"in\") {\n            return eb(field, \"in\", Array.isArray(value) ? value : [value]);\n          }\n          if (operator === \"contains\") {\n            return eb(field, \"like\", `%${value}%`);\n          }\n          if (operator === \"starts_with\") {\n            return eb(field, \"like\", `${value}%`);\n          }\n          if (operator === \"ends_with\") {\n            return eb(field, \"like\", `%${value}`);\n          }\n          if (operator === \"eq\") {\n            return eb(field, \"=\", value);\n          }\n          if (operator === \"ne\") {\n            return eb(field, \"<>\", value);\n          }\n          if (operator === \"gt\") {\n            return eb(field, \">\", value);\n          }\n          if (operator === \"gte\") {\n            return eb(field, \">=\", value);\n          }\n          if (operator === \"lt\") {\n            return eb(field, \"<\", value);\n          }\n          if (operator === \"lte\") {\n            return eb(field, \"<=\", value);\n          }\n          return eb(field, operator, value);\n        };\n        if (connector === \"OR\") {\n          conditions.or.push(expr);\n        } else {\n          conditions.and.push(expr);\n        }\n      });\n      return {\n        and: conditions.and.length ? conditions.and : null,\n        or: conditions.or.length ? conditions.or : null\n      };\n    },\n    async withReturning(values, builder, model, where) {\n      let res;\n      if (config?.type === \"mysql\") {\n        await builder.execute();\n        const field = values.id ? \"id\" : where[0].field ? where[0].field : \"id\";\n        const value = values[field] || where[0].value;\n        res = await db.selectFrom(getModelName(model)).selectAll().where(getField(model, field), \"=\", value).executeTakeFirst();\n        return res;\n      }\n      if (config?.type === \"mssql\") {\n        res = await builder.outputAll(\"inserted\").executeTakeFirst();\n        return res;\n      }\n      res = await builder.returningAll().executeTakeFirst();\n      return res;\n    },\n    getModelName,\n    getField\n  };\n};\nconst kyselyAdapter = (db, config) => (opts) => {\n  const {\n    transformInput,\n    withReturning,\n    transformOutput,\n    convertWhereClause,\n    getModelName,\n    getField\n  } = createTransform(db, opts, config);\n  return {\n    id: \"kysely\",\n    async create(data) {\n      const { model, data: values, select } = data;\n      const transformed = transformInput(values, model, \"create\");\n      const builder = db.insertInto(getModelName(model)).values(transformed);\n      return transformOutput(\n        await withReturning(transformed, builder, model, []),\n        model,\n        select\n      );\n    },\n    async findOne(data) {\n      const { model, where, select } = data;\n      const { and, or } = convertWhereClause(model, where);\n      let query = db.selectFrom(getModelName(model)).selectAll();\n      if (and) {\n        query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n      }\n      if (or) {\n        query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n      }\n      const res = await query.executeTakeFirst();\n      if (!res) return null;\n      return transformOutput(res, model, select);\n    },\n    async findMany(data) {\n      const { model, where, limit, offset, sortBy } = data;\n      const { and, or } = convertWhereClause(model, where);\n      let query = db.selectFrom(getModelName(model));\n      if (and) {\n        query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n      }\n      if (or) {\n        query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n      }\n      if (config?.type === \"mssql\") {\n        if (!offset) {\n          query = query.top(limit || 100);\n        }\n      } else {\n        query = query.limit(limit || 100);\n      }\n      if (sortBy) {\n        query = query.orderBy(\n          getField(model, sortBy.field),\n          sortBy.direction\n        );\n      }\n      if (offset) {\n        if (config?.type === \"mssql\") {\n          if (!sortBy) {\n            query = query.orderBy(getField(model, \"id\"));\n          }\n          query = query.offset(offset).fetch(limit || 100);\n        } else {\n          query = query.offset(offset);\n        }\n      }\n      const res = await query.selectAll().execute();\n      if (!res) return [];\n      return res.map((r) => transformOutput(r, model));\n    },\n    async update(data) {\n      const { model, where, update: values } = data;\n      const { and, or } = convertWhereClause(model, where);\n      const transformedData = transformInput(values, model, \"update\");\n      let query = db.updateTable(getModelName(model)).set(transformedData);\n      if (and) {\n        query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n      }\n      if (or) {\n        query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n      }\n      const res = await transformOutput(\n        await withReturning(transformedData, query, model, where),\n        model\n      );\n      return res;\n    },\n    async updateMany(data) {\n      const { model, where, update: values } = data;\n      const { and, or } = convertWhereClause(model, where);\n      const transformedData = transformInput(values, model, \"update\");\n      let query = db.updateTable(getModelName(model)).set(transformedData);\n      if (and) {\n        query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n      }\n      if (or) {\n        query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n      }\n      const res = await query.execute();\n      return res.length;\n    },\n    async count(data) {\n      const { model, where } = data;\n      const { and, or } = convertWhereClause(model, where);\n      let query = db.selectFrom(getModelName(model)).select(db.fn.count(\"id\").as(\"count\"));\n      if (and) {\n        query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n      }\n      if (or) {\n        query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n      }\n      const res = await query.execute();\n      return res[0].count;\n    },\n    async delete(data) {\n      const { model, where } = data;\n      const { and, or } = convertWhereClause(model, where);\n      let query = db.deleteFrom(getModelName(model));\n      if (and) {\n        query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n      }\n      if (or) {\n        query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n      }\n      await query.execute();\n    },\n    async deleteMany(data) {\n      const { model, where } = data;\n      const { and, or } = convertWhereClause(model, where);\n      let query = db.deleteFrom(getModelName(model));\n      if (and) {\n        query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n      }\n      if (or) {\n        query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n      }\n      return (await query.execute()).length;\n    },\n    options: config\n  };\n};\n\nexport { createKyselyAdapter as c, kyselyAdapter as k };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4246, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.D8LeJoj0.mjs"],"sourcesContent":["import './better-auth.C24Bzw4w.mjs';\nimport './better-auth.8zoxzg-F.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport './better-auth.DH3YjMQH.mjs';\nimport { g as getAuthTables } from './better-auth.DORkW_Ge.mjs';\nimport 'kysely';\nimport { w as withApplyDefault } from './better-auth.0TC26uRi.mjs';\n\nconst createTransform = (options) => {\n  const schema = getAuthTables(options);\n  function getField(model, field) {\n    if (field === \"id\") {\n      return field;\n    }\n    const f = schema[model].fields[field];\n    return f.fieldName || field;\n  }\n  return {\n    transformInput(data, model, action) {\n      const transformedData = action === \"update\" ? {} : {\n        id: options.advanced?.generateId ? options.advanced.generateId({\n          model\n        }) : data.id || generateId()\n      };\n      const fields = schema[model].fields;\n      for (const field in fields) {\n        const value = data[field];\n        if (value === void 0 && !fields[field].defaultValue) {\n          continue;\n        }\n        transformedData[fields[field].fieldName || field] = withApplyDefault(\n          value,\n          fields[field],\n          action\n        );\n      }\n      return transformedData;\n    },\n    transformOutput(data, model, select = []) {\n      if (!data) return null;\n      const transformedData = data.id || data._id ? select.length === 0 || select.includes(\"id\") ? {\n        id: data.id\n      } : {} : {};\n      const tableSchema = schema[model].fields;\n      for (const key in tableSchema) {\n        if (select.length && !select.includes(key)) {\n          continue;\n        }\n        const field = tableSchema[key];\n        if (field) {\n          transformedData[key] = data[field.fieldName || key];\n        }\n      }\n      return transformedData;\n    },\n    convertWhereClause(where, table, model) {\n      return table.filter((record) => {\n        return where.every((clause) => {\n          const { field: _field, value, operator } = clause;\n          const field = getField(model, _field);\n          if (operator === \"in\") {\n            if (!Array.isArray(value)) {\n              throw new Error(\"Value must be an array\");\n            }\n            return value.includes(record[field]);\n          } else if (operator === \"contains\") {\n            return record[field].includes(value);\n          } else if (operator === \"starts_with\") {\n            return record[field].startsWith(value);\n          } else if (operator === \"ends_with\") {\n            return record[field].endsWith(value);\n          } else {\n            return record[field] === value;\n          }\n        });\n      });\n    },\n    getField\n  };\n};\nconst memoryAdapter = (db) => (options) => {\n  const { transformInput, transformOutput, convertWhereClause, getField } = createTransform(options);\n  return {\n    id: \"memory\",\n    create: async ({ model, data }) => {\n      const transformed = transformInput(data, model, \"create\");\n      db[model].push(transformed);\n      return transformOutput(transformed, model);\n    },\n    findOne: async ({ model, where, select }) => {\n      const table = db[model];\n      const res = convertWhereClause(where, table, model);\n      const record = res[0] || null;\n      return transformOutput(record, model, select);\n    },\n    findMany: async ({ model, where, sortBy, limit, offset }) => {\n      let table = db[model];\n      if (where) {\n        table = convertWhereClause(where, table, model);\n      }\n      if (sortBy) {\n        table = table.sort((a, b) => {\n          const field = getField(model, sortBy.field);\n          if (sortBy.direction === \"asc\") {\n            return a[field] > b[field] ? 1 : -1;\n          } else {\n            return a[field] < b[field] ? 1 : -1;\n          }\n        });\n      }\n      if (offset !== void 0) {\n        table = table.slice(offset);\n      }\n      if (limit !== void 0) {\n        table = table.slice(0, limit);\n      }\n      return table.map((record) => transformOutput(record, model));\n    },\n    count: async ({ model }) => {\n      return db[model].length;\n    },\n    update: async ({ model, where, update }) => {\n      const table = db[model];\n      const res = convertWhereClause(where, table, model);\n      res.forEach((record) => {\n        Object.assign(record, transformInput(update, model, \"update\"));\n      });\n      return transformOutput(res[0], model);\n    },\n    delete: async ({ model, where }) => {\n      const table = db[model];\n      const res = convertWhereClause(where, table, model);\n      db[model] = table.filter((record) => !res.includes(record));\n    },\n    deleteMany: async ({ model, where }) => {\n      const table = db[model];\n      const res = convertWhereClause(where, table, model);\n      let count = 0;\n      db[model] = table.filter((record) => {\n        if (res.includes(record)) {\n          count++;\n          return false;\n        }\n        return !res.includes(record);\n      });\n      return count;\n    },\n    updateMany(data) {\n      const { model, where, update } = data;\n      const table = db[model];\n      const res = convertWhereClause(where, table, model);\n      res.forEach((record) => {\n        Object.assign(record, update);\n      });\n      return res[0] || null;\n    }\n  };\n};\n\nexport { memoryAdapter as m };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4434, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.67eSHmUo.mjs"],"sourcesContent":["import { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { d as parseSessionOutput, b as parseUserOutput } from './better-auth.C24Bzw4w.mjs';\nimport { g as getIp } from './better-auth.Duk7IG0N.mjs';\nimport { s as safeJSONParse } from './better-auth.tB5eU6EY.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { a as logger, c as createLogger } from './better-auth.DH3YjMQH.mjs';\nimport './better-auth.8zoxzg-F.mjs';\nimport '@better-auth/utils/random';\nimport { g as getAuthTables } from './better-auth.DORkW_Ge.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { c as createKyselyAdapter, k as kyselyAdapter } from './better-auth.HHZU10im.mjs';\nimport { m as memoryAdapter } from './better-auth.D8LeJoj0.mjs';\nimport 'kysely';\n\nfunction getWithHooks(adapter, ctx) {\n  const hooks = ctx.hooks;\n  async function createWithHooks(data, model, customCreateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.before;\n      if (toRun) {\n        const result = await toRun(actualData, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\" && \"data\" in result;\n        if (isObject) {\n          actualData = {\n            ...actualData,\n            ...result.data\n          };\n        }\n      }\n    }\n    const customCreated = customCreateFn ? await customCreateFn.fn(actualData) : null;\n    const created = !customCreateFn || customCreateFn.executeMainFn ? await adapter.create({\n      model,\n      data: actualData\n    }) : customCreated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.after;\n      if (toRun) {\n        await toRun(created, context);\n      }\n    }\n    return created;\n  }\n  async function updateWithHooks(data, where, model, customUpdateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await adapter.update({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  async function updateManyWithHooks(data, where, model, customUpdateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await adapter.updateMany({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  return {\n    createWithHooks,\n    updateWithHooks,\n    updateManyWithHooks\n  };\n}\n\nconst createInternalAdapter = (adapter, ctx) => {\n  const options = ctx.options;\n  const secondaryStorage = options.secondaryStorage;\n  const sessionExpiration = options.session?.expiresIn || 60 * 60 * 24 * 7;\n  const { createWithHooks, updateWithHooks, updateManyWithHooks } = getWithHooks(adapter, ctx);\n  return {\n    createOAuthUser: async (user, account, context) => {\n      const createdUser = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...user\n        },\n        \"user\",\n        void 0,\n        context\n      );\n      const createdAccount = await createWithHooks(\n        {\n          ...account,\n          userId: createdUser.id || user.id,\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date()\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return {\n        user: createdUser,\n        account: createdAccount\n      };\n    },\n    createUser: async (user, context) => {\n      const createdUser = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          emailVerified: false,\n          ...user,\n          email: user.email?.toLowerCase()\n        },\n        \"user\",\n        void 0,\n        context\n      );\n      return createdUser;\n    },\n    createAccount: async (account, context) => {\n      const createdAccount = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return createdAccount;\n    },\n    listSessions: async (userId) => {\n      if (secondaryStorage) {\n        const currentList = await secondaryStorage.get(\n          `active-sessions-${userId}`\n        );\n        if (!currentList) return [];\n        const list = safeJSONParse(currentList) || [];\n        const now = Date.now();\n        const validSessions = list.filter((s) => s.expiresAt > now);\n        const sessions2 = [];\n        for (const session of validSessions) {\n          const sessionStringified = await secondaryStorage.get(session.token);\n          if (sessionStringified) {\n            const s = JSON.parse(sessionStringified);\n            const parsedSession = parseSessionOutput(ctx.options, {\n              ...s.session,\n              expiresAt: new Date(s.session.expiresAt)\n            });\n            sessions2.push(parsedSession);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await adapter.findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return sessions;\n    },\n    listUsers: async (limit, offset, sortBy, where) => {\n      const users = await adapter.findMany({\n        model: \"user\",\n        limit,\n        offset,\n        sortBy,\n        where\n      });\n      return users;\n    },\n    countTotalUsers: async () => {\n      const total = await adapter.count({\n        model: \"user\"\n      });\n      return total;\n    },\n    deleteUser: async (userId) => {\n      if (secondaryStorage) {\n        await secondaryStorage.delete(`active-sessions-${userId}`);\n      }\n      if (!secondaryStorage || options.session?.storeSessionInDatabase) {\n        await adapter.deleteMany({\n          model: \"session\",\n          where: [\n            {\n              field: \"userId\",\n              value: userId\n            }\n          ]\n        });\n      }\n      await adapter.deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      await adapter.delete({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n    },\n    createSession: async (userId, request, dontRememberMe, override, context, overrideAll) => {\n      const headers = request instanceof Request ? request.headers : request;\n      const { id: _, ...rest } = override || {};\n      const data = {\n        ipAddress: request ? getIp(request, ctx.options) || \"\" : \"\",\n        userAgent: headers?.get(\"user-agent\") || \"\",\n        ...rest,\n        /**\n         * If the user doesn't want to be remembered\n         * set the session to expire in 1 day.\n         * The cookie will be set to expire at the end of the session\n         */\n        expiresAt: dontRememberMe ? getDate(60 * 60 * 24, \"sec\") : getDate(sessionExpiration, \"sec\"),\n        userId,\n        token: generateId(32),\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        ...overrideAll ? rest : {}\n      };\n      const res = await createWithHooks(\n        data,\n        \"session\",\n        secondaryStorage ? {\n          fn: async (sessionData) => {\n            const currentList = await secondaryStorage.get(\n              `active-sessions-${userId}`\n            );\n            let list = [];\n            const now = Date.now();\n            if (currentList) {\n              list = safeJSONParse(currentList) || [];\n              list = list.filter((session) => session.expiresAt > now);\n            }\n            list.push({\n              token: data.token,\n              expiresAt: now + sessionExpiration * 1e3\n            });\n            await secondaryStorage.set(\n              `active-sessions-${userId}`,\n              JSON.stringify(list),\n              sessionExpiration\n            );\n            return sessionData;\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        context\n      );\n      return res;\n    },\n    findSession: async (token) => {\n      if (secondaryStorage) {\n        const sessionStringified = await secondaryStorage.get(token);\n        if (!sessionStringified) {\n          return null;\n        }\n        const s = JSON.parse(sessionStringified);\n        const parsedSession2 = parseSessionOutput(ctx.options, {\n          ...s.session,\n          expiresAt: new Date(s.session.expiresAt),\n          createdAt: new Date(s.session.createdAt),\n          updatedAt: new Date(s.session.updatedAt)\n        });\n        const parsedUser2 = parseUserOutput(ctx.options, {\n          ...s.user,\n          createdAt: new Date(s.user.createdAt),\n          updatedAt: new Date(s.user.updatedAt)\n        });\n        return {\n          session: parsedSession2,\n          user: parsedUser2\n        };\n      }\n      const session = await adapter.findOne({\n        model: \"session\",\n        where: [\n          {\n            value: token,\n            field: \"token\"\n          }\n        ]\n      });\n      if (!session) {\n        return null;\n      }\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            value: session.userId,\n            field: \"id\"\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      const parsedSession = parseSessionOutput(ctx.options, session);\n      const parsedUser = parseUserOutput(ctx.options, user);\n      return {\n        session: parsedSession,\n        user: parsedUser\n      };\n    },\n    findSessions: async (sessionTokens) => {\n      if (secondaryStorage) {\n        const sessions2 = [];\n        for (const sessionToken of sessionTokens) {\n          const sessionStringified = await secondaryStorage.get(sessionToken);\n          if (sessionStringified) {\n            const s = JSON.parse(sessionStringified);\n            const session = {\n              session: {\n                ...s.session,\n                expiresAt: new Date(s.session.expiresAt)\n              },\n              user: {\n                ...s.user,\n                createdAt: new Date(s.user.createdAt),\n                updatedAt: new Date(s.user.updatedAt)\n              }\n            };\n            sessions2.push(session);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await adapter.findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: sessionTokens,\n            operator: \"in\"\n          }\n        ]\n      });\n      const userIds = sessions.map((session) => {\n        return session.userId;\n      });\n      if (!userIds.length) return [];\n      const users = await adapter.findMany({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userIds,\n            operator: \"in\"\n          }\n        ]\n      });\n      return sessions.map((session) => {\n        const user = users.find((u) => u.id === session.userId);\n        if (!user) return null;\n        return {\n          session,\n          user\n        };\n      });\n    },\n    updateSession: async (sessionToken, session, context) => {\n      const updatedSession = await updateWithHooks(\n        session,\n        [{ field: \"token\", value: sessionToken }],\n        \"session\",\n        secondaryStorage ? {\n          async fn(data) {\n            const currentSession = await secondaryStorage.get(sessionToken);\n            let updatedSession2 = null;\n            if (currentSession) {\n              const parsedSession = JSON.parse(currentSession);\n              updatedSession2 = {\n                ...parsedSession.session,\n                ...data\n              };\n              return updatedSession2;\n            } else {\n              return null;\n            }\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        context\n      );\n      return updatedSession;\n    },\n    deleteSession: async (token) => {\n      if (secondaryStorage) {\n        await secondaryStorage.delete(token);\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await adapter.delete({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: token\n          }\n        ]\n      });\n    },\n    deleteAccounts: async (userId) => {\n      await adapter.deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n    },\n    deleteAccount: async (accountId) => {\n      await adapter.delete({\n        model: \"account\",\n        where: [\n          {\n            field: \"id\",\n            value: accountId\n          }\n        ]\n      });\n    },\n    deleteSessions: async (userIdOrSessionTokens) => {\n      if (secondaryStorage) {\n        if (typeof userIdOrSessionTokens === \"string\") {\n          const activeSession = await secondaryStorage.get(\n            `active-sessions-${userIdOrSessionTokens}`\n          );\n          const sessions = activeSession ? safeJSONParse(activeSession) : [];\n          if (!sessions) return;\n          for (const session of sessions) {\n            await secondaryStorage.delete(session.token);\n          }\n        } else {\n          for (const sessionToken of userIdOrSessionTokens) {\n            const session = await secondaryStorage.get(sessionToken);\n            if (session) {\n              await secondaryStorage.delete(sessionToken);\n            }\n          }\n        }\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await adapter.deleteMany({\n        model: \"session\",\n        where: [\n          {\n            field: Array.isArray(userIdOrSessionTokens) ? \"token\" : \"userId\",\n            value: userIdOrSessionTokens,\n            operator: Array.isArray(userIdOrSessionTokens) ? \"in\" : void 0\n          }\n        ]\n      });\n    },\n    findOAuthUser: async (email, accountId, providerId) => {\n      const account = await adapter.findOne({\n        model: \"account\",\n        where: [\n          {\n            value: accountId,\n            field: \"accountId\"\n          },\n          {\n            value: providerId,\n            field: \"providerId\"\n          }\n        ]\n      });\n      if (account) {\n        const user = await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              value: account.userId,\n              field: \"id\"\n            }\n          ]\n        });\n        if (user) {\n          return {\n            user,\n            accounts: [account]\n          };\n        } else {\n          return null;\n        }\n      } else {\n        const user = await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              value: email.toLowerCase(),\n              field: \"email\"\n            }\n          ]\n        });\n        if (user) {\n          const accounts = await adapter.findMany({\n            model: \"account\",\n            where: [\n              {\n                value: user.id,\n                field: \"userId\"\n              }\n            ]\n          });\n          return {\n            user,\n            accounts: accounts || []\n          };\n        } else {\n          return null;\n        }\n      }\n    },\n    findUserByEmail: async (email, options2) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            value: email.toLowerCase(),\n            field: \"email\"\n          }\n        ]\n      });\n      if (!user) return null;\n      if (options2?.includeAccounts) {\n        const accounts = await adapter.findMany({\n          model: \"account\",\n          where: [\n            {\n              value: user.id,\n              field: \"userId\"\n            }\n          ]\n        });\n        return {\n          user,\n          accounts\n        };\n      }\n      return {\n        user,\n        accounts: []\n      };\n    },\n    findUserById: async (userId) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n      return user;\n    },\n    linkAccount: async (account, context) => {\n      const _account = await createWithHooks(\n        {\n          ...account,\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date()\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return _account;\n    },\n    updateUser: async (userId, data, context) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ],\n        \"user\",\n        void 0,\n        context\n      );\n      return user;\n    },\n    updateUserByEmail: async (email, data, context) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"email\",\n            value: email.toLowerCase()\n          }\n        ],\n        \"user\",\n        void 0,\n        context\n      );\n      return user;\n    },\n    updatePassword: async (userId, password, context) => {\n      await updateManyWithHooks(\n        {\n          password\n        },\n        [\n          {\n            field: \"userId\",\n            value: userId\n          },\n          {\n            field: \"providerId\",\n            value: \"credential\"\n          }\n        ],\n        \"account\",\n        void 0,\n        context\n      );\n    },\n    findAccounts: async (userId) => {\n      const accounts = await adapter.findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return accounts;\n    },\n    findAccount: async (accountId) => {\n      const account = await adapter.findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByUserId: async (userId) => {\n      const account = await adapter.findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return account;\n    },\n    updateAccount: async (accountId, data, context) => {\n      const account = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: accountId }],\n        \"account\",\n        void 0,\n        context\n      );\n      return account;\n    },\n    createVerificationValue: async (data, context) => {\n      const verification = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...data\n        },\n        \"verification\",\n        void 0,\n        context\n      );\n      return verification;\n    },\n    findVerificationValue: async (identifier) => {\n      const verification = await adapter.findMany({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ],\n        sortBy: {\n          field: \"createdAt\",\n          direction: \"desc\"\n        },\n        limit: 1\n      });\n      if (!options.verification?.disableCleanup) {\n        await adapter.deleteMany({\n          model: \"verification\",\n          where: [\n            {\n              field: \"expiresAt\",\n              value: /* @__PURE__ */ new Date(),\n              operator: \"lt\"\n            }\n          ]\n        });\n      }\n      const lastVerification = verification[0];\n      return lastVerification;\n    },\n    deleteVerificationValue: async (id) => {\n      await adapter.delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"id\",\n            value: id\n          }\n        ]\n      });\n    },\n    deleteVerificationByIdentifier: async (identifier) => {\n      await adapter.delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ]\n      });\n    },\n    updateVerificationValue: async (id, data, context) => {\n      const verification = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"verification\",\n        void 0,\n        context\n      );\n      return verification;\n    }\n  };\n};\n\nasync function getAdapter(options) {\n  if (!options.database) {\n    const tables = getAuthTables(options);\n    const memoryDB = Object.keys(tables).reduce((acc, key) => {\n      acc[key] = [];\n      return acc;\n    }, {});\n    logger.warn(\n      \"No database configuration provided. Using memory adapter in development\"\n    );\n    return memoryAdapter(memoryDB)(options);\n  }\n  if (typeof options.database === \"function\") {\n    return options.database(options);\n  }\n  const { kysely, databaseType } = await createKyselyAdapter(options);\n  if (!kysely) {\n    throw new BetterAuthError(\"Failed to initialize database adapter\");\n  }\n  return kyselyAdapter(kysely, {\n    type: databaseType || \"sqlite\"\n  })(options);\n}\nfunction convertToDB(fields, values) {\n  let result = values.id ? {\n    id: values.id\n  } : {};\n  for (const key in fields) {\n    const field = fields[key];\n    const value = values[key];\n    if (value === void 0) {\n      continue;\n    }\n    result[field.fieldName || key] = value;\n  }\n  return result;\n}\nfunction convertFromDB(fields, values) {\n  if (!values) {\n    return null;\n  }\n  let result = {\n    id: values.id\n  };\n  for (const [key, value] of Object.entries(fields)) {\n    result[key] = values[value.fieldName || key];\n  }\n  return result;\n}\n\nfunction getSchema(config) {\n  const tables = getAuthTables(config);\n  let schema = {};\n  for (const key in tables) {\n    const table = tables[key];\n    const fields = table.fields;\n    let actualFields = {};\n    Object.entries(fields).forEach(([key2, field]) => {\n      actualFields[field.fieldName || key2] = field;\n      if (field.references) {\n        const refTable = tables[field.references.model];\n        if (refTable) {\n          actualFields[field.fieldName || key2].references = {\n            model: refTable.modelName,\n            field: field.references.field\n          };\n        }\n      }\n    });\n    if (schema[table.modelName]) {\n      schema[table.modelName].fields = {\n        ...schema[table.modelName].fields,\n        ...actualFields\n      };\n      continue;\n    }\n    schema[table.modelName] = {\n      fields: actualFields,\n      order: table.order || Infinity\n    };\n  }\n  return schema;\n}\n\nconst postgresMap = {\n  string: [\"character varying\", \"text\"],\n  number: [\n    \"int4\",\n    \"integer\",\n    \"bigint\",\n    \"smallint\",\n    \"numeric\",\n    \"real\",\n    \"double precision\"\n  ],\n  boolean: [\"bool\", \"boolean\"],\n  date: [\"timestamp\", \"date\"]\n};\nconst mysqlMap = {\n  string: [\"varchar\", \"text\"],\n  number: [\n    \"integer\",\n    \"int\",\n    \"bigint\",\n    \"smallint\",\n    \"decimal\",\n    \"float\",\n    \"double\"\n  ],\n  boolean: [\"boolean\", \"tinyint\"],\n  date: [\"timestamp\", \"datetime\", \"date\"]\n};\nconst sqliteMap = {\n  string: [\"TEXT\"],\n  number: [\"INTEGER\", \"REAL\"],\n  boolean: [\"INTEGER\", \"BOOLEAN\"],\n  // 0 or 1\n  date: [\"DATE\", \"INTEGER\"]\n};\nconst mssqlMap = {\n  string: [\"text\", \"varchar\"],\n  number: [\"int\", \"bigint\", \"smallint\", \"decimal\", \"float\", \"double\"],\n  boolean: [\"bit\", \"smallint\"],\n  date: [\"datetime\", \"date\"]\n};\nconst map = {\n  postgres: postgresMap,\n  mysql: mysqlMap,\n  sqlite: sqliteMap,\n  mssql: mssqlMap\n};\nfunction matchType(columnDataType, fieldType, dbType) {\n  if (fieldType === \"string[]\" || fieldType === \"number[]\") {\n    return columnDataType.toLowerCase().includes(\"json\");\n  }\n  const types = map[dbType];\n  const type = Array.isArray(fieldType) ? types[\"string\"].map((t) => t.toLowerCase()) : types[fieldType].map((t) => t.toLowerCase());\n  const matches = type.includes(columnDataType.toLowerCase());\n  return matches;\n}\nasync function getMigrations(config) {\n  const betterAuthSchema = getSchema(config);\n  const logger = createLogger(config.logger);\n  let { kysely: db, databaseType: dbType } = await createKyselyAdapter(config);\n  if (!dbType) {\n    logger.warn(\n      \"Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this.\"\n    );\n    dbType = \"sqlite\";\n  }\n  if (!db) {\n    logger.error(\n      \"Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter.\"\n    );\n    process.exit(1);\n  }\n  const tableMetadata = await db.introspection.getTables();\n  const toBeCreated = [];\n  const toBeAdded = [];\n  for (const [key, value] of Object.entries(betterAuthSchema)) {\n    const table = tableMetadata.find((t) => t.name === key);\n    if (!table) {\n      const tIndex = toBeCreated.findIndex((t) => t.table === key);\n      const tableData = {\n        table: key,\n        fields: value.fields,\n        order: value.order || Infinity\n      };\n      const insertIndex = toBeCreated.findIndex(\n        (t) => (t.order || Infinity) > tableData.order\n      );\n      if (insertIndex === -1) {\n        if (tIndex === -1) {\n          toBeCreated.push(tableData);\n        } else {\n          toBeCreated[tIndex].fields = {\n            ...toBeCreated[tIndex].fields,\n            ...value.fields\n          };\n        }\n      } else {\n        toBeCreated.splice(insertIndex, 0, tableData);\n      }\n      continue;\n    }\n    let toBeAddedFields = {};\n    for (const [fieldName, field] of Object.entries(value.fields)) {\n      const column = table.columns.find((c) => c.name === fieldName);\n      if (!column) {\n        toBeAddedFields[fieldName] = field;\n        continue;\n      }\n      if (matchType(column.dataType, field.type, dbType)) {\n        continue;\n      } else {\n        logger.warn(\n          `Field ${fieldName} in table ${key} has a different type in the database. Expected ${field.type} but got ${column.dataType}.`\n        );\n      }\n    }\n    if (Object.keys(toBeAddedFields).length > 0) {\n      toBeAdded.push({\n        table: key,\n        fields: toBeAddedFields,\n        order: value.order || Infinity\n      });\n    }\n  }\n  const migrations = [];\n  function getType(field) {\n    const type = field.type;\n    const typeMap = {\n      string: {\n        sqlite: \"text\",\n        postgres: \"text\",\n        mysql: field.unique ? \"varchar(255)\" : field.references ? \"varchar(36)\" : \"text\",\n        mssql: field.unique || field.sortable ? \"varchar(255)\" : field.references ? \"varchar(36)\" : \"text\"\n      },\n      boolean: {\n        sqlite: \"integer\",\n        postgres: \"boolean\",\n        mysql: \"boolean\",\n        mssql: \"smallint\"\n      },\n      number: {\n        sqlite: field.bigint ? \"bigint\" : \"integer\",\n        postgres: field.bigint ? \"bigint\" : \"integer\",\n        mysql: field.bigint ? \"bigint\" : \"integer\",\n        mssql: field.bigint ? \"bigint\" : \"integer\"\n      },\n      date: {\n        sqlite: \"date\",\n        postgres: \"timestamp\",\n        mysql: \"datetime\",\n        mssql: \"datetime\"\n      }\n    };\n    if (dbType === \"sqlite\" && (type === \"string[]\" || type === \"number[]\")) {\n      return \"text\";\n    }\n    if (type === \"string[]\" || type === \"number[]\") {\n      return \"jsonb\";\n    }\n    if (Array.isArray(type)) {\n      return \"text\";\n    }\n    return typeMap[type][dbType || \"sqlite\"];\n  }\n  if (toBeAdded.length) {\n    for (const table of toBeAdded) {\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field);\n        const exec = db.schema.alterTable(table.table).addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(\n              `${field.references.model}.${field.references.field}`\n            );\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          return col;\n        });\n        migrations.push(exec);\n      }\n    }\n  }\n  if (toBeCreated.length) {\n    for (const table of toBeCreated) {\n      let dbT = db.schema.createTable(table.table).addColumn(\n        \"id\",\n        dbType === \"mysql\" || dbType === \"mssql\" ? \"varchar(36)\" : \"text\",\n        (col) => col.primaryKey().notNull()\n      );\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field);\n        dbT = dbT.addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(\n              `${field.references.model}.${field.references.field}`\n            );\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          return col;\n        });\n      }\n      migrations.push(dbT);\n    }\n  }\n  async function runMigrations() {\n    for (const migration of migrations) {\n      await migration.execute();\n    }\n  }\n  async function compileMigrations() {\n    const compiled = migrations.map((m) => m.compile().sql);\n    return compiled.join(\";\\n\\n\") + \";\";\n  }\n  return { toBeCreated, toBeAdded, runMigrations, compileMigrations };\n}\n\nexport { getAdapter as a, convertToDB as b, createInternalAdapter as c, convertFromDB as d, getMigrations as e, getSchema as f, getWithHooks as g, matchType as m };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5552, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.YwDQhoPc.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nasync function validatePassword(ctx, data) {\n  const accounts = await ctx.context.internalAdapter.findAccounts(data.userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword) {\n    return false;\n  }\n  const compare = await ctx.context.password.verify({\n    hash: currentPassword,\n    password: data.password\n  });\n  return compare;\n}\nasync function checkPassword(userId, c) {\n  const accounts = await c.context.internalAdapter.findAccounts(userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword || !c.body.password) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"No password credential found\"\n    });\n  }\n  const compare = await c.context.password.verify({\n    hash: currentPassword,\n    password: c.body.password\n  });\n  if (!compare) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Invalid password\"\n    });\n  }\n  return true;\n}\n\nexport { checkPassword as c, validatePassword as v };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,eAAe,iBAAiB,GAAG,EAAE,IAAI;IACvC,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,MAAM;IAC3E,MAAM,oBAAoB,UAAU,KAClC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,mBAAmB;IAC3C,IAAI,CAAC,qBAAqB,CAAC,iBAAiB;QAC1C,OAAO;IACT;IACA,MAAM,UAAU,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChD,MAAM;QACN,UAAU,KAAK,QAAQ;IACzB;IACA,OAAO;AACT;AACA,eAAe,cAAc,MAAM,EAAE,CAAC;IACpC,MAAM,WAAW,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;IAC9D,MAAM,oBAAoB,UAAU,KAClC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,mBAAmB;IAC3C,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE;QAC9D,MAAM,IAAI,iJAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,UAAU,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC9C,MAAM;QACN,UAAU,EAAE,IAAI,CAAC,QAAQ;IAC3B;IACA,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,iJAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5598, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.D-2CmEwz.mjs"],"sourcesContent":["function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport { capitalizeFirstLetter as c };\n"],"names":[],"mappings":";;;AAAA,SAAS,sBAAsB,GAAG;IAChC,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5611, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.ffWeg50w.mjs"],"sourcesContent":["const PROTO_POLLUTION_PATTERNS = {\n  proto: /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/,\n  constructor: /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/,\n  protoShort: /\"__proto__\"\\s*:/,\n  constructorShort: /\"constructor\"\\s*:/\n};\nconst JSON_SIGNATURE = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nconst SPECIAL_VALUES = {\n  true: true,\n  false: false,\n  null: null,\n  undefined: void 0,\n  nan: Number.NaN,\n  infinity: Number.POSITIVE_INFINITY,\n  \"-infinity\": Number.NEGATIVE_INFINITY\n};\nconst ISO_DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{1,7}))?(?:Z|([+-])(\\d{2}):(\\d{2}))$/;\nfunction isValidDate(date) {\n  return date instanceof Date && !isNaN(date.getTime());\n}\nfunction parseISODate(value) {\n  const match = ISO_DATE_REGEX.exec(value);\n  if (!match) return null;\n  const [\n    ,\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    ms,\n    offsetSign,\n    offsetHour,\n    offsetMinute\n  ] = match;\n  let date = new Date(\n    Date.UTC(\n      parseInt(year, 10),\n      parseInt(month, 10) - 1,\n      parseInt(day, 10),\n      parseInt(hour, 10),\n      parseInt(minute, 10),\n      parseInt(second, 10),\n      ms ? parseInt(ms.padEnd(3, \"0\"), 10) : 0\n    )\n  );\n  if (offsetSign) {\n    const offset = (parseInt(offsetHour, 10) * 60 + parseInt(offsetMinute, 10)) * (offsetSign === \"+\" ? -1 : 1);\n    date.setUTCMinutes(date.getUTCMinutes() + offset);\n  }\n  return isValidDate(date) ? date : null;\n}\nfunction betterJSONParse(value, options = {}) {\n  const {\n    strict = false,\n    warnings = false,\n    reviver,\n    parseDates = true\n  } = options;\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const trimmed = value.trim();\n  if (trimmed[0] === '\"' && trimmed.endsWith('\"') && !trimmed.slice(1, -1).includes('\"')) {\n    return trimmed.slice(1, -1);\n  }\n  const lowerValue = trimmed.toLowerCase();\n  if (lowerValue.length <= 9 && lowerValue in SPECIAL_VALUES) {\n    return SPECIAL_VALUES[lowerValue];\n  }\n  if (!JSON_SIGNATURE.test(trimmed)) {\n    if (strict) {\n      throw new SyntaxError(\"[better-json] Invalid JSON\");\n    }\n    return value;\n  }\n  const hasProtoPattern = Object.entries(PROTO_POLLUTION_PATTERNS).some(\n    ([key, pattern]) => {\n      const matches = pattern.test(trimmed);\n      if (matches && warnings) {\n        console.warn(\n          `[better-json] Detected potential prototype pollution attempt using ${key} pattern`\n        );\n      }\n      return matches;\n    }\n  );\n  if (hasProtoPattern && strict) {\n    throw new Error(\n      \"[better-json] Potential prototype pollution attempt detected\"\n    );\n  }\n  try {\n    const secureReviver = (key, value2) => {\n      if (key === \"__proto__\" || key === \"constructor\" && value2 && typeof value2 === \"object\" && \"prototype\" in value2) {\n        if (warnings) {\n          console.warn(\n            `[better-json] Dropping \"${key}\" key to prevent prototype pollution`\n          );\n        }\n        return void 0;\n      }\n      if (parseDates && typeof value2 === \"string\") {\n        const date = parseISODate(value2);\n        if (date) {\n          return date;\n        }\n      }\n      return reviver ? reviver(key, value2) : value2;\n    };\n    return JSON.parse(trimmed, secureReviver);\n  } catch (error) {\n    if (strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction parseJSON(value, options = { strict: true }) {\n  return betterJSONParse(value, options);\n}\n\nexport { parseJSON as p };\n"],"names":[],"mappings":";;;AAAA,MAAM,2BAA2B;IAC/B,OAAO;IACP,aAAa;IACb,YAAY;IACZ,kBAAkB;AACpB;AACA,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;IACrB,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW,KAAK;IAChB,KAAK,OAAO,GAAG;IACf,UAAU,OAAO,iBAAiB;IAClC,aAAa,OAAO,iBAAiB;AACvC;AACA,MAAM,iBAAiB;AACvB,SAAS,YAAY,IAAI;IACvB,OAAO,gBAAgB,QAAQ,CAAC,MAAM,KAAK,OAAO;AACpD;AACA,SAAS,aAAa,KAAK;IACzB,MAAM,QAAQ,eAAe,IAAI,CAAC;IAClC,IAAI,CAAC,OAAO,OAAO;IACnB,MAAM,GAEJ,MACA,OACA,KACA,MACA,QACA,QACA,IACA,YACA,YACA,aACD,GAAG;IACJ,IAAI,OAAO,IAAI,KACb,KAAK,GAAG,CACN,SAAS,MAAM,KACf,SAAS,OAAO,MAAM,GACtB,SAAS,KAAK,KACd,SAAS,MAAM,KACf,SAAS,QAAQ,KACjB,SAAS,QAAQ,KACjB,KAAK,SAAS,GAAG,MAAM,CAAC,GAAG,MAAM,MAAM;IAG3C,IAAI,YAAY;QACd,MAAM,SAAS,CAAC,SAAS,YAAY,MAAM,KAAK,SAAS,cAAc,GAAG,IAAI,CAAC,eAAe,MAAM,CAAC,IAAI,CAAC;QAC1G,KAAK,aAAa,CAAC,KAAK,aAAa,KAAK;IAC5C;IACA,OAAO,YAAY,QAAQ,OAAO;AACpC;AACA,SAAS,gBAAgB,KAAK,EAAE,UAAU,CAAC,CAAC;IAC1C,MAAM,EACJ,SAAS,KAAK,EACd,WAAW,KAAK,EAChB,OAAO,EACP,aAAa,IAAI,EAClB,GAAG;IACJ,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;IACT;IACA,MAAM,UAAU,MAAM,IAAI;IAC1B,IAAI,OAAO,CAAC,EAAE,KAAK,OAAO,QAAQ,QAAQ,CAAC,QAAQ,CAAC,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM;QACtF,OAAO,QAAQ,KAAK,CAAC,GAAG,CAAC;IAC3B;IACA,MAAM,aAAa,QAAQ,WAAW;IACtC,IAAI,WAAW,MAAM,IAAI,KAAK,cAAc,gBAAgB;QAC1D,OAAO,cAAc,CAAC,WAAW;IACnC;IACA,IAAI,CAAC,eAAe,IAAI,CAAC,UAAU;QACjC,IAAI,QAAQ;YACV,MAAM,IAAI,YAAY;QACxB;QACA,OAAO;IACT;IACA,MAAM,kBAAkB,OAAO,OAAO,CAAC,0BAA0B,IAAI,CACnE,CAAC,CAAC,KAAK,QAAQ;QACb,MAAM,UAAU,QAAQ,IAAI,CAAC;QAC7B,IAAI,WAAW,UAAU;YACvB,QAAQ,IAAI,CACV,CAAC,mEAAmE,EAAE,IAAI,QAAQ,CAAC;QAEvF;QACA,OAAO;IACT;IAEF,IAAI,mBAAmB,QAAQ;QAC7B,MAAM,IAAI,MACR;IAEJ;IACA,IAAI;QACF,MAAM,gBAAgB,CAAC,KAAK;YAC1B,IAAI,QAAQ,eAAe,QAAQ,iBAAiB,UAAU,OAAO,WAAW,YAAY,eAAe,QAAQ;gBACjH,IAAI,UAAU;oBACZ,QAAQ,IAAI,CACV,CAAC,wBAAwB,EAAE,IAAI,oCAAoC,CAAC;gBAExE;gBACA,OAAO,KAAK;YACd;YACA,IAAI,cAAc,OAAO,WAAW,UAAU;gBAC5C,MAAM,OAAO,aAAa;gBAC1B,IAAI,MAAM;oBACR,OAAO;gBACT;YACF;YACA,OAAO,UAAU,QAAQ,KAAK,UAAU;QAC1C;QACA,OAAO,KAAK,KAAK,CAAC,SAAS;IAC7B,EAAE,OAAO,OAAO;QACd,IAAI,QAAQ;YACV,MAAM;QACR;QACA,OAAO;IACT;AACF;AACA,SAAS,UAAU,KAAK,EAAE,UAAU;IAAE,QAAQ;AAAK,CAAC;IAClD,OAAO,gBAAgB,OAAO;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5710, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.D4VhqHde.mjs"],"sourcesContent":["import { APIError } from 'better-call';\nimport { z } from 'zod';\nimport { c as createAuthMiddleware, s as sessionMiddleware, a as createAuthEndpoint, g as getSessionFromCtx, B as BASE_ERROR_CODES, M as requestOnlySessionMiddleware } from './better-auth.C92a320y.mjs';\nimport './better-auth.8zoxzg-F.mjs';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport './better-auth.C24Bzw4w.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { p as parseJSON } from './better-auth.ffWeg50w.mjs';\nimport './better-auth.DH3YjMQH.mjs';\nimport 'defu';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { defaultRoles } from '../plugins/organization/access/index.mjs';\nimport { setSessionCookie } from '../cookies/index.mjs';\n\nconst shimContext = (originalObject, newContext) => {\n  const shimmedObj = {};\n  for (const [key, value] of Object.entries(originalObject)) {\n    shimmedObj[key] = (ctx) => {\n      return value({\n        ...ctx,\n        context: {\n          ...newContext,\n          ...ctx.context\n        }\n      });\n    };\n    shimmedObj[key].path = value.path;\n    shimmedObj[key].method = value.method;\n    shimmedObj[key].options = value.options;\n    shimmedObj[key].headers = value.headers;\n  }\n  return shimmedObj;\n};\n\nconst getOrgAdapter = (context, options) => {\n  const adapter = context.adapter;\n  return {\n    findOrganizationBySlug: async (slug) => {\n      const organization = await adapter.findOne({\n        model: \"organization\",\n        where: [\n          {\n            field: \"slug\",\n            value: slug\n          }\n        ]\n      });\n      return organization;\n    },\n    createOrganization: async (data) => {\n      const organization = await adapter.create({\n        model: \"organization\",\n        data: {\n          ...data.organization,\n          metadata: data.organization.metadata ? JSON.stringify(data.organization.metadata) : void 0\n        }\n      });\n      return {\n        ...organization,\n        metadata: organization.metadata ? JSON.parse(organization.metadata) : void 0\n      };\n    },\n    findMemberByEmail: async (data) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"email\",\n            value: data.email\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      const member = await adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: data.organizationId\n          },\n          {\n            field: \"userId\",\n            value: user.id\n          }\n        ]\n      });\n      if (!member) {\n        return null;\n      }\n      return {\n        ...member,\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          image: user.image\n        }\n      };\n    },\n    listMembers: async (data) => {\n      const members = await adapter.findMany({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: data.organizationId\n          }\n        ],\n        limit: options?.membershipLimit || 100\n      });\n      return members;\n    },\n    findMemberByOrgId: async (data) => {\n      const [member, user] = await Promise.all([\n        await adapter.findOne({\n          model: \"member\",\n          where: [\n            {\n              field: \"userId\",\n              value: data.userId\n            },\n            {\n              field: \"organizationId\",\n              value: data.organizationId\n            }\n          ]\n        }),\n        await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              field: \"id\",\n              value: data.userId\n            }\n          ]\n        })\n      ]);\n      if (!user || !member) {\n        return null;\n      }\n      return {\n        ...member,\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          image: user.image\n        }\n      };\n    },\n    findMemberById: async (memberId) => {\n      const member = await adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"id\",\n            value: memberId\n          }\n        ]\n      });\n      if (!member) {\n        return null;\n      }\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: member.userId\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      return {\n        ...member,\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          image: user.image\n        }\n      };\n    },\n    createMember: async (data) => {\n      const member = await adapter.create({\n        model: \"member\",\n        data: {\n          ...data,\n          createdAt: /* @__PURE__ */ new Date()\n        }\n      });\n      return member;\n    },\n    updateMember: async (memberId, role) => {\n      const member = await adapter.update({\n        model: \"member\",\n        where: [\n          {\n            field: \"id\",\n            value: memberId\n          }\n        ],\n        update: {\n          role\n        }\n      });\n      return member;\n    },\n    deleteMember: async (memberId) => {\n      const member = await adapter.delete({\n        model: \"member\",\n        where: [\n          {\n            field: \"id\",\n            value: memberId\n          }\n        ]\n      });\n      return member;\n    },\n    updateOrganization: async (organizationId, data) => {\n      const organization = await adapter.update({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationId\n          }\n        ],\n        update: {\n          ...data,\n          metadata: typeof data.metadata === \"object\" ? JSON.stringify(data.metadata) : data.metadata\n        }\n      });\n      if (!organization) {\n        return null;\n      }\n      return {\n        ...organization,\n        metadata: organization.metadata ? parseJSON(organization.metadata) : void 0\n      };\n    },\n    deleteOrganization: async (organizationId) => {\n      await adapter.delete({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      await adapter.delete({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      await adapter.delete({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationId\n          }\n        ]\n      });\n      return organizationId;\n    },\n    setActiveOrganization: async (sessionToken, organizationId) => {\n      const session = await context.internalAdapter.updateSession(\n        sessionToken,\n        {\n          activeOrganizationId: organizationId\n        }\n      );\n      return session;\n    },\n    findOrganizationById: async (organizationId) => {\n      const organization = await adapter.findOne({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationId\n          }\n        ]\n      });\n      return organization;\n    },\n    /**\n     * @requires db\n     */\n    findFullOrganization: async ({\n      organizationId,\n      isSlug,\n      includeTeams\n    }) => {\n      const org = await adapter.findOne({\n        model: \"organization\",\n        where: [{ field: isSlug ? \"slug\" : \"id\", value: organizationId }]\n      });\n      if (!org) {\n        return null;\n      }\n      const [invitations, members, teams] = await Promise.all([\n        adapter.findMany({\n          model: \"invitation\",\n          where: [{ field: \"organizationId\", value: org.id }]\n        }),\n        adapter.findMany({\n          model: \"member\",\n          where: [{ field: \"organizationId\", value: org.id }],\n          limit: options?.membershipLimit || 100\n        }),\n        includeTeams ? adapter.findMany({\n          model: \"team\",\n          where: [{ field: \"organizationId\", value: org.id }]\n        }) : null\n      ]);\n      if (!org) return null;\n      const userIds = members.map((member) => member.userId);\n      const users = await adapter.findMany({\n        model: \"user\",\n        where: [{ field: \"id\", value: userIds, operator: \"in\" }],\n        limit: options?.membershipLimit || 100\n      });\n      const userMap = new Map(users.map((user) => [user.id, user]));\n      const membersWithUsers = members.map((member) => {\n        const user = userMap.get(member.userId);\n        if (!user) {\n          throw new BetterAuthError(\n            \"Unexpected error: User not found for member\"\n          );\n        }\n        return {\n          ...member,\n          user: {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            image: user.image\n          }\n        };\n      });\n      return {\n        ...org,\n        invitations,\n        members: membersWithUsers,\n        teams\n      };\n    },\n    listOrganizations: async (userId) => {\n      const members = await adapter.findMany({\n        model: \"member\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ],\n        limit: options?.membershipLimit || 100\n      });\n      if (!members || members.length === 0) {\n        return [];\n      }\n      const organizationIds = members.map((member) => member.organizationId);\n      const organizations = await adapter.findMany({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationIds,\n            operator: \"in\"\n          }\n        ]\n      });\n      return organizations;\n    },\n    createTeam: async (data) => {\n      const team = await adapter.create({\n        model: \"team\",\n        data\n      });\n      return team;\n    },\n    findTeamById: async ({\n      teamId,\n      organizationId,\n      includeTeamMembers\n    }) => {\n      const team = await adapter.findOne({\n        model: \"team\",\n        where: [\n          {\n            field: \"id\",\n            value: teamId\n          },\n          ...organizationId ? [\n            {\n              field: \"organizationId\",\n              value: organizationId\n            }\n          ] : []\n        ]\n      });\n      if (!team) {\n        return null;\n      }\n      let members = [];\n      if (includeTeamMembers) {\n        members = await adapter.findMany({\n          model: \"member\",\n          where: [\n            {\n              field: \"teamId\",\n              value: teamId\n            }\n          ],\n          limit: options?.membershipLimit || 100\n        });\n        return {\n          ...team,\n          members\n        };\n      }\n      return team;\n    },\n    updateTeam: async (teamId, data) => {\n      const team = await adapter.update({\n        model: \"team\",\n        where: [\n          {\n            field: \"id\",\n            value: teamId\n          }\n        ],\n        update: {\n          ...data\n        }\n      });\n      return team;\n    },\n    deleteTeam: async (teamId) => {\n      const team = await adapter.delete({\n        model: \"team\",\n        where: [\n          {\n            field: \"id\",\n            value: teamId\n          }\n        ]\n      });\n      return team;\n    },\n    listTeams: async (organizationId) => {\n      const teams = await adapter.findMany({\n        model: \"team\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      return teams;\n    },\n    createTeamInvitation: async ({\n      email,\n      role,\n      teamId,\n      organizationId,\n      inviterId,\n      expiresIn = 1e3 * 60 * 60 * 48\n      // Default expiration: 48 hours\n    }) => {\n      const expiresAt = getDate(expiresIn);\n      const invitation = await adapter.create({\n        model: \"invitation\",\n        data: {\n          email,\n          role,\n          organizationId,\n          teamId,\n          inviterId,\n          status: \"pending\",\n          expiresAt\n        }\n      });\n      return invitation;\n    },\n    findInvitationsByTeamId: async (teamId) => {\n      const invitations = await adapter.findMany({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"teamId\",\n            value: teamId\n          }\n        ]\n      });\n      return invitations;\n    },\n    createInvitation: async ({\n      invitation,\n      user\n    }) => {\n      const defaultExpiration = 1e3 * 60 * 60 * 48;\n      const expiresAt = getDate(\n        options?.invitationExpiresIn || defaultExpiration\n      );\n      const invite = await adapter.create({\n        model: \"invitation\",\n        data: {\n          status: \"pending\",\n          expiresAt,\n          inviterId: user.id,\n          ...invitation\n        }\n      });\n      return invite;\n    },\n    findInvitationById: async (id) => {\n      const invitation = await adapter.findOne({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"id\",\n            value: id\n          }\n        ]\n      });\n      return invitation;\n    },\n    findPendingInvitation: async (data) => {\n      const invitation = await adapter.findMany({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"email\",\n            value: data.email\n          },\n          {\n            field: \"organizationId\",\n            value: data.organizationId\n          },\n          {\n            field: \"status\",\n            value: \"pending\"\n          }\n        ]\n      });\n      return invitation.filter(\n        (invite) => new Date(invite.expiresAt) > /* @__PURE__ */ new Date()\n      );\n    },\n    updateInvitation: async (data) => {\n      const invitation = await adapter.update({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"id\",\n            value: data.invitationId\n          }\n        ],\n        update: {\n          status: data.status\n        }\n      });\n      return invitation;\n    }\n  };\n};\n\nconst orgMiddleware = createAuthMiddleware(async (ctx) => {\n  return {};\n});\nconst orgSessionMiddleware = createAuthMiddleware(\n  {\n    use: [sessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    return {\n      session\n    };\n  }\n);\n\nconst ORGANIZATION_ERROR_CODES = {\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_ORGANIZATION: \"You are not allowed to create a new organization\",\n  YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_ORGANIZATIONS: \"You have reached the maximum number of organizations\",\n  ORGANIZATION_ALREADY_EXISTS: \"Organization already exists\",\n  ORGANIZATION_NOT_FOUND: \"Organization not found\",\n  USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION: \"User is not a member of the organization\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_ORGANIZATION: \"You are not allowed to update this organization\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_ORGANIZATION: \"You are not allowed to delete this organization\",\n  NO_ACTIVE_ORGANIZATION: \"No active organization\",\n  USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION: \"User is already a member of this organization\",\n  MEMBER_NOT_FOUND: \"Member not found\",\n  ROLE_NOT_FOUND: \"Role not found\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_TEAM: \"You are not allowed to create a new team\",\n  TEAM_ALREADY_EXISTS: \"Team already exists\",\n  TEAM_NOT_FOUND: \"Team not found\",\n  YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER: \"You cannot leave the organization as the only owner\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_MEMBER: \"You are not allowed to delete this member\",\n  YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION: \"You are not allowed to invite users to this organization\",\n  USER_IS_ALREADY_INVITED_TO_THIS_ORGANIZATION: \"User is already invited to this organization\",\n  INVITATION_NOT_FOUND: \"Invitation not found\",\n  YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION: \"You are not the recipient of the invitation\",\n  YOU_ARE_NOT_ALLOWED_TO_CANCEL_THIS_INVITATION: \"You are not allowed to cancel this invitation\",\n  INVITER_IS_NO_LONGER_A_MEMBER_OF_THE_ORGANIZATION: \"Inviter is no longer a member of the organization\",\n  YOU_ARE_NOT_ALLOWED_TO_INVITE_USER_WITH_THIS_ROLE: \"you are not allowed to invite user with this role\",\n  FAILED_TO_RETRIEVE_INVITATION: \"Failed to retrieve invitation\",\n  YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_TEAMS: \"You have reached the maximum number of teams\",\n  UNABLE_TO_REMOVE_LAST_TEAM: \"Unable to remove last team\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER: \"You are not allowed to update this member\",\n  ORGANIZATION_MEMBERSHIP_LIMIT_REACHED: \"Organization membership limit reached\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_TEAMS_IN_THIS_ORGANIZATION: \"You are not allowed to create teams in this organization\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_TEAMS_IN_THIS_ORGANIZATION: \"You are not allowed to delete teams in this organization\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM: \"You are not allowed to update this team\"\n};\n\nconst hasPermission = (input) => {\n  const roles = input.role.split(\",\");\n  const acRoles = input.options.roles || defaultRoles;\n  for (const role of roles) {\n    const _role = acRoles[role];\n    const result = _role?.authorize(input.permission);\n    if (result?.success) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst createInvitation = (option) => createAuthEndpoint(\n  \"/organization/invite-member\",\n  {\n    method: \"POST\",\n    use: [orgMiddleware, orgSessionMiddleware],\n    body: z.object({\n      email: z.string({\n        description: \"The email address of the user to invite\"\n      }),\n      role: z.union([\n        z.string({\n          description: \"The role to assign to the user\"\n        }),\n        z.array(\n          z.string({\n            description: \"The roles to assign to the user\"\n          })\n        )\n      ]),\n      organizationId: z.string({\n        description: \"The organization ID to invite the user to\"\n      }).optional(),\n      resend: z.boolean({\n        description: \"Resend the invitation email, if the user is already invited\"\n      }).optional(),\n      teamId: z.string({\n        description: \"The team ID to invite the user to\"\n      }).optional()\n    }),\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Invite a user to an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    id: {\n                      type: \"string\"\n                    },\n                    email: {\n                      type: \"string\"\n                    },\n                    role: {\n                      type: \"string\"\n                    },\n                    organizationId: {\n                      type: \"string\"\n                    },\n                    inviterId: {\n                      type: \"string\"\n                    },\n                    status: {\n                      type: \"string\"\n                    },\n                    expiresAt: {\n                      type: \"string\"\n                    }\n                  },\n                  required: [\n                    \"id\",\n                    \"email\",\n                    \"role\",\n                    \"organizationId\",\n                    \"inviterId\",\n                    \"status\",\n                    \"expiresAt\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.orgOptions.sendInvitationEmail) {\n      ctx.context.logger.warn(\n        \"Invitation email is not enabled. Pass `sendInvitationEmail` to the plugin options to enable it.\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Invitation email is not enabled\"\n      });\n    }\n    const session = ctx.context.session;\n    const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const canInvite = hasPermission({\n      role: member.role,\n      options: ctx.context.orgOptions,\n      permission: {\n        invitation: [\"create\"]\n      }\n    });\n    if (!canInvite) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION\n      });\n    }\n    const creatorRole = ctx.context.orgOptions.creatorRole || \"owner\";\n    const roles = parseRoles(ctx.body.role);\n    if (member.role !== creatorRole && roles.split(\",\").includes(creatorRole)) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_INVITE_USER_WITH_THIS_ROLE\n      });\n    }\n    const alreadyMember = await adapter.findMemberByEmail({\n      email: ctx.body.email,\n      organizationId\n    });\n    if (alreadyMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION\n      });\n    }\n    const alreadyInvited = await adapter.findPendingInvitation({\n      email: ctx.body.email,\n      organizationId\n    });\n    if (alreadyInvited.length && !ctx.body.resend) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_ALREADY_INVITED_TO_THIS_ORGANIZATION\n      });\n    }\n    const invitation = await adapter.createInvitation({\n      invitation: {\n        role: roles,\n        email: ctx.body.email,\n        organizationId,\n        ...\"teamId\" in ctx.body ? {\n          teamId: ctx.body.teamId\n        } : {}\n      },\n      user: session.user\n    });\n    const organization = await adapter.findOrganizationById(organizationId);\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    await ctx.context.orgOptions.sendInvitationEmail?.(\n      {\n        id: invitation.id,\n        role: invitation.role,\n        email: invitation.email.toLowerCase(),\n        organization,\n        inviter: {\n          ...member,\n          user: session.user\n        },\n        invitation\n      },\n      ctx.request\n    );\n    return ctx.json(invitation);\n  }\n);\nconst acceptInvitation = createAuthEndpoint(\n  \"/organization/accept-invitation\",\n  {\n    method: \"POST\",\n    body: z.object({\n      invitationId: z.string({\n        description: \"The ID of the invitation to accept\"\n      })\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Accept an invitation to an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    invitation: {\n                      type: \"object\"\n                    },\n                    member: {\n                      type: \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const invitation = await adapter.findInvitationById(ctx.body.invitationId);\n    if (!invitation || invitation.expiresAt < /* @__PURE__ */ new Date() || invitation.status !== \"pending\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.INVITATION_NOT_FOUND\n      });\n    }\n    if (invitation.email !== session.user.email) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION\n      });\n    }\n    const membershipLimit = ctx.context.orgOptions?.membershipLimit || 100;\n    const members = await adapter.listMembers({\n      organizationId: invitation.organizationId\n    });\n    if (members.length >= membershipLimit) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_MEMBERSHIP_LIMIT_REACHED\n      });\n    }\n    const acceptedI = await adapter.updateInvitation({\n      invitationId: ctx.body.invitationId,\n      status: \"accepted\"\n    });\n    if (!acceptedI) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.FAILED_TO_RETRIEVE_INVITATION\n      });\n    }\n    const member = await adapter.createMember({\n      organizationId: invitation.organizationId,\n      userId: session.user.id,\n      role: invitation.role,\n      createdAt: /* @__PURE__ */ new Date(),\n      ...\"teamId\" in acceptedI ? {\n        teamId: acceptedI.teamId\n      } : {}\n    });\n    await adapter.setActiveOrganization(\n      session.session.token,\n      invitation.organizationId\n    );\n    if (!acceptedI) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.INVITATION_NOT_FOUND\n        }\n      });\n    }\n    return ctx.json({\n      invitation: acceptedI,\n      member\n    });\n  }\n);\nconst rejectInvitation = createAuthEndpoint(\n  \"/organization/reject-invitation\",\n  {\n    method: \"POST\",\n    body: z.object({\n      invitationId: z.string({\n        description: \"The ID of the invitation to reject\"\n      })\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Reject an invitation to an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    invitation: {\n                      type: \"object\"\n                    },\n                    member: {\n                      type: \"null\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const invitation = await adapter.findInvitationById(ctx.body.invitationId);\n    if (!invitation || invitation.expiresAt < /* @__PURE__ */ new Date() || invitation.status !== \"pending\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Invitation not found!\"\n      });\n    }\n    if (invitation.email !== session.user.email) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION\n      });\n    }\n    const rejectedI = await adapter.updateInvitation({\n      invitationId: ctx.body.invitationId,\n      status: \"rejected\"\n    });\n    return ctx.json({\n      invitation: rejectedI,\n      member: null\n    });\n  }\n);\nconst cancelInvitation = createAuthEndpoint(\n  \"/organization/cancel-invitation\",\n  {\n    method: \"POST\",\n    body: z.object({\n      invitationId: z.string({\n        description: \"The ID of the invitation to cancel\"\n      })\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    openapi: {\n      description: \"Cancel an invitation to an organization\",\n      responses: {\n        \"200\": {\n          description: \"Success\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  invitation: {\n                    type: \"object\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const invitation = await adapter.findInvitationById(ctx.body.invitationId);\n    if (!invitation) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.INVITATION_NOT_FOUND\n      });\n    }\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: invitation.organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const canCancel = hasPermission({\n      role: member.role,\n      options: ctx.context.orgOptions,\n      permission: {\n        invitation: [\"cancel\"]\n      }\n    });\n    if (!canCancel) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CANCEL_THIS_INVITATION\n      });\n    }\n    const canceledI = await adapter.updateInvitation({\n      invitationId: ctx.body.invitationId,\n      status: \"canceled\"\n    });\n    return ctx.json(canceledI);\n  }\n);\nconst getInvitation = createAuthEndpoint(\n  \"/organization/get-invitation\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware],\n    requireHeaders: true,\n    query: z.object({\n      id: z.string({\n        description: \"The ID of the invitation to get\"\n      })\n    }),\n    metadata: {\n      openapi: {\n        description: \"Get an invitation by ID\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    id: {\n                      type: \"string\"\n                    },\n                    email: {\n                      type: \"string\"\n                    },\n                    role: {\n                      type: \"string\"\n                    },\n                    organizationId: {\n                      type: \"string\"\n                    },\n                    inviterId: {\n                      type: \"string\"\n                    },\n                    status: {\n                      type: \"string\"\n                    },\n                    expiresAt: {\n                      type: \"string\"\n                    },\n                    organizationName: {\n                      type: \"string\"\n                    },\n                    organizationSlug: {\n                      type: \"string\"\n                    },\n                    inviterEmail: {\n                      type: \"string\"\n                    }\n                  },\n                  required: [\n                    \"id\",\n                    \"email\",\n                    \"role\",\n                    \"organizationId\",\n                    \"inviterId\",\n                    \"status\",\n                    \"expiresAt\",\n                    \"organizationName\",\n                    \"organizationSlug\",\n                    \"inviterEmail\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: \"Not authenticated\"\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const invitation = await adapter.findInvitationById(ctx.query.id);\n    if (!invitation || invitation.status !== \"pending\" || invitation.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Invitation not found!\"\n      });\n    }\n    if (invitation.email !== session.user.email) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION\n      });\n    }\n    const organization = await adapter.findOrganizationById(\n      invitation.organizationId\n    );\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const member = await adapter.findMemberByOrgId({\n      userId: invitation.inviterId,\n      organizationId: invitation.organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.INVITER_IS_NO_LONGER_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    return ctx.json({\n      ...invitation,\n      organizationName: organization.name,\n      organizationSlug: organization.slug,\n      inviterEmail: member.user.email\n    });\n  }\n);\n\nconst addMember = () => createAuthEndpoint(\n  \"/organization/add-member\",\n  {\n    method: \"POST\",\n    body: z.object({\n      userId: z.string(),\n      role: z.union([z.string(), z.array(z.string())]),\n      organizationId: z.string().optional()\n    }),\n    use: [orgMiddleware],\n    metadata: {\n      SERVER_ONLY: true,\n      $Infer: {\n        body: {}\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.body.userId ? await getSessionFromCtx(ctx).catch((e) => null) : null;\n    const orgId = ctx.body.organizationId || session?.session.activeOrganizationId;\n    if (!orgId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    const teamId = \"teamId\" in ctx.body ? ctx.body.teamId : void 0;\n    if (teamId && !ctx.context.orgOptions.teams?.enabled) {\n      ctx.context.logger.error(\"Teams are not enabled\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Teams are not enabled\"\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const user = await ctx.context.internalAdapter.findUserById(\n      ctx.body.userId\n    );\n    if (!user) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.USER_NOT_FOUND\n      });\n    }\n    const alreadyMember = await adapter.findMemberByEmail({\n      email: user.email,\n      organizationId: orgId\n    });\n    if (alreadyMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION\n      });\n    }\n    if (teamId) {\n      const team = await adapter.findTeamById({\n        teamId,\n        organizationId: orgId\n      });\n      if (!team || team.organizationId !== orgId) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n        });\n      }\n    }\n    const membershipLimit = ctx.context.orgOptions?.membershipLimit || 100;\n    const members = await adapter.listMembers({ organizationId: orgId });\n    if (members.length >= membershipLimit) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_MEMBERSHIP_LIMIT_REACHED\n      });\n    }\n    const createdMember = await adapter.createMember({\n      id: generateId(),\n      organizationId: orgId,\n      userId: user.id,\n      role: parseRoles(ctx.body.role),\n      createdAt: /* @__PURE__ */ new Date(),\n      ...teamId ? { teamId } : {}\n    });\n    return ctx.json(createdMember);\n  }\n);\nconst removeMember = createAuthEndpoint(\n  \"/organization/remove-member\",\n  {\n    method: \"POST\",\n    body: z.object({\n      memberIdOrEmail: z.string({\n        description: \"The ID or email of the member to remove\"\n      }),\n      /**\n       * If not provided, the active organization will be used\n       */\n      organizationId: z.string({\n        description: \"The ID of the organization to remove the member from. If not provided, the active organization will be used\"\n      }).optional()\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Remove a member from an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    member: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\"\n                        },\n                        userId: {\n                          type: \"string\"\n                        },\n                        organizationId: {\n                          type: \"string\"\n                        },\n                        role: {\n                          type: \"string\"\n                        }\n                      },\n                      required: [\"id\", \"userId\", \"organizationId\", \"role\"]\n                    }\n                  },\n                  required: [\"member\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    let toBeRemovedMember = null;\n    if (ctx.body.memberIdOrEmail.includes(\"@\")) {\n      toBeRemovedMember = await adapter.findMemberByEmail({\n        email: ctx.body.memberIdOrEmail,\n        organizationId\n      });\n    } else {\n      toBeRemovedMember = await adapter.findMemberById(\n        ctx.body.memberIdOrEmail\n      );\n    }\n    if (!toBeRemovedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const role = ctx.context.roles[member.role];\n    if (!role) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ROLE_NOT_FOUND\n      });\n    }\n    const roles = toBeRemovedMember.role.split(\",\");\n    const creatorRole = ctx.context.orgOptions?.creatorRole || \"owner\";\n    const isOwner = roles.includes(creatorRole);\n    if (isOwner) {\n      if (member.role !== creatorRole) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER\n        });\n      }\n      const members = await adapter.listMembers({\n        organizationId\n      });\n      const owners = members.filter((member2) => {\n        const roles2 = member2.role.split(\",\");\n        return roles2.includes(creatorRole);\n      });\n      if (owners.length <= 1) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER\n        });\n      }\n    }\n    const canDeleteMember = hasPermission({\n      role: member.role,\n      options: ctx.context.orgOptions,\n      permission: {\n        member: [\"delete\"]\n      }\n    });\n    if (!canDeleteMember) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_MEMBER\n      });\n    }\n    if (toBeRemovedMember?.organizationId !== organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    await adapter.deleteMember(toBeRemovedMember.id);\n    if (session.user.id === toBeRemovedMember.userId && session.session.activeOrganizationId === toBeRemovedMember.organizationId) {\n      await adapter.setActiveOrganization(session.session.token, null);\n    }\n    return ctx.json({\n      member: toBeRemovedMember\n    });\n  }\n);\nconst updateMemberRole = (option) => createAuthEndpoint(\n  \"/organization/update-member-role\",\n  {\n    method: \"POST\",\n    body: z.object({\n      role: z.union([z.string(), z.array(z.string())]),\n      memberId: z.string(),\n      organizationId: z.string().optional()\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Update the role of a member in an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    member: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\"\n                        },\n                        userId: {\n                          type: \"string\"\n                        },\n                        organizationId: {\n                          type: \"string\"\n                        },\n                        role: {\n                          type: \"string\"\n                        }\n                      },\n                      required: [\"id\", \"userId\", \"organizationId\", \"role\"]\n                    }\n                  },\n                  required: [\"member\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const roleToSet = Array.isArray(ctx.body.role) ? ctx.body.role : ctx.body.role ? [ctx.body.role] : [];\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const toBeUpdatedMember = member.role !== ctx.body.memberId ? await adapter.findMemberById(ctx.body.memberId) : member;\n    if (!toBeUpdatedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const role = ctx.context.roles[member.role];\n    if (!role) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ROLE_NOT_FOUND\n      });\n    }\n    const creatorRole = ctx.context.orgOptions?.creatorRole || \"owner\";\n    if (toBeUpdatedMember.role === creatorRole && member.role !== creatorRole || roleToSet.includes(creatorRole) && member.role !== creatorRole) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER\n      });\n    }\n    const canUpdateMember = role.authorize({\n      member: [\"update\"]\n    }).success || ctx.body.role === \"owner\" && member.role === \"owner\";\n    if (!canUpdateMember) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER\n      });\n    }\n    if (!ctx.body.role) {\n      throw new APIError(\"BAD_REQUEST\");\n    }\n    const updatedMember = await adapter.updateMember(\n      ctx.body.memberId,\n      parseRoles(ctx.body.role)\n    );\n    if (!updatedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    return ctx.json(updatedMember);\n  }\n);\nconst getActiveMember = createAuthEndpoint(\n  \"/organization/get-active-member\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Get the active member in the organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    id: {\n                      type: \"string\"\n                    },\n                    userId: {\n                      type: \"string\"\n                    },\n                    organizationId: {\n                      type: \"string\"\n                    },\n                    role: {\n                      type: \"string\"\n                    }\n                  },\n                  required: [\"id\", \"userId\", \"organizationId\", \"role\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = session.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n        }\n      });\n    }\n    return ctx.json(member);\n  }\n);\nconst leaveOrganization = createAuthEndpoint(\n  \"/organization/leave\",\n  {\n    method: \"POST\",\n    body: z.object({\n      organizationId: z.string()\n    }),\n    use: [sessionMiddleware, orgMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: ctx.body.organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const isOwnerLeaving = member.role === (ctx.context.orgOptions?.creatorRole || \"owner\");\n    if (isOwnerLeaving) {\n      const members = await ctx.context.adapter.findMany({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: ctx.body.organizationId\n          }\n        ]\n      });\n      const owners = members.filter(\n        (member2) => member2.role === (ctx.context.orgOptions?.creatorRole || \"owner\")\n      );\n      if (owners.length <= 1) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER\n        });\n      }\n    }\n    await adapter.deleteMember(member.id);\n    if (session.session.activeOrganizationId === ctx.body.organizationId) {\n      await adapter.setActiveOrganization(session.session.token, null);\n    }\n    return ctx.json(member);\n  }\n);\n\nconst createOrganization = createAuthEndpoint(\n  \"/organization/create\",\n  {\n    method: \"POST\",\n    body: z.object({\n      name: z.string({\n        description: \"The name of the organization\"\n      }),\n      slug: z.string({\n        description: \"The slug of the organization\"\n      }),\n      userId: z.string({\n        description: \"The user id of the organization creator. If not provided, the current user will be used. Should only be used by admins or when called by the server.\"\n      }).optional(),\n      logo: z.string({\n        description: \"The logo of the organization\"\n      }).optional(),\n      metadata: z.record(z.string(), z.any(), {\n        description: \"The metadata of the organization\"\n      }).optional(),\n      keepCurrentActiveOrganization: z.boolean({\n        description: \"Whether to keep the current active organization active after creating a new one\"\n      }).optional()\n    }),\n    use: [orgMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Create an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  description: \"The organization that was created\",\n                  $ref: \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    let user = session?.user || null;\n    if (!user) {\n      if (!ctx.body.userId) {\n        throw new APIError(\"UNAUTHORIZED\");\n      }\n      user = await ctx.context.internalAdapter.findUserById(ctx.body.userId);\n    }\n    if (!user) {\n      return ctx.json(null, {\n        status: 401\n      });\n    }\n    const options = ctx.context.orgOptions;\n    const canCreateOrg = typeof options?.allowUserToCreateOrganization === \"function\" ? await options.allowUserToCreateOrganization(user) : options?.allowUserToCreateOrganization === void 0 ? true : options.allowUserToCreateOrganization;\n    if (!canCreateOrg) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_ORGANIZATION\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const userOrganizations = await adapter.listOrganizations(user.id);\n    const hasReachedOrgLimit = typeof options.organizationLimit === \"number\" ? userOrganizations.length >= options.organizationLimit : typeof options.organizationLimit === \"function\" ? await options.organizationLimit(user) : false;\n    if (hasReachedOrgLimit) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_ORGANIZATIONS\n      });\n    }\n    const existingOrganization = await adapter.findOrganizationBySlug(\n      ctx.body.slug\n    );\n    if (existingOrganization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_ALREADY_EXISTS\n      });\n    }\n    let hookResponse = void 0;\n    if (options.organizationCreation?.beforeCreate) {\n      const response = await options.organizationCreation.beforeCreate(\n        {\n          organization: {\n            slug: ctx.body.slug,\n            name: ctx.body.name,\n            logo: ctx.body.logo,\n            createdAt: /* @__PURE__ */ new Date(),\n            metadata: ctx.body.metadata\n          },\n          user\n        },\n        ctx.request\n      );\n      if (response && typeof response === \"object\" && \"data\" in response) {\n        hookResponse = response;\n      }\n    }\n    const organization = await adapter.createOrganization({\n      organization: {\n        id: generateId(),\n        slug: ctx.body.slug,\n        name: ctx.body.name,\n        logo: ctx.body.logo,\n        createdAt: /* @__PURE__ */ new Date(),\n        metadata: ctx.body.metadata,\n        ...hookResponse?.data || {}\n      }\n    });\n    let member;\n    if (options?.teams?.enabled && options.teams.defaultTeam?.enabled !== false) {\n      const defaultTeam = await options.teams.defaultTeam?.customCreateDefaultTeam?.(\n        organization,\n        ctx.request\n      ) || await adapter.createTeam({\n        id: generateId(),\n        organizationId: organization.id,\n        name: `${organization.name}`,\n        createdAt: /* @__PURE__ */ new Date()\n      });\n      member = await adapter.createMember({\n        teamId: defaultTeam.id,\n        userId: user.id,\n        organizationId: organization.id,\n        role: ctx.context.orgOptions.creatorRole || \"owner\"\n      });\n    } else {\n      member = await adapter.createMember({\n        userId: user.id,\n        organizationId: organization.id,\n        role: ctx.context.orgOptions.creatorRole || \"owner\"\n      });\n    }\n    if (options.organizationCreation?.afterCreate) {\n      await options.organizationCreation.afterCreate(\n        {\n          organization,\n          user,\n          member\n        },\n        ctx.request\n      );\n    }\n    if (ctx.context.session && !ctx.body.keepCurrentActiveOrganization) {\n      await adapter.setActiveOrganization(\n        ctx.context.session.session.token,\n        organization.id\n      );\n    }\n    return ctx.json({\n      ...organization,\n      metadata: ctx.body.metadata,\n      members: [member]\n    });\n  }\n);\nconst checkOrganizationSlug = createAuthEndpoint(\n  \"/organization/check-slug\",\n  {\n    method: \"POST\",\n    body: z.object({\n      slug: z.string()\n    }),\n    use: [requestOnlySessionMiddleware, orgMiddleware]\n  },\n  async (ctx) => {\n    const orgAdapter = getOrgAdapter(ctx.context);\n    const org = await orgAdapter.findOrganizationBySlug(ctx.body.slug);\n    if (!org) {\n      return ctx.json({\n        status: true\n      });\n    }\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"slug is taken\"\n    });\n  }\n);\nconst updateOrganization = createAuthEndpoint(\n  \"/organization/update\",\n  {\n    method: \"POST\",\n    body: z.object({\n      data: z.object({\n        name: z.string({\n          description: \"The name of the organization\"\n        }).optional(),\n        slug: z.string({\n          description: \"The slug of the organization\"\n        }).optional(),\n        logo: z.string({\n          description: \"The logo of the organization\"\n        }).optional(),\n        metadata: z.record(z.string(), z.any(), {\n          description: \"The metadata of the organization\"\n        }).optional()\n      }).partial(),\n      organizationId: z.string().optional()\n    }),\n    requireHeaders: true,\n    use: [orgMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Update an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  description: \"The updated organization\",\n                  $ref: \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = await ctx.context.getSession(ctx);\n    if (!session) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: \"User not found\"\n      });\n    }\n    const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    const canUpdateOrg = hasPermission({\n      permission: {\n        organization: [\"update\"]\n      },\n      role: member.role,\n      options: ctx.context.orgOptions\n    });\n    if (!canUpdateOrg) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_ORGANIZATION\n      });\n    }\n    const updatedOrg = await adapter.updateOrganization(\n      organizationId,\n      ctx.body.data\n    );\n    return ctx.json(updatedOrg);\n  }\n);\nconst deleteOrganization = createAuthEndpoint(\n  \"/organization/delete\",\n  {\n    method: \"POST\",\n    body: z.object({\n      organizationId: z.string({\n        description: \"The organization id to delete\"\n      })\n    }),\n    requireHeaders: true,\n    use: [orgMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Delete an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"string\",\n                  description: \"The organization id that was deleted\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = await ctx.context.getSession(ctx);\n    if (!session) {\n      return ctx.json(null, {\n        status: 401\n      });\n    }\n    const organizationId = ctx.body.organizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        }\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n        }\n      });\n    }\n    const canDeleteOrg = hasPermission({\n      role: member.role,\n      permission: {\n        organization: [\"delete\"]\n      },\n      options: ctx.context.orgOptions\n    });\n    if (!canDeleteOrg) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_ORGANIZATION\n      });\n    }\n    if (organizationId === session.session.activeOrganizationId) {\n      await adapter.setActiveOrganization(session.session.token, null);\n    }\n    const option = ctx.context.orgOptions.organizationDeletion;\n    if (option?.disabled) {\n      throw new APIError(\"FORBIDDEN\");\n    }\n    const org = await adapter.findOrganizationById(organizationId);\n    if (!org) {\n      throw new APIError(\"BAD_REQUEST\");\n    }\n    if (option?.beforeDelete) {\n      await option.beforeDelete({\n        organization: org,\n        user: session.user\n      });\n    }\n    await adapter.deleteOrganization(organizationId);\n    if (option?.afterDelete) {\n      await option.afterDelete({\n        organization: org,\n        user: session.user\n      });\n    }\n    return ctx.json(org);\n  }\n);\nconst getFullOrganization = () => createAuthEndpoint(\n  \"/organization/get-full-organization\",\n  {\n    method: \"GET\",\n    query: z.optional(\n      z.object({\n        organizationId: z.string({\n          description: \"The organization id to get\"\n        }).optional(),\n        organizationSlug: z.string({\n          description: \"The organization slug to get\"\n        }).optional()\n      })\n    ),\n    requireHeaders: true,\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Get the full organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  description: \"The organization\",\n                  $ref: \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.query?.organizationSlug || ctx.query?.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 200\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const organization = await adapter.findFullOrganization({\n      organizationId,\n      isSlug: !!ctx.query?.organizationSlug,\n      includeTeams: ctx.context.orgOptions.teams?.enabled\n    });\n    const isMember = organization?.members.find(\n      (member) => member.userId === session.user.id\n    );\n    if (!isMember) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    return ctx.json(organization);\n  }\n);\nconst setActiveOrganization = () => {\n  return createAuthEndpoint(\n    \"/organization/set-active\",\n    {\n      method: \"POST\",\n      body: z.object({\n        organizationId: z.string({\n          description: \"The organization id to set as active. It can be null to unset the active organization\"\n        }).nullable().optional(),\n        organizationSlug: z.string({\n          description: \"The organization slug to set as active. It can be null to unset the active organization if organizationId is not provided\"\n        }).optional()\n      }),\n      use: [orgSessionMiddleware, orgMiddleware],\n      metadata: {\n        openapi: {\n          description: \"Set the active organization\",\n          responses: {\n            \"200\": {\n              description: \"Success\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    description: \"The organization\",\n                    $ref: \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n      const session = ctx.context.session;\n      let organizationId = ctx.body.organizationSlug || ctx.body.organizationId;\n      if (organizationId === null) {\n        const sessionOrgId = session.session.activeOrganizationId;\n        if (!sessionOrgId) {\n          return ctx.json(null);\n        }\n        const updatedSession2 = await adapter.setActiveOrganization(\n          session.session.token,\n          null\n        );\n        await setSessionCookie(ctx, {\n          session: updatedSession2,\n          user: session.user\n        });\n        return ctx.json(null);\n      }\n      if (!organizationId) {\n        const sessionOrgId = session.session.activeOrganizationId;\n        if (!sessionOrgId) {\n          return ctx.json(null);\n        }\n        organizationId = sessionOrgId;\n      }\n      const organization = await adapter.findFullOrganization({\n        organizationId,\n        isSlug: !!ctx.body.organizationSlug\n      });\n      const isMember = organization?.members.find(\n        (member) => member.userId === session.user.id\n      );\n      if (!isMember) {\n        await adapter.setActiveOrganization(session.session.token, null);\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n        });\n      }\n      if (!organization) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      const updatedSession = await adapter.setActiveOrganization(\n        session.session.token,\n        organization.id\n      );\n      await setSessionCookie(ctx, {\n        session: updatedSession,\n        user: session.user\n      });\n      return ctx.json(organization);\n    }\n  );\n};\nconst listOrganizations = createAuthEndpoint(\n  \"/organization/list\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"List all organizations\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    $ref: \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const organizations = await adapter.listOrganizations(\n      ctx.context.session.user.id\n    );\n    return ctx.json(organizations);\n  }\n);\n\nconst role = z.string();\nconst invitationStatus = z.enum([\"pending\", \"accepted\", \"rejected\", \"canceled\"]).default(\"pending\");\nz.object({\n  id: z.string().default(generateId),\n  name: z.string(),\n  slug: z.string(),\n  logo: z.string().nullish(),\n  metadata: z.record(z.string()).or(z.string().transform((v) => JSON.parse(v))).nullish(),\n  createdAt: z.date()\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  userId: z.string(),\n  role,\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  teamId: z.string().optional()\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  email: z.string(),\n  role,\n  status: invitationStatus,\n  teamId: z.string().optional(),\n  inviterId: z.string(),\n  expiresAt: z.date()\n});\nconst teamSchema = z.object({\n  id: z.string().default(generateId),\n  name: z.string().min(1),\n  organizationId: z.string(),\n  createdAt: z.date(),\n  updatedAt: z.date().optional()\n});\n\nconst createTeam = (options) => createAuthEndpoint(\n  \"/organization/create-team\",\n  {\n    method: \"POST\",\n    body: z.object({\n      organizationId: z.string().optional(),\n      name: z.string()\n    }),\n    use: [orgMiddleware]\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    const organizationId = ctx.body.organizationId || session?.session.activeOrganizationId;\n    if (!session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    if (!organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    if (session) {\n      const member = await adapter.findMemberByOrgId({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!member) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION\n        });\n      }\n      const canCreate = hasPermission({\n        role: member.role,\n        options: ctx.context.orgOptions,\n        permission: {\n          team: [\"create\"]\n        }\n      });\n      if (!canCreate) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_TEAMS_IN_THIS_ORGANIZATION\n        });\n      }\n    }\n    const existingTeams = await adapter.listTeams(organizationId);\n    const maximum = typeof ctx.context.orgOptions.teams?.maximumTeams === \"function\" ? await ctx.context.orgOptions.teams?.maximumTeams(\n      {\n        organizationId,\n        session\n      },\n      ctx.request\n    ) : ctx.context.orgOptions.teams?.maximumTeams;\n    const maxTeamsReached = maximum ? existingTeams.length >= maximum : false;\n    if (maxTeamsReached) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_TEAMS\n      });\n    }\n    const createdTeam = await adapter.createTeam({\n      id: generateId(),\n      name: ctx.body.name,\n      organizationId,\n      createdAt: /* @__PURE__ */ new Date(),\n      updatedAt: /* @__PURE__ */ new Date()\n    });\n    return ctx.json(createdTeam);\n  }\n);\nconst removeTeam = createAuthEndpoint(\n  \"/organization/remove-team\",\n  {\n    method: \"POST\",\n    body: z.object({\n      teamId: z.string(),\n      organizationId: z.string().optional()\n    }),\n    use: [orgMiddleware]\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    const organizationId = ctx.body.organizationId || session?.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    if (!session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    if (session) {\n      const member = await adapter.findMemberByOrgId({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!member || member.teamId === ctx.body.teamId) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION\n        });\n      }\n      const canRemove = hasPermission({\n        role: member.role,\n        options: ctx.context.orgOptions,\n        permission: {\n          team: [\"delete\"]\n        }\n      });\n      if (!canRemove) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_TEAMS_IN_THIS_ORGANIZATION\n        });\n      }\n    }\n    const team = await adapter.findTeamById({\n      teamId: ctx.body.teamId,\n      organizationId\n    });\n    if (!team || team.organizationId !== organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n      });\n    }\n    if (!ctx.context.orgOptions.teams?.allowRemovingAllTeams) {\n      const teams = await adapter.listTeams(organizationId);\n      if (teams.length <= 1) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.UNABLE_TO_REMOVE_LAST_TEAM\n        });\n      }\n    }\n    await adapter.deleteTeam(team.id);\n    return ctx.json({ message: \"Team removed successfully.\" });\n  }\n);\nconst updateTeam = createAuthEndpoint(\n  \"/organization/update-team\",\n  {\n    method: \"POST\",\n    body: z.object({\n      teamId: z.string(),\n      data: teamSchema.partial()\n    }),\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.body.data.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM\n      });\n    }\n    const canUpdate = hasPermission({\n      role: member.role,\n      options: ctx.context.orgOptions,\n      permission: {\n        team: [\"update\"]\n      }\n    });\n    if (!canUpdate) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM\n      });\n    }\n    const team = await adapter.findTeamById({\n      teamId: ctx.body.teamId,\n      organizationId\n    });\n    if (!team || team.organizationId !== organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n      });\n    }\n    const updatedTeam = await adapter.updateTeam(team.id, {\n      name: ctx.body.data.name\n    });\n    return ctx.json(updatedTeam);\n  }\n);\nconst listOrganizationTeams = createAuthEndpoint(\n  \"/organization/list-teams\",\n  {\n    method: \"GET\",\n    query: z.optional(\n      z.object({\n        organizationId: z.string().optional()\n      })\n    ),\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = session.session.activeOrganizationId || ctx.query?.organizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const member = await adapter.findMemberByOrgId({\n      userId: session?.user.id,\n      organizationId: organizationId || \"\"\n    });\n    if (!member) {\n      throw new APIError(\"FORBIDDEN\");\n    }\n    const teams = await adapter.listTeams(organizationId);\n    return ctx.json(teams);\n  }\n);\n\nfunction parseRoles(roles) {\n  return Array.isArray(roles) ? roles.join(\",\") : roles;\n}\nconst organization = (options) => {\n  let endpoints = {\n    createOrganization,\n    updateOrganization,\n    deleteOrganization,\n    setActiveOrganization: setActiveOrganization(),\n    getFullOrganization: getFullOrganization(),\n    listOrganizations,\n    createInvitation: createInvitation(),\n    cancelInvitation,\n    acceptInvitation,\n    getInvitation,\n    rejectInvitation,\n    checkOrganizationSlug,\n    addMember: addMember(),\n    removeMember,\n    updateMemberRole: updateMemberRole(),\n    getActiveMember,\n    leaveOrganization\n  };\n  const teamSupport = options?.teams?.enabled;\n  const teamEndpoints = {\n    createTeam: createTeam(),\n    listOrganizationTeams,\n    removeTeam,\n    updateTeam\n  };\n  if (teamSupport) {\n    endpoints = {\n      ...endpoints,\n      ...teamEndpoints\n    };\n  }\n  const roles = {\n    ...defaultRoles,\n    ...options?.roles\n  };\n  const teamSchema = teamSupport ? {\n    team: {\n      modelName: options?.schema?.team?.modelName,\n      fields: {\n        name: {\n          type: \"string\",\n          required: true,\n          fieldName: options?.schema?.team?.fields?.name\n        },\n        organizationId: {\n          type: \"string\",\n          required: true,\n          references: {\n            model: \"organization\",\n            field: \"id\"\n          },\n          fieldName: options?.schema?.team?.fields?.organizationId\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options?.schema?.team?.fields?.createdAt\n        },\n        updatedAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options?.schema?.team?.fields?.updatedAt\n        }\n      }\n    }\n  } : void 0;\n  const api = shimContext(endpoints, {\n    orgOptions: options || {},\n    roles,\n    getSession: async (context) => {\n      return await getSessionFromCtx(context);\n    }\n  });\n  return {\n    id: \"organization\",\n    endpoints: {\n      ...api,\n      hasPermission: createAuthEndpoint(\n        \"/organization/has-permission\",\n        {\n          method: \"POST\",\n          requireHeaders: true,\n          body: z.object({\n            organizationId: z.string().optional(),\n            permission: z.record(z.string(), z.array(z.string()))\n          }),\n          use: [orgSessionMiddleware],\n          metadata: {\n            $Infer: {\n              body: {}\n            },\n            openapi: {\n              description: \"Check if the user has permission\",\n              requestBody: {\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      type: \"object\",\n                      properties: {\n                        permission: {\n                          type: \"object\",\n                          description: \"The permission to check\"\n                        }\n                      },\n                      required: [\"permission\"]\n                    }\n                  }\n                }\n              },\n              responses: {\n                \"200\": {\n                  description: \"Success\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          error: {\n                            type: \"string\"\n                          },\n                          success: {\n                            type: \"boolean\"\n                          }\n                        },\n                        required: [\"success\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const activeOrganizationId = ctx.body.organizationId || ctx.context.session.session.activeOrganizationId;\n          if (!activeOrganizationId) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n            });\n          }\n          const adapter = getOrgAdapter(ctx.context);\n          const member = await adapter.findMemberByOrgId({\n            userId: ctx.context.session.user.id,\n            organizationId: activeOrganizationId\n          });\n          if (!member) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n            });\n          }\n          const result = hasPermission({\n            role: member.role,\n            options,\n            permission: ctx.body.permission\n          });\n          return ctx.json({\n            error: null,\n            success: result\n          });\n        }\n      )\n    },\n    schema: {\n      session: {\n        fields: {\n          activeOrganizationId: {\n            type: \"string\",\n            required: false,\n            fieldName: options?.schema?.session?.fields?.activeOrganizationId\n          }\n        }\n      },\n      organization: {\n        modelName: options?.schema?.organization?.modelName,\n        fields: {\n          name: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            fieldName: options?.schema?.organization?.fields?.name\n          },\n          slug: {\n            type: \"string\",\n            unique: true,\n            sortable: true,\n            fieldName: options?.schema?.organization?.fields?.slug\n          },\n          logo: {\n            type: \"string\",\n            required: false,\n            fieldName: options?.schema?.organization?.fields?.logo\n          },\n          createdAt: {\n            type: \"date\",\n            required: true,\n            fieldName: options?.schema?.organization?.fields?.createdAt\n          },\n          metadata: {\n            type: \"string\",\n            required: false,\n            fieldName: options?.schema?.organization?.fields?.metadata\n          }\n        }\n      },\n      member: {\n        modelName: options?.schema?.member?.modelName,\n        fields: {\n          organizationId: {\n            type: \"string\",\n            required: true,\n            references: {\n              model: \"organization\",\n              field: \"id\"\n            },\n            fieldName: options?.schema?.member?.fields?.organizationId\n          },\n          userId: {\n            type: \"string\",\n            required: true,\n            fieldName: options?.schema?.member?.fields?.userId,\n            references: {\n              model: \"user\",\n              field: \"id\"\n            }\n          },\n          role: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            defaultValue: \"member\",\n            fieldName: options?.schema?.member?.fields?.role\n          },\n          ...teamSupport ? {\n            teamId: {\n              type: \"string\",\n              required: false,\n              sortable: true,\n              fieldName: options?.schema?.member?.fields?.teamId\n            }\n          } : {},\n          createdAt: {\n            type: \"date\",\n            required: true,\n            fieldName: options?.schema?.member?.fields?.createdAt\n          }\n        }\n      },\n      invitation: {\n        modelName: options?.schema?.invitation?.modelName,\n        fields: {\n          organizationId: {\n            type: \"string\",\n            required: true,\n            references: {\n              model: \"organization\",\n              field: \"id\"\n            },\n            fieldName: options?.schema?.invitation?.fields?.organizationId\n          },\n          email: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            fieldName: options?.schema?.invitation?.fields?.email\n          },\n          role: {\n            type: \"string\",\n            required: false,\n            sortable: true,\n            fieldName: options?.schema?.invitation?.fields?.role\n          },\n          ...teamSupport ? {\n            teamId: {\n              type: \"string\",\n              required: false,\n              sortable: true,\n              fieldName: options?.schema?.invitation?.fields?.teamId\n            }\n          } : {},\n          status: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            defaultValue: \"pending\",\n            fieldName: options?.schema?.invitation?.fields?.status\n          },\n          expiresAt: {\n            type: \"date\",\n            required: true,\n            fieldName: options?.schema?.invitation?.fields?.expiresAt\n          },\n          inviterId: {\n            type: \"string\",\n            references: {\n              model: \"user\",\n              field: \"id\"\n            },\n            fieldName: options?.schema?.invitation?.fields?.inviterId,\n            required: true\n          }\n        }\n      },\n      ...teamSupport ? teamSchema : {}\n    },\n    $Infer: {\n      Organization: {},\n      Invitation: {},\n      Member: {},\n      Team: teamSupport ? {} : {},\n      ActiveOrganization: {}\n    },\n    $ERROR_CODES: ORGANIZATION_ERROR_CODES\n  };\n};\n\nexport { organization as o, parseRoles as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8475, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.-VszM4Ix.mjs"],"sourcesContent":["import { APIError } from 'better-call';\nimport { c as createAuthMiddleware, g as getSessionFromCtx } from './better-auth.C92a320y.mjs';\nimport { setSessionCookie } from '../cookies/index.mjs';\nimport { z } from 'zod';\nimport './better-auth.C24Bzw4w.mjs';\nimport './better-auth.8zoxzg-F.mjs';\nimport './better-auth.DH3YjMQH.mjs';\nimport 'defu';\nimport { createHMAC } from '@better-auth/utils/hmac';\n\nconst TWO_FACTOR_COOKIE_NAME = \"two_factor\";\nconst TRUST_DEVICE_COOKIE_NAME = \"trust_device\";\n\nconst verifyTwoFactorMiddleware = createAuthMiddleware(\n  {\n    body: z.object({\n      /**\n       * if true, the device will be trusted\n       * for 30 days. It'll be refreshed on\n       * every sign in request within this time.\n       */\n      trustDevice: z.boolean().optional()\n    })\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      const cookieName = ctx.context.createAuthCookie(TWO_FACTOR_COOKIE_NAME);\n      const userId = await ctx.getSignedCookie(\n        cookieName.name,\n        ctx.context.secret\n      );\n      if (!userId) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: \"invalid two factor cookie\"\n        });\n      }\n      const user = await ctx.context.internalAdapter.findUserById(\n        userId\n      );\n      if (!user) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: \"invalid two factor cookie\"\n        });\n      }\n      const dontRememberMe = await ctx.getSignedCookie(\n        ctx.context.authCookies.dontRememberToken.name,\n        ctx.context.secret\n      );\n      const session2 = await ctx.context.internalAdapter.createSession(\n        userId,\n        ctx.request,\n        !!dontRememberMe\n      );\n      if (!session2) {\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: \"failed to create session\"\n        });\n      }\n      return {\n        valid: async (ctx2) => {\n          await setSessionCookie(ctx2, {\n            session: session2,\n            user\n          });\n          if (ctx2.body.trustDevice) {\n            const trustDeviceCookie = ctx2.context.createAuthCookie(\n              TRUST_DEVICE_COOKIE_NAME,\n              {\n                maxAge: 30 * 24 * 60 * 60\n                // 30 days, it'll be refreshed on sign in requests\n              }\n            );\n            const token = await createHMAC(\"SHA-256\", \"base64urlnopad\").sign(\n              ctx2.context.secret,\n              `${user.id}!${session2.token}`\n            );\n            await ctx2.setSignedCookie(\n              trustDeviceCookie.name,\n              `${token}!${session2.token}`,\n              ctx2.context.secret,\n              trustDeviceCookie.attributes\n            );\n            ctx2.setCookie(ctx2.context.authCookies.dontRememberToken.name, \"\", {\n              maxAge: 0\n            });\n            ctx2.setCookie(cookieName.name, \"\", {\n              maxAge: 0\n            });\n          }\n          return ctx2.json({\n            token: session2.token,\n            user: {\n              id: user.id,\n              email: user.email,\n              emailVerified: user.emailVerified,\n              name: user.name,\n              image: user.image,\n              createdAt: user.createdAt,\n              updatedAt: user.updatedAt\n            }\n          });\n        },\n        invalid: async () => {\n          throw new APIError(\"UNAUTHORIZED\", {\n            message: \"invalid two factor authentication\"\n          });\n        },\n        session: {\n          session: session2,\n          user\n        }\n      };\n    }\n    return {\n      valid: async (ctx2) => {\n        return ctx2.json({\n          token: session.session.token,\n          user: {\n            id: session.user.id,\n            email: session.user.email,\n            emailVerified: session.user.emailVerified,\n            name: session.user.name,\n            image: session.user.image,\n            createdAt: session.user.createdAt,\n            updatedAt: session.user.updatedAt\n          }\n        });\n      },\n      invalid: async () => {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: \"invalid two factor authentication\"\n        });\n      },\n      session\n    };\n  }\n);\n\nexport { TRUST_DEVICE_COOKIE_NAME as T, TWO_FACTOR_COOKIE_NAME as a, verifyTwoFactorMiddleware as v };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8604, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.BcoSd9tC.mjs"],"sourcesContent":["const TWO_FACTOR_ERROR_CODES = {\n  OTP_NOT_ENABLED: \"OTP not enabled\",\n  OTP_HAS_EXPIRED: \"OTP has expired\",\n  TOTP_NOT_ENABLED: \"TOTP not enabled\",\n  TWO_FACTOR_NOT_ENABLED: \"Two factor isn't enabled\",\n  BACKUP_CODES_NOT_ENABLED: \"Backup codes aren't enabled\",\n  INVALID_BACKUP_CODE: \"Invalid backup code\"\n};\n\nexport { TWO_FACTOR_ERROR_CODES as T };\n"],"names":[],"mappings":";;;AAAA,MAAM,yBAAyB;IAC7B,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,wBAAwB;IACxB,0BAA0B;IAC1B,qBAAqB;AACvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8622, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.Ddw8bVyV.mjs"],"sourcesContent":["const twoFactorClient = (options) => {\n  return {\n    id: \"two-factor\",\n    $InferServerPlugin: {},\n    atomListeners: [\n      {\n        matcher: (path) => path.startsWith(\"/two-factor/\"),\n        signal: \"$sessionSignal\"\n      }\n    ],\n    pathMethods: {\n      \"/two-factor/disable\": \"POST\",\n      \"/two-factor/enable\": \"POST\",\n      \"/two-factor/send-otp\": \"POST\",\n      \"/two-factor/generate-backup-codes\": \"POST\"\n    },\n    fetchPlugins: [\n      {\n        id: \"two-factor\",\n        name: \"two-factor\",\n        hooks: {\n          async onSuccess(context) {\n            if (context.data?.twoFactorRedirect) {\n              if (options?.onTwoFactorRedirect) {\n                await options.onTwoFactorRedirect();\n              }\n            }\n          }\n        }\n      }\n    ]\n  };\n};\n\nexport { twoFactorClient as t };\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,CAAC;IACvB,OAAO;QACL,IAAI;QACJ,oBAAoB,CAAC;QACrB,eAAe;YACb;gBACE,SAAS,CAAC,OAAS,KAAK,UAAU,CAAC;gBACnC,QAAQ;YACV;SACD;QACD,aAAa;YACX,uBAAuB;YACvB,sBAAsB;YACtB,wBAAwB;YACxB,qCAAqC;QACvC;QACA,cAAc;YACZ;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;oBACL,MAAM,WAAU,OAAO;wBACrB,IAAI,QAAQ,IAAI,EAAE,mBAAmB;4BACnC,IAAI,SAAS,qBAAqB;gCAChC,MAAM,QAAQ,mBAAmB;4BACnC;wBACF;oBACF;gBACF;YACF;SACD;IACH;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8665, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.DQI8AD7d.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nconst getEndpointResponse = async (ctx) => {\n  const returned = ctx.context.returned;\n  if (!returned) {\n    return null;\n  }\n  if (returned instanceof Response) {\n    if (returned.status !== 200) {\n      return null;\n    }\n    return await returned.clone().json();\n  }\n  if (returned instanceof APIError) {\n    return null;\n  }\n  return returned;\n};\n\nexport { getEndpointResponse as g };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,sBAAsB,OAAO;IACjC,MAAM,WAAW,IAAI,OAAO,CAAC,QAAQ;IACrC,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IACA,IAAI,oBAAoB,UAAU;QAChC,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,OAAO;QACT;QACA,OAAO,MAAM,SAAS,KAAK,GAAG,IAAI;IACpC;IACA,IAAI,oBAAoB,iJAAA,CAAA,WAAQ,EAAE;QAChC,OAAO;IACT;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8693, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.NGxXmel9.mjs"],"sourcesContent":["import { z } from 'zod';\nimport { APIError } from 'better-call';\nimport { c as createAuthMiddleware, g as getSessionFromCtx, a as createAuthEndpoint } from './better-auth.C92a320y.mjs';\nimport { setSessionCookie, deleteSessionCookie } from '../cookies/index.mjs';\nimport { m as mergeSchema } from './better-auth.C24Bzw4w.mjs';\nimport './better-auth.8zoxzg-F.mjs';\nimport './better-auth.DH3YjMQH.mjs';\nimport 'defu';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { g as getEndpointResponse } from './better-auth.DQI8AD7d.mjs';\nimport { defaultRoles } from '../plugins/admin/access/index.mjs';\n\nconst ADMIN_ERROR_CODES = {\n  FAILED_TO_CREATE_USER: \"Failed to create user\",\n  USER_ALREADY_EXISTS: \"User already exists\",\n  YOU_CANNOT_BAN_YOURSELF: \"You cannot ban yourself\",\n  YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE: \"You are not allowed to change users role\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS: \"You are not allowed to create users\",\n  YOU_ARE_NOT_ALLOWED_TO_LIST_USERS: \"You are not allowed to list users\",\n  YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS: \"You are not allowed to list users sessions\",\n  YOU_ARE_NOT_ALLOWED_TO_BAN_USERS: \"You are not allowed to ban users\",\n  YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS: \"You are not allowed to impersonate users\",\n  YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS: \"You are not allowed to revoke users sessions\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS: \"You are not allowed to delete users\",\n  YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD: \"You are not allowed to set users password\",\n  BANNED_USER: \"You have been banned from this application\"\n};\n\nconst hasPermission = (input) => {\n  if (input.options?.adminUserIds?.includes(input.userId)) {\n    return true;\n  }\n  const roles = (input.role || input.options?.defaultRole || \"user\").split(\",\");\n  const acRoles = input.options?.roles || defaultRoles;\n  for (const role of roles) {\n    const _role = acRoles[role];\n    const result = _role?.authorize(input.permission);\n    if (result?.success) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst admin = (options) => {\n  const opts = {\n    defaultRole: \"user\",\n    adminRoles: [\"admin\"],\n    bannedUserMessage: \"You have been banned from this application. Please contact support if you believe this is an error.\",\n    ...options\n  };\n  const adminMiddleware = createAuthMiddleware(async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return {\n      session\n    };\n  });\n  return {\n    id: \"admin\",\n    init(ctx) {\n      return {\n        options: {\n          databaseHooks: {\n            user: {\n              create: {\n                async before(user) {\n                  return {\n                    data: {\n                      role: options?.defaultRole ?? \"user\",\n                      ...user\n                    }\n                  };\n                }\n              }\n            },\n            session: {\n              create: {\n                async before(session) {\n                  const user = await ctx.internalAdapter.findUserById(\n                    session.userId\n                  );\n                  if (user.banned) {\n                    if (user.banExpires && user.banExpires.getTime() < Date.now()) {\n                      await ctx.internalAdapter.updateUser(session.userId, {\n                        banned: false,\n                        banReason: null,\n                        banExpires: null\n                      });\n                      return;\n                    }\n                    throw new APIError(\"FORBIDDEN\", {\n                      message: opts.bannedUserMessage,\n                      code: \"BANNED_USER\"\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      };\n    },\n    hooks: {\n      after: [\n        {\n          matcher(context) {\n            return context.path === \"/list-sessions\";\n          },\n          handler: createAuthMiddleware(async (ctx) => {\n            const response = await getEndpointResponse(ctx);\n            if (!response) {\n              return;\n            }\n            const newJson = response.filter((session) => {\n              return !session.impersonatedBy;\n            });\n            return ctx.json(newJson);\n          })\n        }\n      ]\n    },\n    endpoints: {\n      setRole: createAuthEndpoint(\n        \"/admin/set-role\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.string({\n              description: \"The user id\"\n            }),\n            role: z.string({\n              description: \"The role to set. `admin` or `user` by default\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"setRole\",\n              summary: \"Set the role of a user\",\n              description: \"Set the role of a user\",\n              responses: {\n                200: {\n                  description: \"User role updated\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canSetRole = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permission: {\n              user: [\"set-role\"]\n            }\n          });\n          if (!canSetRole) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE\n            });\n          }\n          const updatedUser = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              role: ctx.body.role\n            },\n            ctx\n          );\n          return ctx.json({\n            user: updatedUser\n          });\n        }\n      ),\n      createUser: createAuthEndpoint(\n        \"/admin/create-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            email: z.string({\n              description: \"The email of the user\"\n            }),\n            password: z.string({\n              description: \"The password of the user\"\n            }),\n            name: z.string({\n              description: \"The name of the user\"\n            }),\n            role: z.string({\n              description: \"The role of the user\"\n            }),\n            /**\n             * extra fields for user\n             */\n            data: z.optional(\n              z.record(z.any(), {\n                description: \"Extra fields for the user. Including custom additional fields.\"\n              })\n            )\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"createUser\",\n              summary: \"Create a new user\",\n              description: \"Create a new user\",\n              responses: {\n                200: {\n                  description: \"User created\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canCreateUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              user: [\"create\"]\n            }\n          });\n          if (!canCreateUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS\n            });\n          }\n          const existUser = await ctx.context.internalAdapter.findUserByEmail(\n            ctx.body.email\n          );\n          if (existUser) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.USER_ALREADY_EXISTS\n            });\n          }\n          const user = await ctx.context.internalAdapter.createUser({\n            email: ctx.body.email,\n            name: ctx.body.name,\n            role: ctx.body.role,\n            ...ctx.body.data\n          });\n          if (!user) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: ADMIN_ERROR_CODES.FAILED_TO_CREATE_USER\n            });\n          }\n          const hashedPassword = await ctx.context.password.hash(\n            ctx.body.password\n          );\n          await ctx.context.internalAdapter.linkAccount(\n            {\n              accountId: user.id,\n              providerId: \"credential\",\n              password: hashedPassword,\n              userId: user.id\n            },\n            ctx\n          );\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      listUsers: createAuthEndpoint(\n        \"/admin/list-users\",\n        {\n          method: \"GET\",\n          use: [adminMiddleware],\n          query: z.object({\n            searchValue: z.string({\n              description: \"The value to search for\"\n            }).optional(),\n            searchField: z.enum([\"email\", \"name\"], {\n              description: \"The field to search in, defaults to email. Can be `email` or `name`\"\n            }).optional(),\n            searchOperator: z.enum([\"contains\", \"starts_with\", \"ends_with\"], {\n              description: \"The operator to use for the search. Can be `contains`, `starts_with` or `ends_with`\"\n            }).optional(),\n            limit: z.string({\n              description: \"The number of users to return\"\n            }).or(z.number()).optional(),\n            offset: z.string({\n              description: \"The offset to start from\"\n            }).or(z.number()).optional(),\n            sortBy: z.string({\n              description: \"The field to sort by\"\n            }).optional(),\n            sortDirection: z.enum([\"asc\", \"desc\"], {\n              description: \"The direction to sort by\"\n            }).optional(),\n            filterField: z.string({\n              description: \"The field to filter by\"\n            }).optional(),\n            filterValue: z.string({\n              description: \"The value to filter by\"\n            }).or(z.number()).or(z.boolean()).optional(),\n            filterOperator: z.enum([\"eq\", \"ne\", \"lt\", \"lte\", \"gt\", \"gte\"], {\n              description: \"The operator to use for the filter\"\n            }).optional()\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"listUsers\",\n              summary: \"List users\",\n              description: \"List users\",\n              responses: {\n                200: {\n                  description: \"List of users\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          users: {\n                            type: \"array\",\n                            items: {\n                              $ref: \"#/components/schemas/User\"\n                            }\n                          },\n                          total: {\n                            type: \"number\"\n                          },\n                          limit: {\n                            type: [\"number\", \"undefined\"]\n                          },\n                          offset: {\n                            type: [\"number\", \"undefined\"]\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canListUsers = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              user: [\"list\"]\n            }\n          });\n          if (!canListUsers) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_USERS\n            });\n          }\n          const where = [];\n          if (ctx.query?.searchValue) {\n            where.push({\n              field: ctx.query.searchField || \"email\",\n              operator: ctx.query.searchOperator || \"contains\",\n              value: ctx.query.searchValue\n            });\n          }\n          if (ctx.query?.filterValue) {\n            where.push({\n              field: ctx.query.filterField || \"email\",\n              operator: ctx.query.filterOperator || \"eq\",\n              value: ctx.query.filterValue\n            });\n          }\n          try {\n            const users = await ctx.context.internalAdapter.listUsers(\n              Number(ctx.query?.limit) || void 0,\n              Number(ctx.query?.offset) || void 0,\n              ctx.query?.sortBy ? {\n                field: ctx.query.sortBy,\n                direction: ctx.query.sortDirection || \"asc\"\n              } : void 0,\n              where.length ? where : void 0\n            );\n            const total = await ctx.context.internalAdapter.countTotalUsers();\n            return ctx.json({\n              users,\n              total,\n              limit: Number(ctx.query?.limit) || void 0,\n              offset: Number(ctx.query?.offset) || void 0\n            });\n          } catch (e) {\n            return ctx.json({\n              users: [],\n              total: 0\n            });\n          }\n        }\n      ),\n      listUserSessions: createAuthEndpoint(\n        \"/admin/list-user-sessions\",\n        {\n          method: \"POST\",\n          use: [adminMiddleware],\n          body: z.object({\n            userId: z.string({\n              description: \"The user id\"\n            })\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"listUserSessions\",\n              summary: \"List user sessions\",\n              description: \"List user sessions\",\n              responses: {\n                200: {\n                  description: \"List of user sessions\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          sessions: {\n                            type: \"array\",\n                            items: {\n                              $ref: \"#/components/schemas/Session\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canListSessions = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              session: [\"list\"]\n            }\n          });\n          if (!canListSessions) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS\n            });\n          }\n          const sessions = await ctx.context.internalAdapter.listSessions(\n            ctx.body.userId\n          );\n          return {\n            sessions\n          };\n        }\n      ),\n      unbanUser: createAuthEndpoint(\n        \"/admin/unban-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.string({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"unbanUser\",\n              summary: \"Unban a user\",\n              description: \"Unban a user\",\n              responses: {\n                200: {\n                  description: \"User unbanned\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canBanUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              user: [\"ban\"]\n            }\n          });\n          if (!canBanUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_BAN_USERS\n            });\n          }\n          const user = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              banned: false,\n              banExpires: null,\n              banReason: null\n            }\n          );\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      banUser: createAuthEndpoint(\n        \"/admin/ban-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.string({\n              description: \"The user id\"\n            }),\n            /**\n             * Reason for the ban\n             */\n            banReason: z.string({\n              description: \"The reason for the ban\"\n            }).optional(),\n            /**\n             * Number of seconds until the ban expires\n             */\n            banExpiresIn: z.number({\n              description: \"The number of seconds until the ban expires\"\n            }).optional()\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"banUser\",\n              summary: \"Ban a user\",\n              description: \"Ban a user\",\n              responses: {\n                200: {\n                  description: \"User banned\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canBanUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              user: [\"ban\"]\n            }\n          });\n          if (!canBanUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_BAN_USERS\n            });\n          }\n          if (ctx.body.userId === ctx.context.session.user.id) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.YOU_CANNOT_BAN_YOURSELF\n            });\n          }\n          const user = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              banned: true,\n              banReason: ctx.body.banReason || options?.defaultBanReason || \"No reason\",\n              banExpires: ctx.body.banExpiresIn ? getDate(ctx.body.banExpiresIn, \"sec\") : options?.defaultBanExpiresIn ? getDate(options.defaultBanExpiresIn, \"sec\") : void 0\n            },\n            ctx\n          );\n          await ctx.context.internalAdapter.deleteSessions(ctx.body.userId);\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      impersonateUser: createAuthEndpoint(\n        \"/admin/impersonate-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.string({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"impersonateUser\",\n              summary: \"Impersonate a user\",\n              description: \"Impersonate a user\",\n              responses: {\n                200: {\n                  description: \"Impersonation session created\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          session: {\n                            $ref: \"#/components/schemas/Session\"\n                          },\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canImpersonateUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permission: {\n              user: [\"impersonate\"]\n            }\n          });\n          if (!canImpersonateUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS\n            });\n          }\n          const targetUser = await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          );\n          if (!targetUser) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: \"User not found\"\n            });\n          }\n          const session = await ctx.context.internalAdapter.createSession(\n            targetUser.id,\n            void 0,\n            true,\n            {\n              impersonatedBy: ctx.context.session.user.id,\n              expiresAt: options?.impersonationSessionDuration ? getDate(options.impersonationSessionDuration, \"sec\") : getDate(60 * 60, \"sec\")\n              // 1 hour\n            },\n            ctx,\n            true\n          );\n          if (!session) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: ADMIN_ERROR_CODES.FAILED_TO_CREATE_USER\n            });\n          }\n          const authCookies = ctx.context.authCookies;\n          deleteSessionCookie(ctx);\n          await ctx.setSignedCookie(\n            \"admin_session\",\n            ctx.context.session.session.token,\n            ctx.context.secret,\n            authCookies.sessionToken.options\n          );\n          await setSessionCookie(\n            ctx,\n            {\n              session,\n              user: targetUser\n            },\n            true\n          );\n          return ctx.json({\n            session,\n            user: targetUser\n          });\n        }\n      ),\n      stopImpersonating: createAuthEndpoint(\n        \"/admin/stop-impersonating\",\n        {\n          method: \"POST\"\n        },\n        async (ctx) => {\n          const session = await getSessionFromCtx(ctx);\n          if (!session) {\n            throw new APIError(\"UNAUTHORIZED\");\n          }\n          if (!session.session.impersonatedBy) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"You are not impersonating anyone\"\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(\n            session.session.impersonatedBy\n          );\n          if (!user) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find user\"\n            });\n          }\n          const adminCookie = await ctx.getSignedCookie(\n            \"admin_session\",\n            ctx.context.secret\n          );\n          if (!adminCookie) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find admin session\"\n            });\n          }\n          const adminSession = await ctx.context.internalAdapter.findSession(adminCookie);\n          if (!adminSession || adminSession.session.userId !== user.id) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find admin session\"\n            });\n          }\n          await setSessionCookie(ctx, adminSession);\n          return ctx.json(adminSession);\n        }\n      ),\n      revokeUserSession: createAuthEndpoint(\n        \"/admin/revoke-user-session\",\n        {\n          method: \"POST\",\n          body: z.object({\n            sessionToken: z.string({\n              description: \"The session token\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"revokeUserSession\",\n              summary: \"Revoke a user session\",\n              description: \"Revoke a user session\",\n              responses: {\n                200: {\n                  description: \"Session revoked\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canRevokeSession = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              session: [\"revoke\"]\n            }\n          });\n          if (!canRevokeSession) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS\n            });\n          }\n          await ctx.context.internalAdapter.deleteSession(\n            ctx.body.sessionToken\n          );\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      revokeUserSessions: createAuthEndpoint(\n        \"/admin/revoke-user-sessions\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.string({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"revokeUserSessions\",\n              summary: \"Revoke all user sessions\",\n              description: \"Revoke all user sessions\",\n              responses: {\n                200: {\n                  description: \"Sessions revoked\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canRevokeSession = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              session: [\"revoke\"]\n            }\n          });\n          if (!canRevokeSession) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS\n            });\n          }\n          await ctx.context.internalAdapter.deleteSessions(ctx.body.userId);\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      removeUser: createAuthEndpoint(\n        \"/admin/remove-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.string({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"removeUser\",\n              summary: \"Remove a user\",\n              description: \"Delete a user and all their sessions and accounts. Cannot be undone.\",\n              responses: {\n                200: {\n                  description: \"User removed\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canDeleteUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permission: {\n              user: [\"delete\"]\n            }\n          });\n          if (!canDeleteUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS\n            });\n          }\n          await ctx.context.internalAdapter.deleteUser(ctx.body.userId);\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      setUserPassword: createAuthEndpoint(\n        \"/admin/set-user-password\",\n        {\n          method: \"POST\",\n          body: z.object({\n            newPassword: z.string({\n              description: \"The new password\"\n            }),\n            userId: z.string({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"setUserPassword\",\n              summary: \"Set a user's password\",\n              description: \"Set a user's password\",\n              responses: {\n                200: {\n                  description: \"Password set\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          status: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canSetUserPassword = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permission: {\n              user: [\"set-password\"]\n            }\n          });\n          if (!canSetUserPassword) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD\n            });\n          }\n          const hashedPassword = await ctx.context.password.hash(\n            ctx.body.newPassword\n          );\n          await ctx.context.internalAdapter.updatePassword(\n            ctx.body.userId,\n            hashedPassword\n          );\n          return ctx.json({\n            status: true\n          });\n        }\n      ),\n      userHasPermission: createAuthEndpoint(\n        \"/admin/has-permission\",\n        {\n          method: \"POST\",\n          body: z.object({\n            permission: z.record(z.string(), z.array(z.string())),\n            userId: z.string().optional(),\n            role: z.string().optional()\n          }),\n          metadata: {\n            openapi: {\n              description: \"Check if the user has permission\",\n              requestBody: {\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      type: \"object\",\n                      properties: {\n                        permission: {\n                          type: \"object\",\n                          description: \"The permission to check\"\n                        }\n                      },\n                      required: [\"permission\"]\n                    }\n                  }\n                }\n              },\n              responses: {\n                \"200\": {\n                  description: \"Success\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          error: {\n                            type: \"string\"\n                          },\n                          success: {\n                            type: \"boolean\"\n                          }\n                        },\n                        required: [\"success\"]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            $Infer: {\n              body: {}\n            }\n          }\n        },\n        async (ctx) => {\n          if (!ctx.body.permission || Object.keys(ctx.body.permission).length > 1) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"invalid permission check. you can only check one resource permission at a time.\"\n            });\n          }\n          const session = await getSessionFromCtx(ctx);\n          if (!session && (ctx.request || ctx.headers) && !ctx.body.userId && !ctx.body.role) {\n            throw new APIError(\"UNAUTHORIZED\");\n          }\n          const user = session?.user || await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          ) || (ctx.body.role ? { id: \"\", role: ctx.body.role } : null);\n          if (!user) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"user not found\"\n            });\n          }\n          const result = hasPermission({\n            userId: user.id,\n            role: user.role,\n            options,\n            permission: ctx.body.permission\n          });\n          return ctx.json({\n            error: null,\n            success: result\n          });\n        }\n      )\n    },\n    $ERROR_CODES: ADMIN_ERROR_CODES,\n    schema: mergeSchema(schema, opts.schema)\n  };\n};\nconst schema = {\n  user: {\n    fields: {\n      role: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      banned: {\n        type: \"boolean\",\n        defaultValue: false,\n        required: false,\n        input: false\n      },\n      banReason: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      banExpires: {\n        type: \"date\",\n        required: false,\n        input: false\n      }\n    }\n  },\n  session: {\n    fields: {\n      impersonatedBy: {\n        type: \"string\",\n        required: false\n      }\n    }\n  }\n};\n\nexport { admin as a };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9797, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/better-auth/dist/shared/better-auth.fsvwNeUx.mjs"],"sourcesContent":["import { z } from 'zod';\n\nconst schema = {\n  jwks: {\n    fields: {\n      publicKey: {\n        type: \"string\",\n        required: true\n      },\n      privateKey: {\n        type: \"string\",\n        required: true\n      },\n      createdAt: {\n        type: \"date\",\n        required: true\n      }\n    }\n  }\n};\nz.object({\n  id: z.string(),\n  publicKey: z.string(),\n  privateKey: z.string(),\n  createdAt: z.date()\n});\n\nexport { schema as s };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS;IACb,MAAM;QACJ,QAAQ;YACN,WAAW;gBACT,MAAM;gBACN,UAAU;YACZ;YACA,YAAY;gBACV,MAAM;gBACN,UAAU;YACZ;YACA,WAAW;gBACT,MAAM;gBACN,UAAU;YACZ;QACF;IACF;AACF;AACA,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACP,IAAI,sIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,YAAY,sIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,WAAW,sIAAA,CAAA,IAAC,CAAC,IAAI;AACnB","ignoreList":[0],"debugId":null}}]
}