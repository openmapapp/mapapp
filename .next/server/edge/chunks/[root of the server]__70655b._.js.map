{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["//Use this file to define which routes should be protected by authentication.\n//You can make the entire site protected by adding the root of the project (\"/\") to the matcher below.\n\nimport { betterFetch } from \"@better-fetch/fetch\";\nimport type { auth } from \"./app/lib/auth\";\nimport { NextResponse, type NextRequest } from \"next/server\";\n\ntype Session = typeof auth.$Infer.Session;\n\nexport default async function authMiddleware(request: NextRequest) {\n  const { data: session } = await betterFetch<Session>(\n    \"/api/auth/get-session\",\n    {\n      baseURL: request.nextUrl.origin,\n      headers: {\n        //get the cookie from the request\n        cookie: request.headers.get(\"cookie\") || \"\",\n      },\n    }\n  );\n\n  //if there is no session, redirect to the sign-in page.\n  if (!session) {\n    return NextResponse.redirect(new URL(\"/sign-in\", request.url));\n  }\n  return NextResponse.next();\n}\n\n//The matcher array below will protect the dashboard and test routes.\nexport const config = {\n  matcher: [\"/dashboard\", \"/test\", \"/settings\", \"/api\"],\n};\n"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,sGAAsG;;;;;AAEtG;AAEA;AAAA;;;AAIe,eAAe,eAAe,OAAoB;IAC/D,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,2JAAA,CAAA,cAAW,AAAD,EACxC,yBACA;QACE,SAAS,QAAQ,OAAO,CAAC,MAAM;QAC/B,SAAS;YACP,iCAAiC;YACjC,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;QAC3C;IACF;IAGF,uDAAuD;IACvD,IAAI,CAAC,SAAS;QACZ,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;IAC9D;IACA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAc;QAAS;QAAa;KAAO;AACvD"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}