{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/adder.js"],"sourcesContent":["// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305â€“363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n"],"names":[],"mappings":"AAAA,+DAA+D;AAC/D,8EAA8E;AAC9E,4EAA4E;AAC5E,kBAAkB;AAClB,2DAA2D;AAC3D,wCAAwC;;;;AAEzB;IACb,OAAO,IAAI;AACb;AAEA,SAAS;IACP,IAAI,CAAC,KAAK;AACZ;AAEA,MAAM,SAAS,GAAG;IAChB,aAAa;IACb,OAAO;QACL,IAAI,CAAC,CAAC,GACN,IAAI,CAAC,CAAC,GAAG,GAAG,cAAc;IAC5B;IACA,KAAK,SAAS,CAAC;QACb,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC;QACnB,IAAI,IAAI,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;QACxB,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC;aACvB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB;IACA,SAAS;QACP,OAAO,IAAI,CAAC,CAAC;IACf;AACF;AAEA,IAAI,OAAO,IAAI;AAEf,SAAS,IAAI,KAAK,EAAE,CAAC,EAAE,CAAC;IACtB,IAAI,IAAI,MAAM,CAAC,GAAG,IAAI,GAClB,KAAK,IAAI,GACT,KAAK,IAAI;IACb,MAAM,CAAC,GAAG,AAAC,IAAI,KAAM,CAAC,IAAI,EAAE;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/math.js"],"sourcesContent":["export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAI,UAAU;AACd,IAAI,WAAW;AACf,IAAI,KAAK,KAAK,EAAE;AAChB,IAAI,SAAS,KAAK;AAClB,IAAI,YAAY,KAAK;AACrB,IAAI,MAAM,KAAK;AAEf,IAAI,UAAU,MAAM;AACpB,IAAI,UAAU,KAAK;AAEnB,IAAI,MAAM,KAAK,GAAG;AAClB,IAAI,OAAO,KAAK,IAAI;AACpB,IAAI,QAAQ,KAAK,KAAK;AACtB,IAAI,MAAM,KAAK,GAAG;AAClB,IAAI,OAAO,KAAK,IAAI;AACpB,IAAI,MAAM,KAAK,GAAG;AAClB,IAAI,QAAQ,KAAK,KAAK;AACtB,IAAI,MAAM,KAAK,GAAG;AAClB,IAAI,MAAM,KAAK,GAAG;AAClB,IAAI,MAAM,KAAK,GAAG;AAClB,IAAI,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC;IAAI,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI;AAAG;AACzE,IAAI,OAAO,KAAK,IAAI;AACpB,IAAI,MAAM,KAAK,GAAG;AAElB,SAAS,KAAK,CAAC;IACpB,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC;AAC7C;AAEO,SAAS,KAAK,CAAC;IACpB,OAAO,IAAI,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;AACvD;AAEO,SAAS,SAAS,CAAC;IACxB,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE,IAAI;AAC5B","ignoreList":[0]}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/noop.js"],"sourcesContent":["export default function noop() {}\n"],"names":[],"mappings":";;;AAAe,SAAS,QAAQ","ignoreList":[0]}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/stream.js"],"sourcesContent":["function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,eAAe,QAAQ,EAAE,MAAM;IACtC,IAAI,YAAY,mBAAmB,cAAc,CAAC,SAAS,IAAI,GAAG;QAChE,kBAAkB,CAAC,SAAS,IAAI,CAAC,CAAC,UAAU;IAC9C;AACF;AAEA,IAAI,mBAAmB;IACrB,SAAS,SAAS,MAAM,EAAE,MAAM;QAC9B,eAAe,OAAO,QAAQ,EAAE;IAClC;IACA,mBAAmB,SAAS,MAAM,EAAE,MAAM;QACxC,IAAI,WAAW,OAAO,QAAQ,EAAE,IAAI,CAAC,GAAG,IAAI,SAAS,MAAM;QAC3D,MAAO,EAAE,IAAI,EAAG,eAAe,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE;IACvD;AACF;AAEA,IAAI,qBAAqB;IACvB,QAAQ,SAAS,MAAM,EAAE,MAAM;QAC7B,OAAO,MAAM;IACf;IACA,OAAO,SAAS,MAAM,EAAE,MAAM;QAC5B,SAAS,OAAO,WAAW;QAC3B,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;IAC9C;IACA,YAAY,SAAS,MAAM,EAAE,MAAM;QACjC,IAAI,cAAc,OAAO,WAAW,EAAE,IAAI,CAAC,GAAG,IAAI,YAAY,MAAM;QACpE,MAAO,EAAE,IAAI,EAAG,SAAS,WAAW,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;IACvF;IACA,YAAY,SAAS,MAAM,EAAE,MAAM;QACjC,WAAW,OAAO,WAAW,EAAE,QAAQ;IACzC;IACA,iBAAiB,SAAS,MAAM,EAAE,MAAM;QACtC,IAAI,cAAc,OAAO,WAAW,EAAE,IAAI,CAAC,GAAG,IAAI,YAAY,MAAM;QACpE,MAAO,EAAE,IAAI,EAAG,WAAW,WAAW,CAAC,EAAE,EAAE,QAAQ;IACrD;IACA,SAAS,SAAS,MAAM,EAAE,MAAM;QAC9B,cAAc,OAAO,WAAW,EAAE;IACpC;IACA,cAAc,SAAS,MAAM,EAAE,MAAM;QACnC,IAAI,cAAc,OAAO,WAAW,EAAE,IAAI,CAAC,GAAG,IAAI,YAAY,MAAM;QACpE,MAAO,EAAE,IAAI,EAAG,cAAc,WAAW,CAAC,EAAE,EAAE;IAChD;IACA,oBAAoB,SAAS,MAAM,EAAE,MAAM;QACzC,IAAI,aAAa,OAAO,UAAU,EAAE,IAAI,CAAC,GAAG,IAAI,WAAW,MAAM;QACjE,MAAO,EAAE,IAAI,EAAG,eAAe,UAAU,CAAC,EAAE,EAAE;IAChD;AACF;AAEA,SAAS,WAAW,WAAW,EAAE,MAAM,EAAE,MAAM;IAC7C,IAAI,IAAI,CAAC,GAAG,IAAI,YAAY,MAAM,GAAG,QAAQ;IAC7C,OAAO,SAAS;IAChB,MAAO,EAAE,IAAI,EAAG,aAAa,WAAW,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE;IACrG,OAAO,OAAO;AAChB;AAEA,SAAS,cAAc,WAAW,EAAE,MAAM;IACxC,IAAI,IAAI,CAAC,GAAG,IAAI,YAAY,MAAM;IAClC,OAAO,YAAY;IACnB,MAAO,EAAE,IAAI,EAAG,WAAW,WAAW,CAAC,EAAE,EAAE,QAAQ;IACnD,OAAO,UAAU;AACnB;AAEe,wCAAS,MAAM,EAAE,MAAM;IACpC,IAAI,UAAU,iBAAiB,cAAc,CAAC,OAAO,IAAI,GAAG;QAC1D,gBAAgB,CAAC,OAAO,IAAI,CAAC,CAAC,QAAQ;IACxC,OAAO;QACL,eAAe,QAAQ;IACzB;AACF","ignoreList":[0]}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/area.js"],"sourcesContent":["import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoliâ€™s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;AAEO,IAAI,cAAc,CAAA,GAAA,4IAAA,CAAA,UAAK,AAAD;AAE7B,IAAI,UAAU,CAAA,GAAA,4IAAA,CAAA,UAAK,AAAD,KACd,UACA,OACA,SACA,SACA;AAEG,IAAI,aAAa;IACtB,OAAO,2IAAA,CAAA,UAAI;IACX,WAAW,2IAAA,CAAA,UAAI;IACf,SAAS,2IAAA,CAAA,UAAI;IACb,cAAc;QACZ,YAAY,KAAK;QACjB,WAAW,SAAS,GAAG;QACvB,WAAW,OAAO,GAAG;IACvB;IACA,YAAY;QACV,IAAI,WAAW,CAAC;QAChB,QAAQ,GAAG,CAAC,WAAW,IAAI,2IAAA,CAAA,MAAG,GAAG,WAAW;QAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,2IAAA,CAAA,UAAI;IACnD;IACA,QAAQ;QACN,QAAQ,GAAG,CAAC,2IAAA,CAAA,MAAG;IACjB;AACF;AAEA,SAAS;IACP,WAAW,KAAK,GAAG;AACrB;AAEA,SAAS;IACP,UAAU,UAAU;AACtB;AAEA,SAAS,eAAe,MAAM,EAAE,GAAG;IACjC,WAAW,KAAK,GAAG;IACnB,WAAW,QAAQ,QAAQ;IAC3B,UAAU,2IAAA,CAAA,UAAO,EAAE,OAAO,2IAAA,CAAA,UAAO;IACjC,UAAU,QAAQ,UAAU,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM,MAAM,IAAI,2IAAA,CAAA,YAAS,GAAG,UAAU,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;AAC5E;AAEA,SAAS,UAAU,MAAM,EAAE,GAAG;IAC5B,UAAU,2IAAA,CAAA,UAAO,EAAE,OAAO,2IAAA,CAAA,UAAO;IACjC,MAAM,MAAM,IAAI,2IAAA,CAAA,YAAS,EAAE,4CAA4C;IAEvE,yEAAyE;IACzE,wEAAwE;IACxE,sEAAsE;IACtE,IAAI,UAAU,SAAS,SACnB,WAAW,WAAW,IAAI,IAAI,CAAC,GAC/B,WAAW,WAAW,SACtB,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACb,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACb,IAAI,UAAU,QACd,IAAI,UAAU,SAAS,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,WAC/B,IAAI,IAAI,WAAW,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;IAC3B,YAAY,GAAG,CAAC,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,GAAG;IAEzB,+BAA+B;IAC/B,UAAU,QAAQ,UAAU,QAAQ,UAAU;AAChD;AAEe,wCAAS,MAAM;IAC5B,QAAQ,KAAK;IACb,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE,QAAQ;IACf,OAAO,UAAU;AACnB","ignoreList":[0]}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/cartesian.js"],"sourcesContent":["import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEO,SAAS,UAAU,SAAS;IACjC,OAAO;QAAC,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;QAAG,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,SAAS,CAAC,EAAE;KAAE;AAChE;AAEO,SAAS,UAAU,SAAS;IACjC,IAAI,SAAS,SAAS,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE,EAAE,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;IAC5D,OAAO;QAAC,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;QAAS,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;QAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;KAAK;AAC/D;AAEO,SAAS,aAAa,CAAC,EAAE,CAAC;IAC/B,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;AAChD;AAEO,SAAS,eAAe,CAAC,EAAE,CAAC;IACjC,OAAO;QAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;QAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;QAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;KAAC;AAC1F;AAGO,SAAS,oBAAoB,CAAC,EAAE,CAAC;IACtC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;AAC1C;AAEO,SAAS,eAAe,MAAM,EAAE,CAAC;IACtC,OAAO;QAAC,MAAM,CAAC,EAAE,GAAG;QAAG,MAAM,CAAC,EAAE,GAAG;QAAG,MAAM,CAAC,EAAE,GAAG;KAAE;AACtD;AAGO,SAAS,0BAA0B,CAAC;IACzC,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACpD,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI;AAChC","ignoreList":[0]}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/bounds.js"],"sourcesContent":["import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360Â°) % 360Â°, except that we want\n// the distance between Â±180Â° to be 360Â°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/centroid.js"],"sourcesContent":["import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/constant.js"],"sourcesContent":["export default function(x) {\n  return function() {\n    return x;\n  };\n}\n"],"names":[],"mappings":";;;AAAe,wCAAS,CAAC;IACvB,OAAO;QACL,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/compose.js"],"sourcesContent":["export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n"],"names":[],"mappings":";;;AAAe,wCAAS,CAAC,EAAE,CAAC;IAE1B,SAAS,QAAQ,CAAC,EAAE,CAAC;QACnB,OAAO,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;IAClC;IAEA,IAAI,EAAE,MAAM,IAAI,EAAE,MAAM,EAAE,QAAQ,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;QACtD,OAAO,IAAI,EAAE,MAAM,CAAC,GAAG,IAAI,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;IACrD;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/rotation.js"],"sourcesContent":["import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,SAAS,iBAAiB,MAAM,EAAE,GAAG;IACnC,OAAO;QAAC,SAAS,2IAAA,CAAA,KAAE,GAAG,SAAS,2IAAA,CAAA,MAAG,GAAG,SAAS,CAAC,2IAAA,CAAA,KAAE,GAAG,SAAS,2IAAA,CAAA,MAAG,GAAG;QAAQ;KAAI;AACjF;AAEA,iBAAiB,MAAM,GAAG;AAEnB,SAAS,cAAc,WAAW,EAAE,QAAQ,EAAE,UAAU;IAC7D,OAAO,CAAC,eAAe,2IAAA,CAAA,MAAG,IAAK,YAAY,aAAa,CAAA,GAAA,8IAAA,CAAA,UAAO,AAAD,EAAE,eAAe,cAAc,iBAAiB,UAAU,eACpH,eAAe,eACd,YAAY,aAAa,iBAAiB,UAAU,cACrD;AACN;AAEA,SAAS,sBAAsB,WAAW;IACxC,OAAO,SAAS,MAAM,EAAE,GAAG;QACzB,OAAO,UAAU,aAAa;YAAC,SAAS,2IAAA,CAAA,KAAE,GAAG,SAAS,2IAAA,CAAA,MAAG,GAAG,SAAS,CAAC,2IAAA,CAAA,KAAE,GAAG,SAAS,2IAAA,CAAA,MAAG,GAAG;YAAQ;SAAI;IACxG;AACF;AAEA,SAAS,eAAe,WAAW;IACjC,IAAI,WAAW,sBAAsB;IACrC,SAAS,MAAM,GAAG,sBAAsB,CAAC;IACzC,OAAO;AACT;AAEA,SAAS,iBAAiB,QAAQ,EAAE,UAAU;IAC5C,IAAI,cAAc,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,WAClB,cAAc,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,WAClB,gBAAgB,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,aACpB,gBAAgB,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;IAExB,SAAS,SAAS,MAAM,EAAE,GAAG;QAC3B,IAAI,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACb,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,UAAU,QAClB,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,UAAU,QAClB,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACR,IAAI,IAAI,cAAc,IAAI;QAC9B,OAAO;YACL,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,IAAI,gBAAgB,IAAI,eAAe,IAAI,cAAc,IAAI;YACnE,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,gBAAgB,IAAI;SAC9B;IACH;IAEA,SAAS,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG;QACpC,IAAI,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACb,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,UAAU,QAClB,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,UAAU,QAClB,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACR,IAAI,IAAI,gBAAgB,IAAI;QAChC,OAAO;YACL,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,IAAI,gBAAgB,IAAI,eAAe,IAAI,cAAc,IAAI;YACnE,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,cAAc,IAAI;SAC5B;IACH;IAEA,OAAO;AACT;AAEe,wCAAS,MAAM;IAC5B,SAAS,cAAc,MAAM,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EAAE,MAAM,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EAAE,OAAO,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,GAAG;IAE3G,SAAS,QAAQ,WAAW;QAC1B,cAAc,OAAO,WAAW,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EAAE,WAAW,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO;QACvE,OAAO,WAAW,CAAC,EAAE,IAAI,2IAAA,CAAA,UAAO,EAAE,WAAW,CAAC,EAAE,IAAI,2IAAA,CAAA,UAAO,EAAE;IAC/D;IAEA,QAAQ,MAAM,GAAG,SAAS,WAAW;QACnC,cAAc,OAAO,MAAM,CAAC,WAAW,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EAAE,WAAW,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO;QAC9E,OAAO,WAAW,CAAC,EAAE,IAAI,2IAAA,CAAA,UAAO,EAAE,WAAW,CAAC,EAAE,IAAI,2IAAA,CAAA,UAAO,EAAE;IAC/D;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 724, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/circle.js"],"sourcesContent":["import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0Â°, 0Â°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/clip/buffer.js"],"sourcesContent":["import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe;IACb,IAAI,QAAQ,EAAE,EACV;IACJ,OAAO;QACL,OAAO,SAAS,CAAC,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC;gBAAC;gBAAG;aAAE;QAClB;QACA,WAAW;YACT,MAAM,IAAI,CAAC,OAAO,EAAE;QACtB;QACA,SAAS,2IAAA,CAAA,UAAI;QACb,QAAQ;YACN,IAAI,MAAM,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,KAAK;QACjE;QACA,QAAQ;YACN,IAAI,SAAS;YACb,QAAQ,EAAE;YACV,OAAO;YACP,OAAO;QACT;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 843, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/clip/line.js"],"sourcesContent":["export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n"],"names":[],"mappings":";;;AAAe,wCAAS,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC1C,IAAI,KAAK,CAAC,CAAC,EAAE,EACT,KAAK,CAAC,CAAC,EAAE,EACT,KAAK,CAAC,CAAC,EAAE,EACT,KAAK,CAAC,CAAC,EAAE,EACT,KAAK,GACL,KAAK,GACL,KAAK,KAAK,IACV,KAAK,KAAK,IACV;IAEJ,IAAI,KAAK;IACT,IAAI,CAAC,MAAM,IAAI,GAAG;IAClB,KAAK;IACL,IAAI,KAAK,GAAG;QACV,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB,OAAO,IAAI,KAAK,GAAG;QACjB,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB;IAEA,IAAI,KAAK;IACT,IAAI,CAAC,MAAM,IAAI,GAAG;IAClB,KAAK;IACL,IAAI,KAAK,GAAG;QACV,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB,OAAO,IAAI,KAAK,GAAG;QACjB,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB;IAEA,IAAI,KAAK;IACT,IAAI,CAAC,MAAM,IAAI,GAAG;IAClB,KAAK;IACL,IAAI,KAAK,GAAG;QACV,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB,OAAO,IAAI,KAAK,GAAG;QACjB,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB;IAEA,IAAI,KAAK;IACT,IAAI,CAAC,MAAM,IAAI,GAAG;IAClB,KAAK;IACL,IAAI,KAAK,GAAG;QACV,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB,OAAO,IAAI,KAAK,GAAG;QACjB,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,IAAI,KAAK;IACnB;IAEA,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,KAAK,IAAI,CAAC,CAAC,EAAE,GAAG,KAAK,KAAK;IAClD,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,KAAK,IAAI,CAAC,CAAC,EAAE,GAAG,KAAK,KAAK;IAClD,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 898, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/pointEqual.js"],"sourcesContent":["import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe,wCAAS,CAAC,EAAE,CAAC;IAC1B,OAAO,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,2IAAA,CAAA,UAAO,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,2IAAA,CAAA,UAAO;AACjE","ignoreList":[0]}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/clip/polygon.js"],"sourcesContent":["import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,aAAa,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK;IAC/C,IAAI,CAAC,CAAC,GAAG;IACT,IAAI,CAAC,CAAC,GAAG;IACT,IAAI,CAAC,CAAC,GAAG,OAAO,uBAAuB;IACvC,IAAI,CAAC,CAAC,GAAG,OAAO,eAAe;IAC/B,IAAI,CAAC,CAAC,GAAG,OAAO,UAAU;IAC1B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,kBAAkB;AAC5C;AAKe,wCAAS,QAAQ,EAAE,mBAAmB,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM;IACrF,IAAI,UAAU,EAAE,EACZ,OAAO,EAAE,EACT,GACA;IAEJ,SAAS,OAAO,CAAC,SAAS,OAAO;QAC/B,IAAI,CAAC,IAAI,QAAQ,MAAM,GAAG,CAAC,KAAK,GAAG;QACnC,IAAI,GAAG,KAAK,OAAO,CAAC,EAAE,EAAE,KAAK,OAAO,CAAC,EAAE,EAAE;QAEzC,4EAA4E;QAC5E,2EAA2E;QAC3E,mCAAmC;QACnC,IAAI,CAAA,GAAA,iJAAA,CAAA,UAAU,AAAD,EAAE,IAAI,KAAK;YACtB,OAAO,SAAS;YAChB,IAAK,IAAI,GAAG,IAAI,GAAG,EAAE,EAAG,OAAO,KAAK,CAAC,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;YAChE,OAAO,OAAO;YACd;QACF;QAEA,QAAQ,IAAI,CAAC,IAAI,IAAI,aAAa,IAAI,SAAS,MAAM;QACrD,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,aAAa,IAAI,MAAM,GAAG;QAC9C,QAAQ,IAAI,CAAC,IAAI,IAAI,aAAa,IAAI,SAAS,MAAM;QACrD,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,aAAa,IAAI,MAAM,GAAG;IAChD;IAEA,IAAI,CAAC,QAAQ,MAAM,EAAE;IAErB,KAAK,IAAI,CAAC;IACV,KAAK;IACL,KAAK;IAEL,IAAK,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAI,GAAG,EAAE,EAAG;QACvC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,cAAc,CAAC;IAC7B;IAEA,IAAI,QAAQ,OAAO,CAAC,EAAE,EAClB,QACA;IAEJ,MAAO,EAAG;QACR,qCAAqC;QACrC,IAAI,UAAU,OACV,YAAY;QAChB,MAAO,QAAQ,CAAC,CAAE,IAAI,CAAC,UAAU,QAAQ,CAAC,MAAM,OAAO;QACvD,SAAS,QAAQ,CAAC;QAClB,OAAO,SAAS;QAChB,GAAG;YACD,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG;YAC1B,IAAI,QAAQ,CAAC,EAAE;gBACb,IAAI,WAAW;oBACb,IAAK,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAI,GAAG,EAAE,EAAG,OAAO,KAAK,CAAC,CAAC,QAAQ,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;gBAC1F,OAAO;oBACL,YAAY,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG;gBACzC;gBACA,UAAU,QAAQ,CAAC;YACrB,OAAO;gBACL,IAAI,WAAW;oBACb,SAAS,QAAQ,CAAC,CAAC,CAAC;oBACpB,IAAK,IAAI,OAAO,MAAM,GAAG,GAAG,KAAK,GAAG,EAAE,EAAG,OAAO,KAAK,CAAC,CAAC,QAAQ,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;gBACxF,OAAO;oBACL,YAAY,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG;gBAC1C;gBACA,UAAU,QAAQ,CAAC;YACrB;YACA,UAAU,QAAQ,CAAC;YACnB,SAAS,QAAQ,CAAC;YAClB,YAAY,CAAC;QACf,QAAS,CAAC,QAAQ,CAAC,CAAE;QACrB,OAAO,OAAO;IAChB;AACF;AAEA,SAAS,KAAK,KAAK;IACjB,IAAI,CAAC,CAAC,IAAI,MAAM,MAAM,GAAG;IACzB,IAAI,GACA,IAAI,GACJ,IAAI,KAAK,CAAC,EAAE,EACZ;IACJ,MAAO,EAAE,IAAI,EAAG;QACd,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE;QAClB,EAAE,CAAC,GAAG;QACN,IAAI;IACN;IACA,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE;IAClB,EAAE,CAAC,GAAG;AACR","ignoreList":[0]}},
    {"offset": {"line": 994, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/clip/extent.js"],"sourcesContent":["import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygonâ€™s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/polygonContains.js"],"sourcesContent":["import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the pointâ€™s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/length.js"],"sourcesContent":["import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEA,IAAI,YAAY,CAAA,GAAA,4IAAA,CAAA,UAAK,AAAD,KAChB,SACA,SACA;AAEJ,IAAI,eAAe;IACjB,QAAQ,2IAAA,CAAA,UAAI;IACZ,OAAO,2IAAA,CAAA,UAAI;IACX,WAAW;IACX,SAAS,2IAAA,CAAA,UAAI;IACb,cAAc,2IAAA,CAAA,UAAI;IAClB,YAAY,2IAAA,CAAA,UAAI;AAClB;AAEA,SAAS;IACP,aAAa,KAAK,GAAG;IACrB,aAAa,OAAO,GAAG;AACzB;AAEA,SAAS;IACP,aAAa,KAAK,GAAG,aAAa,OAAO,GAAG,2IAAA,CAAA,UAAI;AAClD;AAEA,SAAS,iBAAiB,MAAM,EAAE,GAAG;IACnC,UAAU,2IAAA,CAAA,UAAO,EAAE,OAAO,2IAAA,CAAA,UAAO;IACjC,UAAU,QAAQ,UAAU,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM,UAAU,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;IACpD,aAAa,KAAK,GAAG;AACvB;AAEA,SAAS,YAAY,MAAM,EAAE,GAAG;IAC9B,UAAU,2IAAA,CAAA,UAAO,EAAE,OAAO,2IAAA,CAAA,UAAO;IACjC,IAAI,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACb,SAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MACb,QAAQ,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,SAAS,UACrB,WAAW,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,QACf,WAAW,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,QACf,IAAI,SAAS,UACb,IAAI,UAAU,SAAS,UAAU,SAAS,UAC1C,IAAI,UAAU,SAAS,UAAU,SAAS;IAC9C,UAAU,GAAG,CAAC,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,IAAI,IAAI,IAAI;IACzC,UAAU,QAAQ,UAAU,QAAQ,UAAU;AAChD;AAEe,wCAAS,MAAM;IAC5B,UAAU,KAAK;IACf,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE,QAAQ;IACf,OAAO,CAAC;AACV","ignoreList":[0]}},
    {"offset": {"line": 1272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1278, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/distance.js"],"sourcesContent":["import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,cAAc;IAAC;IAAM;CAAK,EAC1B,SAAS;IAAC,MAAM;IAAc,aAAa;AAAW;AAE3C,wCAAS,CAAC,EAAE,CAAC;IAC1B,WAAW,CAAC,EAAE,GAAG;IACjB,WAAW,CAAC,EAAE,GAAG;IACjB,OAAO,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE;AAChB","ignoreList":[0]}},
    {"offset": {"line": 1295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1301, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/contains.js"],"sourcesContent":["import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1385, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/graticule.js"],"sourcesContent":["import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1543, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/interpolate.js"],"sourcesContent":["import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe,wCAAS,CAAC,EAAE,CAAC;IAC1B,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EACnB,KAAK,CAAC,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EACnB,KAAK,CAAC,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EACnB,KAAK,CAAC,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EACnB,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KACV,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KACV,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KACV,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KACV,MAAM,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAChB,MAAM,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAChB,MAAM,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAChB,MAAM,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAChB,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,MAAM,MAAM,MAAM,CAAA,GAAA,2IAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,OAChE,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;IAEZ,IAAI,cAAc,IAAI,SAAS,CAAC;QAC9B,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,KAAK,GAClB,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IAAI,KAAK,GACjB,IAAI,IAAI,MAAM,IAAI,KAClB,IAAI,IAAI,MAAM,IAAI,KAClB,IAAI,IAAI,MAAM,IAAI;QACtB,OAAO;YACL,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,GAAG,KAAK,2IAAA,CAAA,UAAO;YACrB,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,IAAI,IAAI,MAAM,2IAAA,CAAA,UAAO;SACxC;IACH,IAAI;QACF,OAAO;YAAC,KAAK,2IAAA,CAAA,UAAO;YAAE,KAAK,2IAAA,CAAA,UAAO;SAAC;IACrC;IAEA,YAAY,QAAQ,GAAG;IAEvB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 1565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1571, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/identity.js"],"sourcesContent":["export default function(x) {\n  return x;\n}\n"],"names":[],"mappings":";;;AAAe,wCAAS,CAAC;IACvB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 1577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1583, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/path/area.js"],"sourcesContent":["import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,IAAI,UAAU,CAAA,GAAA,4IAAA,CAAA,UAAK,AAAD,KACd,cAAc,CAAA,GAAA,4IAAA,CAAA,UAAK,AAAD,KAClB,KACA,KACA,IACA;AAEJ,IAAI,aAAa;IACf,OAAO,2IAAA,CAAA,UAAI;IACX,WAAW,2IAAA,CAAA,UAAI;IACf,SAAS,2IAAA,CAAA,UAAI;IACb,cAAc;QACZ,WAAW,SAAS,GAAG;QACvB,WAAW,OAAO,GAAG;IACvB;IACA,YAAY;QACV,WAAW,SAAS,GAAG,WAAW,OAAO,GAAG,WAAW,KAAK,GAAG,2IAAA,CAAA,UAAI;QACnE,QAAQ,GAAG,CAAC,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;QAChB,YAAY,KAAK;IACnB;IACA,QAAQ;QACN,IAAI,OAAO,UAAU;QACrB,QAAQ,KAAK;QACb,OAAO;IACT;AACF;AAEA,SAAS;IACP,WAAW,KAAK,GAAG;AACrB;AAEA,SAAS,eAAe,CAAC,EAAE,CAAC;IAC1B,WAAW,KAAK,GAAG;IACnB,MAAM,KAAK,GAAG,MAAM,KAAK;AAC3B;AAEA,SAAS,UAAU,CAAC,EAAE,CAAC;IACrB,YAAY,GAAG,CAAC,KAAK,IAAI,KAAK;IAC9B,KAAK,GAAG,KAAK;AACf;AAEA,SAAS;IACP,UAAU,KAAK;AACjB;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 1627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1633, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/path/bounds.js"],"sourcesContent":["import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,KAAK,UACL,KAAK,IACL,KAAK,CAAC,IACN,KAAK;AAET,IAAI,eAAe;IACjB,OAAO;IACP,WAAW,2IAAA,CAAA,UAAI;IACf,SAAS,2IAAA,CAAA,UAAI;IACb,cAAc,2IAAA,CAAA,UAAI;IAClB,YAAY,2IAAA,CAAA,UAAI;IAChB,QAAQ;QACN,IAAI,SAAS;YAAC;gBAAC;gBAAI;aAAG;YAAE;gBAAC;gBAAI;aAAG;SAAC;QACjC,KAAK,KAAK,CAAC,CAAC,KAAK,KAAK,QAAQ;QAC9B,OAAO;IACT;AACF;AAEA,SAAS,YAAY,CAAC,EAAE,CAAC;IACvB,IAAI,IAAI,IAAI,KAAK;IACjB,IAAI,IAAI,IAAI,KAAK;IACjB,IAAI,IAAI,IAAI,KAAK;IACjB,IAAI,IAAI,IAAI,KAAK;AACnB;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 1667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1673, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/path/centroid.js"],"sourcesContent":["import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n"],"names":[],"mappings":";;;AAAA;;AAEA,uEAAuE;AAEvE,IAAI,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KACA,KACA,IACA;AAEJ,IAAI,iBAAiB;IACnB,OAAO;IACP,WAAW;IACX,SAAS;IACT,cAAc;QACZ,eAAe,SAAS,GAAG;QAC3B,eAAe,OAAO,GAAG;IAC3B;IACA,YAAY;QACV,eAAe,KAAK,GAAG;QACvB,eAAe,SAAS,GAAG;QAC3B,eAAe,OAAO,GAAG;IAC3B;IACA,QAAQ;QACN,IAAI,WAAW,KAAK;YAAC,KAAK;YAAI,KAAK;SAAG,GAChC,KAAK;YAAC,KAAK;YAAI,KAAK;SAAG,GACvB,KAAK;YAAC,KAAK;YAAI,KAAK;SAAG,GACvB;YAAC;YAAK;SAAI;QAChB,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK,KAAK;QACf,OAAO;IACT;AACF;AAEA,SAAS,cAAc,CAAC,EAAE,CAAC;IACzB,MAAM;IACN,MAAM;IACN,EAAE;AACJ;AAEA,SAAS;IACP,eAAe,KAAK,GAAG;AACzB;AAEA,SAAS,uBAAuB,CAAC,EAAE,CAAC;IAClC,eAAe,KAAK,GAAG;IACvB,cAAc,KAAK,GAAG,KAAK;AAC7B;AAEA,SAAS,kBAAkB,CAAC,EAAE,CAAC;IAC7B,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,KAAK,KAAK,KAAK;IACtD,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI;IACrB,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI;IACrB,MAAM;IACN,cAAc,KAAK,GAAG,KAAK;AAC7B;AAEA,SAAS;IACP,eAAe,KAAK,GAAG;AACzB;AAEA,SAAS;IACP,eAAe,KAAK,GAAG;AACzB;AAEA,SAAS;IACP,kBAAkB,KAAK;AACzB;AAEA,SAAS,uBAAuB,CAAC,EAAE,CAAC;IAClC,eAAe,KAAK,GAAG;IACvB,cAAc,MAAM,KAAK,GAAG,MAAM,KAAK;AACzC;AAEA,SAAS,kBAAkB,CAAC,EAAE,CAAC;IAC7B,IAAI,KAAK,IAAI,IACT,KAAK,IAAI,IACT,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,KAAK,KAAK,KAAK;IAE5B,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI;IACrB,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI;IACrB,MAAM;IAEN,IAAI,KAAK,IAAI,KAAK;IAClB,MAAM,IAAI,CAAC,KAAK,CAAC;IACjB,MAAM,IAAI,CAAC,KAAK,CAAC;IACjB,MAAM,IAAI;IACV,cAAc,KAAK,GAAG,KAAK;AAC7B;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 1755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1761, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/path/context.js"],"sourcesContent":["import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEe,SAAS,YAAY,OAAO;IACzC,IAAI,CAAC,QAAQ,GAAG;AAClB;AAEA,YAAY,SAAS,GAAG;IACtB,SAAS;IACT,aAAa,SAAS,CAAC;QACrB,OAAO,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI;IAC/B;IACA,cAAc;QACZ,IAAI,CAAC,KAAK,GAAG;IACf;IACA,YAAY;QACV,IAAI,CAAC,KAAK,GAAG;IACf;IACA,WAAW;QACT,IAAI,CAAC,MAAM,GAAG;IAChB;IACA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS;QAC7C,IAAI,CAAC,MAAM,GAAG;IAChB;IACA,OAAO,SAAS,CAAC,EAAE,CAAC;QAClB,OAAQ,IAAI,CAAC,MAAM;YACjB,KAAK;gBAAG;oBACN,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG;oBACxB,IAAI,CAAC,MAAM,GAAG;oBACd;gBACF;YACA,KAAK;gBAAG;oBACN,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG;oBACxB;gBACF;YACA;gBAAS;oBACP,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;oBACvC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,2IAAA,CAAA,MAAG;oBAC5C;gBACF;QACF;IACF;IACA,QAAQ,2IAAA,CAAA,UAAI;AACd","ignoreList":[0]}},
    {"offset": {"line": 1812, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1818, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/path/measure.js"],"sourcesContent":["import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,IAAI,YAAY,CAAA,GAAA,4IAAA,CAAA,UAAK,AAAD,KAChB,YACA,KACA,KACA,IACA;AAEJ,IAAI,eAAe;IACjB,OAAO,2IAAA,CAAA,UAAI;IACX,WAAW;QACT,aAAa,KAAK,GAAG;IACvB;IACA,SAAS;QACP,IAAI,YAAY,YAAY,KAAK;QACjC,aAAa,KAAK,GAAG,2IAAA,CAAA,UAAI;IAC3B;IACA,cAAc;QACZ,aAAa;IACf;IACA,YAAY;QACV,aAAa;IACf;IACA,QAAQ;QACN,IAAI,SAAS,CAAC;QACd,UAAU,KAAK;QACf,OAAO;IACT;AACF;AAEA,SAAS,iBAAiB,CAAC,EAAE,CAAC;IAC5B,aAAa,KAAK,GAAG;IACrB,MAAM,KAAK,GAAG,MAAM,KAAK;AAC3B;AAEA,SAAS,YAAY,CAAC,EAAE,CAAC;IACvB,MAAM,GAAG,MAAM;IACf,UAAU,GAAG,CAAC,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,KAAK,KAAK,KAAK;IAClC,KAAK,GAAG,KAAK;AACf;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 1859, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1865, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/path/string.js"],"sourcesContent":["export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n"],"names":[],"mappings":";;;AAAe,SAAS;IACtB,IAAI,CAAC,OAAO,GAAG,EAAE;AACnB;AAEA,WAAW,SAAS,GAAG;IACrB,SAAS;IACT,SAAS,OAAO;IAChB,aAAa,SAAS,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG;QAChE,OAAO,IAAI;IACb;IACA,cAAc;QACZ,IAAI,CAAC,KAAK,GAAG;IACf;IACA,YAAY;QACV,IAAI,CAAC,KAAK,GAAG;IACf;IACA,WAAW;QACT,IAAI,CAAC,MAAM,GAAG;IAChB;IACA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG;IAChB;IACA,OAAO,SAAS,CAAC,EAAE,CAAC;QAClB,OAAQ,IAAI,CAAC,MAAM;YACjB,KAAK;gBAAG;oBACN,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK;oBAC/B,IAAI,CAAC,MAAM,GAAG;oBACd;gBACF;YACA,KAAK;gBAAG;oBACN,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK;oBAC/B;gBACF;YACA;gBAAS;oBACP,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC,OAAO;oBAC5D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO;oBAC9C;gBACF;QACF;IACF;IACA,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACvB,IAAI,SAAS,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,EAAE;YACjB,OAAO;QACT,OAAO;YACL,OAAO;QACT;IACF;AACF;AAEA,SAAS,OAAO,MAAM;IACpB,OAAO,QAAQ,SACT,MAAM,SAAS,MAAM,SAAS,cAAc,CAAC,IAAI,SACjD,MAAM,SAAS,MAAM,SAAS,cAAc,IAAI,SAChD;AACR","ignoreList":[0]}},
    {"offset": {"line": 1925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1931, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/path/index.js"],"sourcesContent":["import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEe,wCAAS,UAAU,EAAE,OAAO;IACzC,IAAI,cAAc,KACd,kBACA;IAEJ,SAAS,KAAK,MAAM;QAClB,IAAI,QAAQ;YACV,IAAI,OAAO,gBAAgB,YAAY,cAAc,WAAW,CAAC,CAAC,YAAY,KAAK,CAAC,IAAI,EAAE;YAC1F,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE,QAAQ,iBAAiB;QAClC;QACA,OAAO,cAAc,MAAM;IAC7B;IAEA,KAAK,IAAI,GAAG,SAAS,MAAM;QACzB,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE,QAAQ,iBAAiB,mJAAA,CAAA,UAAQ;QACxC,OAAO,mJAAA,CAAA,UAAQ,CAAC,MAAM;IACxB;IAEA,KAAK,OAAO,GAAG,SAAS,MAAM;QAC5B,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE,QAAQ,iBAAiB,sJAAA,CAAA,UAAW;QAC3C,OAAO,sJAAA,CAAA,UAAW,CAAC,MAAM;IAC3B;IAEA,KAAK,MAAM,GAAG,SAAS,MAAM;QAC3B,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE,QAAQ,iBAAiB,qJAAA,CAAA,UAAU;QAC1C,OAAO,qJAAA,CAAA,UAAU,CAAC,MAAM;IAC1B;IAEA,KAAK,QAAQ,GAAG,SAAS,MAAM;QAC7B,CAAA,GAAA,6IAAA,CAAA,UAAM,AAAD,EAAE,QAAQ,iBAAiB,uJAAA,CAAA,UAAY;QAC5C,OAAO,uJAAA,CAAA,UAAY,CAAC,MAAM;IAC5B;IAEA,KAAK,UAAU,GAAG,SAAS,CAAC;QAC1B,OAAO,UAAU,MAAM,GAAG,CAAC,mBAAmB,KAAK,OAAO,CAAC,aAAa,MAAM,+IAAA,CAAA,UAAQ,IAAI,CAAC,aAAa,CAAC,EAAE,MAAM,EAAE,IAAI,IAAI;IAC7H;IAEA,KAAK,OAAO,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,UAAU,MAAM,EAAE,OAAO;QAC9B,gBAAgB,KAAK,OAAO,CAAC,UAAU,MAAM,IAAI,qJAAA,CAAA,UAAU,IAAI,IAAI,sJAAA,CAAA,UAAW,CAAC,UAAU;QACzF,IAAI,OAAO,gBAAgB,YAAY,cAAc,WAAW,CAAC;QACjE,OAAO;IACT;IAEA,KAAK,WAAW,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,MAAM,EAAE,OAAO;QAC9B,cAAc,OAAO,MAAM,aAAa,IAAI,CAAC,cAAc,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9E,OAAO;IACT;IAEA,OAAO,KAAK,UAAU,CAAC,YAAY,OAAO,CAAC;AAC7C","ignoreList":[0]}},
    {"offset": {"line": 1991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1997, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/clip/index.js"],"sourcesContent":["import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2120, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/clip/antimeridian.js"],"sourcesContent":["import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2208, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/clip/circle.js"],"sourcesContent":["import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 â¨¯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2365, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/transform.js"],"sourcesContent":["export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n"],"names":[],"mappings":";;;;AAAe,wCAAS,OAAO;IAC7B,OAAO;QACL,QAAQ,YAAY;IACtB;AACF;AAEO,SAAS,YAAY,OAAO;IACjC,OAAO,SAAS,MAAM;QACpB,IAAI,IAAI,IAAI;QACZ,IAAK,IAAI,OAAO,QAAS,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;QAC9C,EAAE,MAAM,GAAG;QACX,OAAO;IACT;AACF;AAEA,SAAS,mBAAmB;AAE5B,gBAAgB,SAAS,GAAG;IAC1B,aAAa;IACb,OAAO,SAAS,CAAC,EAAE,CAAC;QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG;IAAI;IACjD,QAAQ;QAAa,IAAI,CAAC,MAAM,CAAC,MAAM;IAAI;IAC3C,WAAW;QAAa,IAAI,CAAC,MAAM,CAAC,SAAS;IAAI;IACjD,SAAS;QAAa,IAAI,CAAC,MAAM,CAAC,OAAO;IAAI;IAC7C,cAAc;QAAa,IAAI,CAAC,MAAM,CAAC,YAAY;IAAI;IACvD,YAAY;QAAa,IAAI,CAAC,MAAM,CAAC,UAAU;IAAI;AACrD","ignoreList":[0]}},
    {"offset": {"line": 2404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2410, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/fit.js"],"sourcesContent":["import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,UAAU,UAAU,EAAE,MAAM,EAAE,MAAM;IAClD,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,EAC/B,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,EAAE,EAC/B,OAAO,WAAW,UAAU,IAAI,WAAW,UAAU;IAEzD,WACK,KAAK,CAAC,KACN,SAAS,CAAC;QAAC;QAAG;KAAE;IAErB,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;IAExC,CAAA,GAAA,6IAAA,CAAA,UAAS,AAAD,EAAE,QAAQ,WAAW,MAAM,CAAC,qJAAA,CAAA,UAAY;IAEhD,IAAI,IAAI,qJAAA,CAAA,UAAY,CAAC,MAAM,IACvB,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAC5D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GACpD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI;IAExD,IAAI,QAAQ,MAAM,WAAW,UAAU,CAAC;IAExC,OAAO,WACF,KAAK,CAAC,IAAI,KACV,SAAS,CAAC;QAAC;QAAG;KAAE;AACvB;AAEO,SAAS,QAAQ,UAAU,EAAE,IAAI,EAAE,MAAM;IAC9C,OAAO,UAAU,YAAY;QAAC;YAAC;YAAG;SAAE;QAAE;KAAK,EAAE;AAC/C","ignoreList":[0]}},
    {"offset": {"line": 2442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2448, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/resample.js"],"sourcesContent":["import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2536, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/index.js"],"sourcesContent":["import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2670, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/conic.js"],"sourcesContent":["import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,gBAAgB,SAAS;IACvC,IAAI,OAAO,GACP,OAAO,2IAAA,CAAA,KAAE,GAAG,GACZ,IAAI,CAAA,GAAA,0JAAA,CAAA,oBAAiB,AAAD,EAAE,YACtB,IAAI,EAAE,MAAM;IAEhB,EAAE,SAAS,GAAG,SAAS,CAAC;QACtB,OAAO,UAAU,MAAM,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,2IAAA,CAAA,UAAO,IAAI;YAAC,OAAO,2IAAA,CAAA,UAAO;YAAE,OAAO,2IAAA,CAAA,UAAO;SAAC;IAC9G;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 2687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2693, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/cylindricalEqualArea.js"],"sourcesContent":["import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,wBAAwB,IAAI;IAC1C,IAAI,UAAU,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;IAElB,SAAS,QAAQ,MAAM,EAAE,GAAG;QAC1B,OAAO;YAAC,SAAS;YAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,OAAO;SAAQ;IAC/C;IAEA,QAAQ,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;QAC5B,OAAO;YAAC,IAAI;YAAS,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI;SAAS;IACzC;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 2714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2720, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/conicEqualArea.js"],"sourcesContent":["import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,SAAS,kBAAkB,EAAE,EAAE,EAAE;IACtC,IAAI,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,IAAI,CAAC,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,GAAG,IAAI;IAEzC,oDAAoD;IACpD,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,2IAAA,CAAA,UAAO,EAAE,OAAO,CAAA,GAAA,yKAAA,CAAA,0BAAuB,AAAD,EAAE;IAErD,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,GAAG,GAAG,KAAK,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,KAAK;IAEhD,SAAS,QAAQ,CAAC,EAAE,CAAC;QACnB,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM;QACnC,OAAO;YAAC,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK;YAAI,KAAK,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;SAAG;IAC3C;IAEA,QAAQ,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;QAC5B,IAAI,MAAM,KAAK;QACf,OAAO;YAAC,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE;YAAM,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;SAAG;IAChG;IAEA,OAAO;AACT;AAEe;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAD,EAAE,mBAClB,KAAK,CAAC,SACN,MAAM,CAAC;QAAC;QAAG;KAAQ;AAC1B","ignoreList":[0]}},
    {"offset": {"line": 2757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2763, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/albers.js"],"sourcesContent":["import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEe;IACb,OAAO,CAAA,GAAA,mKAAA,CAAA,UAAc,AAAD,IACf,SAAS,CAAC;QAAC;QAAM;KAAK,EACtB,KAAK,CAAC,MACN,SAAS,CAAC;QAAC;QAAK;KAAI,EACpB,MAAM,CAAC;QAAC;QAAI;KAAE,EACd,MAAM,CAAC;QAAC,CAAC;QAAK;KAAK;AAC1B","ignoreList":[0]}},
    {"offset": {"line": 2783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2789, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/albersUsa.js"],"sourcesContent":["import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960Ã—500. The projection also works quite well at 960Ã—600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2936, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2942, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/azimuthal.js"],"sourcesContent":["import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,aAAa,KAAK;IAChC,OAAO,SAAS,CAAC,EAAE,CAAC;QAClB,IAAI,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IACT,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IACT,IAAI,MAAM,KAAK;QACnB,OAAO;YACL,IAAI,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;YACb,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;SACT;IACH;AACF;AAEO,SAAS,gBAAgB,KAAK;IACnC,OAAO,SAAS,CAAC,EAAE,CAAC;QAClB,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,IAAI,IAAI,IACrB,IAAI,MAAM,IACV,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IACT,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;QACb,OAAO;YACL,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,IAAI,IAAI,IAAI;YAClB,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,KAAK,IAAI,KAAK;SACpB;IACH;AACF","ignoreList":[0]}},
    {"offset": {"line": 2966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2972, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/azimuthalEqualArea.js"],"sourcesContent":["import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,IAAI,wBAAwB,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE,SAAS,IAAI;IAC3D,OAAO,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,CAAC,IAAI,IAAI;AAC3B;AAEA,sBAAsB,MAAM,GAAG,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE,SAAS,CAAC;IACvD,OAAO,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI;AACtB;AAEe;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,uBACb,KAAK,CAAC,QACN,SAAS,CAAC,MAAM;AACvB","ignoreList":[0]}},
    {"offset": {"line": 2991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2997, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/azimuthalEquidistant.js"],"sourcesContent":["import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,IAAI,0BAA0B,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE,SAAS,CAAC;IAC1D,OAAO,CAAC,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,EAAE,KAAK,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;AAClC;AAEA,wBAAwB,MAAM,GAAG,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE,SAAS,CAAC;IACzD,OAAO;AACT;AAEe;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,yBACb,KAAK,CAAC,SACN,SAAS,CAAC,MAAM;AACvB","ignoreList":[0]}},
    {"offset": {"line": 3016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3022, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/mercator.js"],"sourcesContent":["import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,YAAY,MAAM,EAAE,GAAG;IACrC,OAAO;QAAC;QAAQ,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,CAAC,2IAAA,CAAA,SAAM,GAAG,GAAG,IAAI;KAAI;AAC/C;AAEA,YAAY,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;IAChC,OAAO;QAAC;QAAG,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM,2IAAA,CAAA,SAAM;KAAC;AACvC;AAEe;IACb,OAAO,mBAAmB,aACrB,KAAK,CAAC,MAAM,2IAAA,CAAA,MAAG;AACtB;AAEO,SAAS,mBAAmB,OAAO;IACxC,IAAI,IAAI,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,UACf,SAAS,EAAE,MAAM,EACjB,QAAQ,EAAE,KAAK,EACf,YAAY,EAAE,SAAS,EACvB,aAAa,EAAE,UAAU,EACzB,KAAK,MAAM,IAAI,IAAI,IAAI,cAAc;IAEzC,EAAE,KAAK,GAAG,SAAS,CAAC;QAClB,OAAO,UAAU,MAAM,GAAG,CAAC,MAAM,IAAI,QAAQ,IAAI;IACnD;IAEA,EAAE,SAAS,GAAG,SAAS,CAAC;QACtB,OAAO,UAAU,MAAM,GAAG,CAAC,UAAU,IAAI,QAAQ,IAAI;IACvD;IAEA,EAAE,MAAM,GAAG,SAAS,CAAC;QACnB,OAAO,UAAU,MAAM,GAAG,CAAC,OAAO,IAAI,QAAQ,IAAI;IACpD;IAEA,EAAE,UAAU,GAAG,SAAS,CAAC;QACvB,OAAO,UAAU,MAAM,GAAG,CAAC,AAAC,KAAK,OAAO,KAAK,KAAK,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAI,QAAQ,IAAI,MAAM,OAAO,OAAO;YAAC;gBAAC;gBAAI;aAAG;YAAE;gBAAC;gBAAI;aAAG;SAAC;IACxL;IAEA,SAAS;QACP,IAAI,IAAI,2IAAA,CAAA,KAAE,GAAG,SACT,IAAI,EAAE,CAAA,GAAA,+IAAA,CAAA,UAAQ,AAAD,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC;YAAC;YAAG;SAAE;QAC5C,OAAO,WAAW,MAAM,OAClB;YAAC;gBAAC,CAAC,CAAC,EAAE,GAAG;gBAAG,CAAC,CAAC,EAAE,GAAG;aAAE;YAAE;gBAAC,CAAC,CAAC,EAAE,GAAG;gBAAG,CAAC,CAAC,EAAE,GAAG;aAAE;SAAC,GAAG,YAAY,cAC3D;YAAC;gBAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG;gBAAK;aAAG;YAAE;gBAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG;gBAAK;aAAG;SAAC,GAC5D;YAAC;gBAAC;gBAAI,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG;aAAI;YAAE;gBAAC;gBAAI,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG;aAAI;SAAC;IACpE;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 3107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3113, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/conicConformal.js"],"sourcesContent":["import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,SAAS,KAAK,CAAC;IACb,OAAO,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,CAAC,2IAAA,CAAA,SAAM,GAAG,CAAC,IAAI;AAC5B;AAEO,SAAS,kBAAkB,EAAE,EAAE,EAAE;IACtC,IAAI,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KACV,IAAI,OAAO,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,OAAO,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,MAAM,KAAK,MACnE,IAAI,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,KAAK,KAAK;IAEjC,IAAI,CAAC,GAAG,OAAO,6JAAA,CAAA,cAAW;IAE1B,SAAS,QAAQ,CAAC,EAAE,CAAC;QACnB,IAAI,IAAI,GAAG;YAAE,IAAI,IAAI,CAAC,2IAAA,CAAA,SAAM,GAAG,2IAAA,CAAA,UAAO,EAAE,IAAI,CAAC,2IAAA,CAAA,SAAM,GAAG,2IAAA,CAAA,UAAO;QAAE,OAC1D;YAAE,IAAI,IAAI,2IAAA,CAAA,SAAM,GAAG,2IAAA,CAAA,UAAO,EAAE,IAAI,2IAAA,CAAA,SAAM,GAAG,2IAAA,CAAA,UAAO;QAAE;QACvD,IAAI,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,IAAI;QACzB,OAAO;YAAC,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IAAI;YAAI,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IAAI;SAAG;IAC7C;IAEA,QAAQ,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;QAC5B,IAAI,KAAK,IAAI,GAAG,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,KAAK,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,IAAI,KAAK;QAChD,OAAO;YAAC,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,OAAO,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE;YAAK,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IAAI,GAAG,IAAI,MAAM,2IAAA,CAAA,SAAM;SAAC;IACjF;IAEA,OAAO;AACT;AAEe;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAD,EAAE,mBAClB,KAAK,CAAC,OACN,SAAS,CAAC;QAAC;QAAI;KAAG;AACzB","ignoreList":[0]}},
    {"offset": {"line": 3156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3162, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/equirectangular.js"],"sourcesContent":["import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,mBAAmB,MAAM,EAAE,GAAG;IAC5C,OAAO;QAAC;QAAQ;KAAI;AACtB;AAEA,mBAAmB,MAAM,GAAG;AAEb;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,oBACb,KAAK,CAAC;AACb","ignoreList":[0]}},
    {"offset": {"line": 3178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3184, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/conicEquidistant.js"],"sourcesContent":["import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,SAAS,oBAAoB,EAAE,EAAE,EAAE;IACxC,IAAI,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KACV,IAAI,OAAO,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM,CAAC,MAAM,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,GACpD,IAAI,MAAM,IAAI;IAElB,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,2IAAA,CAAA,UAAO,EAAE,OAAO,oKAAA,CAAA,qBAAkB;IAE/C,SAAS,QAAQ,CAAC,EAAE,CAAC;QACnB,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI;QACzB,OAAO;YAAC,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;YAAK,IAAI,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;SAAI;IACzC;IAEA,QAAQ,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;QAC5B,IAAI,KAAK,IAAI;QACb,OAAO;YAAC,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,OAAO,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE;YAAK,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,KAAK,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,IAAI,IAAI,KAAK;SAAI;IAChF;IAEA,OAAO;AACT;AAEe;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAD,EAAE,qBAClB,KAAK,CAAC,SACN,MAAM,CAAC;QAAC;QAAG;KAAQ;AAC1B","ignoreList":[0]}},
    {"offset": {"line": 3219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3225, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/gnomonic.js"],"sourcesContent":["import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,SAAS,YAAY,CAAC,EAAE,CAAC;IAC9B,IAAI,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK;IAC9B,OAAO;QAAC,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK;QAAG,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK;KAAE;AACtC;AAEA,YAAY,MAAM,GAAG,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE,2IAAA,CAAA,OAAI;AAE1B;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,aACb,KAAK,CAAC,SACN,SAAS,CAAC;AACjB","ignoreList":[0]}},
    {"offset": {"line": 3246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3252, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/identity.js"],"sourcesContent":["import {clipExtent} from \"../clip/extent\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEA,SAAS,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACpC,OAAO,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,IAAI,+IAAA,CAAA,UAAQ,GAAG,CAAA,GAAA,gJAAA,CAAA,cAAW,AAAD,EAAE;QAC3E,OAAO,SAAS,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK;QAC1C;IACF;AACF;AAEe;IACb,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,YAAY,+IAAA,CAAA,UAAQ,EAC3D,KAAK,MAAM,IAAI,IAAI,IAAI,OAAO,+IAAA,CAAA,UAAQ,EACtC,OACA,aACA;IAEJ,SAAS;QACP,QAAQ,cAAc;QACtB,OAAO;IACT;IAEA,OAAO,aAAa;QAClB,QAAQ,SAAS,MAAM;YACrB,OAAO,SAAS,gBAAgB,SAAS,QAAQ,QAAQ,UAAU,KAAK,cAAc;QACxF;QACA,YAAY,SAAS,CAAC;YACpB,OAAO,UAAU,MAAM,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,KAAK,KAAK,KAAK,MAAM,+IAAA,CAAA,UAAQ,IAAI,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,OAAO,IAAI,MAAM,OAAO,OAAO;gBAAC;oBAAC;oBAAI;iBAAG;gBAAE;oBAAC;oBAAI;iBAAG;aAAC;QAClN;QACA,OAAO,SAAS,CAAC;YACf,OAAO,UAAU,MAAM,GAAG,CAAC,YAAY,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,OAAO,IAAI;QACnG;QACA,WAAW,SAAS,CAAC;YACnB,OAAO,UAAU,MAAM,GAAG,CAAC,YAAY,eAAe,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,IAAI;gBAAC;gBAAI;aAAG;QACpH;QACA,UAAU,SAAS,CAAC;YAClB,OAAO,UAAU,MAAM,GAAG,CAAC,YAAY,eAAe,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK,OAAO,IAAI,KAAK;QAChH;QACA,UAAU,SAAS,CAAC;YAClB,OAAO,UAAU,MAAM,GAAG,CAAC,YAAY,eAAe,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,OAAO,IAAI,KAAK;QAChH;QACA,WAAW,SAAS,MAAM,EAAE,MAAM;YAChC,OAAO,CAAA,GAAA,wJAAA,CAAA,YAAS,AAAD,EAAE,YAAY,QAAQ;QACvC;QACA,SAAS,SAAS,IAAI,EAAE,MAAM;YAC5B,OAAO,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,YAAY,MAAM;QACnC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 3315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3321, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/naturalEarth1.js"],"sourcesContent":["import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,iBAAiB,MAAM,EAAE,GAAG;IAC1C,IAAI,OAAO,MAAM,KAAK,OAAO,OAAO;IACpC,OAAO;QACL,SAAS,CAAC,SAAS,WAAW,OAAO,OAAO,CAAC,CAAC,WAAW,OAAO,CAAC,WAAW,OAAO,WAAW,IAAI,CAAC,CAAC;QACpG,MAAM,CAAC,WAAW,OAAO,CAAC,WAAW,OAAO,CAAC,CAAC,WAAW,WAAW,OAAO,WAAW,IAAI,CAAC,CAAC;KAC7F;AACH;AAEA,iBAAiB,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;IACrC,IAAI,MAAM,GAAG,IAAI,IAAI;IACrB,GAAG;QACD,IAAI,OAAO,MAAM,KAAK,OAAO,OAAO;QACpC,OAAO,QAAQ,CAAC,MAAM,CAAC,WAAW,OAAO,CAAC,WAAW,OAAO,CAAC,CAAC,WAAW,WAAW,OAAO,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,IAC7G,CAAC,WAAW,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,WAAW,IAAI,WAAW,IAAI,OAAO,WAAW,KAAK,IAAI,CAAC,CAAC;IAC7G,QAAS,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,SAAS,2IAAA,CAAA,UAAO,IAAI,EAAE,IAAI,EAAG;IAC1C,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,OAAO,MAAM,GAAG,IAAI,CAAC,CAAC,WAAW,OAAO,CAAC,CAAC,WAAW,OAAO,OAAO,OAAO,CAAC,WAAW,WAAW,IAAI,CAAC,CAAC,CAAC;QACvH;KACD;AACH;AAEe;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,kBACb,KAAK,CAAC;AACb","ignoreList":[0]}},
    {"offset": {"line": 3350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3356, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/orthographic.js"],"sourcesContent":["import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,SAAS,gBAAgB,CAAC,EAAE,CAAC;IAClC,OAAO;QAAC,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;QAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE;KAAG;AAClC;AAEA,gBAAgB,MAAM,GAAG,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE,2IAAA,CAAA,OAAI;AAE9B;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,iBACb,KAAK,CAAC,OACN,SAAS,CAAC,KAAK,2IAAA,CAAA,UAAO;AAC7B","ignoreList":[0]}},
    {"offset": {"line": 3376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3382, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/stereographic.js"],"sourcesContent":["import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,SAAS,iBAAiB,CAAC,EAAE,CAAC;IACnC,IAAI,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,IAAI,IAAI,IAAI,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK;IAClC,OAAO;QAAC,KAAK,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK;QAAG,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,KAAK;KAAE;AACtC;AAEA,iBAAiB,MAAM,GAAG,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE,SAAS,CAAC;IAClD,OAAO,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE;AAClB;AAEe;IACb,OAAO,CAAA,GAAA,0JAAA,CAAA,UAAU,AAAD,EAAE,kBACb,KAAK,CAAC,KACN,SAAS,CAAC;AACjB","ignoreList":[0]}},
    {"offset": {"line": 3405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3411, "column": 0}, "map": {"version":3,"sources":["file:///Users/Nathan/Library/CloudStorage/Dropbox/Tech/projects/mapapp/node_modules/d3-geo/src/projection/transverseMercator.js"],"sourcesContent":["import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,sBAAsB,MAAM,EAAE,GAAG;IAC/C,OAAO;QAAC,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,CAAC,2IAAA,CAAA,SAAM,GAAG,GAAG,IAAI;QAAK,CAAC;KAAO;AAChD;AAEA,sBAAsB,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;IAC1C,OAAO;QAAC,CAAC;QAAG,IAAI,CAAA,GAAA,2IAAA,CAAA,OAAI,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,MAAG,AAAD,EAAE,MAAM,2IAAA,CAAA,SAAM;KAAC;AACxC;AAEe;IACb,IAAI,IAAI,CAAA,GAAA,6JAAA,CAAA,qBAAkB,AAAD,EAAE,wBACvB,SAAS,EAAE,MAAM,EACjB,SAAS,EAAE,MAAM;IAErB,EAAE,MAAM,GAAG,SAAS,CAAC;QACnB,OAAO,UAAU,MAAM,GAAG,OAAO;YAAC,CAAC,CAAC,CAAC,EAAE;YAAE,CAAC,CAAC,EAAE;SAAC,IAAI,CAAC,IAAI,UAAU;YAAC,CAAC,CAAC,EAAE;YAAE,CAAC,CAAC,CAAC,EAAE;SAAC;IAChF;IAEA,EAAE,MAAM,GAAG,SAAS,CAAC;QACnB,OAAO,UAAU,MAAM,GAAG,OAAO;YAAC,CAAC,CAAC,EAAE;YAAE,CAAC,CAAC,EAAE;YAAE,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,KAAK;SAAG,IAAI,CAAC,IAAI,UAAU;YAAC,CAAC,CAAC,EAAE;YAAE,CAAC,CAAC,EAAE;YAAE,CAAC,CAAC,EAAE,GAAG;SAAG;IACxH;IAEA,OAAO,OAAO;QAAC;QAAG;QAAG;KAAG,EACnB,KAAK,CAAC;AACb","ignoreList":[0]}},
    {"offset": {"line": 3459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 3496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}